using ImageMagick;
using Ionic.Zlib;
using Minecraft_Tools.Properties;
using Substrate_Jupisoft.Core;
using Substrate_Jupisoft.Nbt;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Drawing.Imaging;
using System.IO;
using System.Linq;
using System.Resources;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Minecraft_Tools
{
    internal static class Minecraft
    {
        /// <summary>
        /// Enumeration used to identify the method needed to obtain a certain block inside Minecraft.
        /// </summary>
        internal enum Obtenciones : byte
        {
            /// <summary>
            /// The block can be obtained in survival mode and in any other possible way.
            /// </summary>
            Survival = 0,
            /// <summary>
            /// The block can only be obtained in creative mode, through commands or with the use of external editors like this application.
            /// </summary>
            Creative,
            /// <summary>
            /// The block can only be obtained through commands or with the use of external editors like this application.
            /// </summary>
            Cheats
        }

        /// <summary>
        /// Enumeration used to identify the transparency type inside a texture.
        /// </summary>
        internal enum Transparencias : byte
        {
            /// <summary>
            /// The texture of a block is fully opaque (alpha value of 255).
            /// </summary>
            Solid = 0,
            /// <summary>
            /// The texture of a block at least has a pixel partially or fully transparent (alpha value of less than 255).
            /// </summary>
            Semitransparent,
            /// <summary>
            /// The texture of a block at least has a pixel fully transparent (alpha value of 0).
            /// </summary>
            Transparent
        }

        /// <summary>
        /// Enumeration that contains all the category tabs from the creative inventory.
        /// </summary>
        internal enum Categorías : int
        {
            Building_blocks = 0,
            Decoration_blocks,
            Redstone,
            Transportation,
            Miscellaneous,
            Foodstuffs,
            Tools,
            Combat,
            Brewing,
            //Saved_toolbars,
            //Search_items,
            //Survival_inventory,
            Unknown
        }

        /// <summary>
        /// Structure that holds up all the information about any Minecraft block.
        /// </summary>
        [StructLayout(LayoutKind.Sequential)]
        internal struct Bloques
        {
            /// <summary>
            /// Index used only to identify blocks internally by the application.
            /// </summary>
            internal short Índice;
            /// <summary>
            /// The name of a Minecraft block.
            /// </summary>
            internal string Nombre;
            /// <summary>
            /// The name of a Minecraft block.
            /// </summary>
            internal string Nombre_1_13;
            /// <summary>
            /// The Minecraft 1.13+ original name of a block.
            /// </summary>
            internal string Recurso;
            /// <summary>
            /// The Minecraft 1.12.2- ID of a block (ranges from 0 to 255 and it combines with Data to have up to 4096 possible blocks).
            /// </summary>
            internal List<byte> Lista_ID;
            /// <summary>
            /// The Minecraft 1.12.2- Data of a block (ranges from 0 to 15 and it combines with ID to have up to 4096 possible blocks). It includes all the possible combinations to ensure a valid conversion, so if not sure which value should be used, use always the first Data value from the list. If this list is null then this block didn't exist in Minecraft 1.12.2-.
            /// </summary>
            internal List<byte> Lista_Data;
            /// <summary>
            /// The Minecraft 1.12.2- default ID and Data combined values.
            /// </summary>
            internal short ID_Data;
            /// <summary>
            /// The category of a Minecraft block inside the creative inventory tabs.
            /// </summary>
            internal Categorías Categoría;
            /// <summary>
            /// The average ARGB color of a Minecraft texture, useful when drawing maps or doing pixel art where 1 pixel equals 1 block.
            /// </summary>
            internal Color Color_ARGB;
            /// <summary>
            /// The average ARGB color without transparency of a Minecraft texture, useful when drawing maps or doing pixel art where 1 pixel equals 1 block.
            /// </summary>
            internal Color Color_ARGB_Sólido;
            /// <summary>
            /// The unique hash code of an ARGB color, used to quickly identify if this color has already been used.
            /// </summary>
            internal int Código_Hash_Color;
            /// <summary>
            /// The unique hash code of an ARGB color without transparency, used to quickly identify if this color has already been used.
            /// </summary>
            internal int Código_Hash_Color_Sólido;
            /// <summary>
            /// If it's true then this block has a size inferior to 1 block or superior to 1 block (examples are: beds, doors, farmland, chests, buttons, plants, stairs, slabs, water, lava, etc). If it's false then block has a size of 1 block (examples are: stones, dirts, ores, logs, leaves, planks, obsidian, clay, sands, ice, etc).
            /// </summary>
            internal bool Altura_Diferente;
            /// <summary>
            /// Indicates what minimum game mode is needed to obtain a block the legit way.
            /// </summary>
            internal Obtenciones Obtención;
            /// <summary>
            /// The original Minecraft texture of a block, converted to 16 x 16 pixels and in some cases adjusted to see the block better.
            /// </summary>
            internal Bitmap Imagen_Textura;
            /// <summary>
            /// Indicates the maximum transparency of the texture of a block, useful when drawing blocks below it or when doing pixel art.
            /// </summary>
            internal Transparencias Transparencia;
            /// <summary>
            /// Indicates if a block has been deprecated and no longer exists in the newer Minecraft versions.
            /// </summary>
            internal bool Obsoleto;

            /// <summary>
            /// Generates a new structure with the specified block settings.
            /// </summary>
            /// <param name="Nombre_1_13">The Minecraft 1.13+ name of a block.</param>
            /// <param name="Lista_ID">The Minecraft 1.12.2- ID of a block.</param>
            /// <param name="Lista_Data">The Minecraft 1.12.2- Data of a block inside a list.</param>
            /// <param name="Categoría">The category tab from Minecraft creative inventory.</param>
            /// <param name="Color_ARGB">The average ARGB color of a Minecraft texture.</param>
            /// <param name="Altura_Diferente">The identifier of blocks with a real size different than 1.</param>
            /// <param name="Obtención">The identifier of the legit way to obtain a block.</param>
            internal Bloques(string Nombre_1_13, List<byte> Lista_ID, List<byte> Lista_Data, Color Color_ARGB, bool Altura_Diferente, Obtenciones Obtención)
            {
                this = new Bloques(Nombre_1_13, null, Lista_ID, Lista_Data, Categorías.Unknown, Color_ARGB, Altura_Diferente, Obtención, false);
            }

            /// <summary>
            /// Generates a new structure with the specified block settings.
            /// </summary>
            /// <param name="Nombre_1_13">The Minecraft 1.13+ name of a block.</param>
            /// <param name="Lista_ID">The Minecraft 1.12.2- ID of a block.</param>
            /// <param name="Lista_Data">The Minecraft 1.12.2- Data of a block inside a list.</param>
            /// <param name="Categoría">The category tab from Minecraft creative inventory.</param>
            /// <param name="Color_ARGB">The average ARGB color of a Minecraft texture.</param>
            /// <param name="Altura_Diferente">The identifier of blocks with a real size different than 1.</param>
            /// <param name="Obtención">The identifier of the legit way to obtain a block.</param>
            /// <param name="Obsoleto">The identifier of no longer existing blocks.</param>
            internal Bloques(string Nombre_1_13, List<byte> Lista_ID, List<byte> Lista_Data, Color Color_ARGB, bool Altura_Diferente, Obtenciones Obtención, bool Obsoleto)
            {
                this = new Bloques(Nombre_1_13, null, Lista_ID, Lista_Data, Categorías.Unknown, Color_ARGB, Altura_Diferente, Obtención, Obsoleto);
            }

            /// <summary>
            /// Generates a new structure with the specified block settings.
            /// </summary>
            /// <param name="Nombre_1_13">The Minecraft 1.13+ name of a block.</param>
            /// <param name="Lista_ID">The Minecraft 1.12.2- ID of a block.</param>
            /// <param name="Lista_Data">The Minecraft 1.12.2- Data of a block inside a list.</param>
            /// <param name="Color_ARGB">The average ARGB color of a Minecraft texture.</param>
            /// <param name="Altura_Diferente">The identifier of blocks with a real size different than 1.</param>
            /// <param name="Obtención">The identifier of the legit way to obtain a block.</param>
            /// <param name="Obsoleto">The identifier of no longer existing blocks.</param>
            internal Bloques(string Nombre_1_13, string Recurso, List<byte> Lista_ID, List<byte> Lista_Data, Color Color_ARGB, bool Altura_Diferente, Obtenciones Obtención, bool Obsoleto)
            {
                this = new Bloques(Nombre_1_13, Recurso, Lista_ID, Lista_Data, Categorías.Unknown, Color_ARGB, Altura_Diferente, Obtención, Obsoleto);
            }

            /// <summary>
            /// Generates a new structure with the specified block settings.
            /// </summary>
            /// <param name="Nombre_1_13">The Minecraft 1.13+ name of a block.</param>
            /// <param name="Lista_ID">The Minecraft 1.12.2- ID of a block.</param>
            /// <param name="Lista_Data">The Minecraft 1.12.2- Data of a block inside a list.</param>
            /// <param name="Color_ARGB">The average ARGB color of a Minecraft texture.</param>
            /// <param name="Altura_Diferente">The identifier of blocks with a real size different than 1.</param>
            /// <param name="Obtención">The identifier of the legit way to obtain a block.</param>
            internal Bloques(string Nombre_1_13, List<byte> Lista_ID, List<byte> Lista_Data, Categorías Categoría, Color Color_ARGB, bool Altura_Diferente, Obtenciones Obtención)
            {
                this = new Bloques(Nombre_1_13, null, Lista_ID, Lista_Data, Categoría, Color_ARGB, Altura_Diferente, Obtención, false);
            }

            /// <summary>
            /// Generates a new structure with the specified block settings.
            /// </summary>
            /// <param name="Nombre_1_13">The Minecraft 1.13+ name of a block.</param>
            /// <param name="Lista_ID">The Minecraft 1.12.2- ID of a block.</param>
            /// <param name="Lista_Data">The Minecraft 1.12.2- Data of a block inside a list.</param>
            /// <param name="Color_ARGB">The average ARGB color of a Minecraft texture.</param>
            /// <param name="Altura_Diferente">The identifier of blocks with a real size different than 1.</param>
            /// <param name="Obtención">The identifier of the legit way to obtain a block.</param>
            /// <param name="Obsoleto">The identifier of no longer existing blocks.</param>
            internal Bloques(string Nombre_1_13, List<byte> Lista_ID, List<byte> Lista_Data, Categorías Categoría, Color Color_ARGB, bool Altura_Diferente, Obtenciones Obtención, bool Obsoleto)
            {
                this = new Bloques(Nombre_1_13, null, Lista_ID, Lista_Data, Categoría, Color_ARGB, Altura_Diferente, Obtención, Obsoleto);
            }

            /// <summary>
            /// Generates a new structure with the specified block settings.
            /// </summary>
            /// <param name="Nombre_1_13">The Minecraft 1.13+ name of a block.</param>
            /// <param name="Recurso">The resource name for the texture of this block. A "null" value will set it automatically based on the block name.</param>
            /// <param name="Lista_ID">The Minecraft 1.12.2- ID of a block.</param>
            /// <param name="Lista_Data">The Minecraft 1.12.2- Data of a block inside a list.</param>
            /// <param name="Categoría">The category tab from Minecraft creative inventory.</param>
            /// <param name="Color_ARGB">The average ARGB color of a Minecraft texture.</param>
            /// <param name="Altura_Diferente">The identifier of blocks with a real size different than 1.</param>
            /// <param name="Obtención">The identifier of the legit way to obtain a block.</param>
            /// <param name="Obsoleto">The identifier of no longer existing blocks.</param>
            internal Bloques(string Nombre_1_13, string Recurso, List<byte> Lista_ID, List<byte> Lista_Data, Categorías Categoría, Color Color_ARGB, bool Altura_Diferente, Obtenciones Obtención, bool Obsoleto)
            {
                this.Índice = Total_Bloques;
                this.Nombre = Nombre_1_13.Replace(' ', '_').Replace('~', '_').Replace('=', '_').Replace('+', '_').Replace('-', '_').Replace('\\', '_').Replace('/', '_').Replace(':', '_').Replace('*', '_').Replace('?', '_').Replace('\"', '_').Replace('<', '_').Replace('>', '_').Replace('|', '_').Replace('.', '_').ToLowerInvariant().Replace("minecraft_", null).Replace('_', ' ');
                this.Nombre = this.Nombre.Substring(0, 1).ToUpperInvariant() + this.Nombre.Substring(1);
                this.Nombre_1_13 = Nombre_1_13;
                if (!String.IsNullOrEmpty(Recurso)) this.Recurso = Recurso;
                else this.Recurso = Nombre_1_13.Replace(' ', '_').Replace('~', '_').Replace('=', '_').Replace('+', '_').Replace('-', '_').Replace('\\', '_').Replace('/', '_').Replace(':', '_').Replace('*', '_').Replace('?', '_').Replace('\"', '_').Replace('<', '_').Replace('>', '_').Replace('|', '_').Replace('.', '_');
                this.Lista_ID = Lista_ID;
                this.Lista_Data = Lista_Data;
                this.ID_Data = Obtener_Valor_ID_Data(Lista_ID != null && Lista_ID.Count > 0 ? Lista_ID[0] : (byte)0, Lista_Data != null && Lista_Data.Count > 0 ? Lista_Data[0] : (byte)0);
                this.Categoría = Categoría;
                this.Color_ARGB = Color_ARGB;
                this.Color_ARGB_Sólido = Color.FromArgb(255, Color_ARGB.R, Color_ARGB.G, Color_ARGB.B);
                this.Código_Hash_Color = Color_ARGB.GetHashCode();
                this.Código_Hash_Color_Sólido = this.Color_ARGB_Sólido.GetHashCode();
                this.Altura_Diferente = Altura_Diferente;
                this.Obtención = Obtención;
                this.Imagen_Textura = Program.Obtener_Imagen_Recursos(this.Recurso);
                this.Transparencia = Transparencias.Solid; // Default of a solid texture.
                if (this.Imagen_Textura != null) // Find the type of transparency of the texture right now, useful if unknown textures are ever added to the application.
                {
                    // This code assumes the internal textures are of 16 x 16 pixels and 32 bits ARGB.
                    BitmapData Bitmap_Data = (this.Imagen_Textura).LockBits(new Rectangle(0, 0, 16, 16), ImageLockMode.ReadOnly, PixelFormat.Format32bppArgb);
                    byte[] Matriz_Bytes = new byte[Math.Abs(Bitmap_Data.Stride) * 16];
                    Marshal.Copy(Bitmap_Data.Scan0, Matriz_Bytes, 0, Matriz_Bytes.Length);
                    Imagen_Textura.UnlockBits(Bitmap_Data);
                    Bitmap_Data = null;
                    for (int Y = 0, Índice = 0; Y < 16; Y++)
                    {
                        for (int X = 0; X < 16; X++, Índice += 4)
                        {
                            if (Matriz_Bytes[Índice + 3] <= 0)
                            {
                                this.Transparencia = Transparencias.Transparent;
                                break;
                            }
                            else if (Matriz_Bytes[Índice + 3] < 255)
                            {
                                this.Transparencia = Transparencias.Semitransparent;
                            }
                        }
                        if (this.Transparencia == Transparencias.Transparent) break;
                    }
                    Matriz_Bytes = null;
                }
                else this.Transparencia = Transparencias.Transparent;
                this.Obsoleto = Obsoleto;
                Total_Bloques++; // Increase in 1 the internal block index, so the next block will have a different one.
            }

            /*public bool Equals(Bloques Bloque)
            {
                //return this.x == bk.x && this.y == bk.y && this.z == bk.z;
                return false;
            }

            public override bool Equals(object Objeto)
            {
                try
                {
                    return this == (Bloques)Objeto;
                }
                catch
                {
                    return false;
                }
            }

            public override int GetHashCode()
            {
                return this.Índice;
            }

            public static bool operator ==(Bloques Bloque_1, Bloques Bloque_2)
            {
                /*try
                {
                    if (Bloque_1.Índice == Bloque_2.Índice &&
                        string.Compare(Bloque_1.Nombre, Bloque_2.Nombre, false) == 0 &&
                        Bloque_1.ID == Bloque_2.ID &&
                        Bloque_1.Data == Bloque_2.Data &&
                        Bloque_1.Código_Hash_Color_ARGB == Bloque_2.Código_Hash_Color_ARGB &&



                        )
                        return true;
                }
                catch (Exception Excepción) { Depurador.Escribir_Excepción(Excepción != null ? Excepción.ToString() : null); }
                *//*return false;
            }

            public static bool operator !=(Bloques Bloque_1, Bloques Bloque_2)
            {
                //return k1.x != k2.x || k1.y != k2.y || k1.z != k2.z;
                return false;
            }

            /// <summary>
            /// Function that 
            /// </summary>
            /// <returns></returns>
            internal bool IsEmpty()
            {
                try
                {
                    return string.IsNullOrEmpty(this.Nombre);
                }
                catch (Exception Excepción) { Depurador.Escribir_Excepción(Excepción != null ? Excepción.ToString() : null); }
                return true;
            }

            internal static Bloques Buscar_Bloque_Índice(short Índice)
            {
                try
                {
                    if (Matriz_Bloques != null && Matriz_Bloques.Length > 0)
                    {
                        foreach (Bloques Bloque in Matriz_Bloques)
                        {

                        }
                    }
                }
                catch (Exception Excepción) { Depurador.Escribir_Excepción(Excepción != null ? Excepción.ToString() : null); }
                return Empty;
            }

            internal static Bloques Buscar_Bloque_(object Objeto)
            {
                try
                {

                }
                catch (Exception Excepción) { Depurador.Escribir_Excepción(Excepción != null ? Excepción.ToString() : null); }
                return Empty;
            }

            internal static Bloques Buscar_Bloque_(object Objeto)
            {
                try
                {

                }
                catch (Exception Excepción) { Depurador.Escribir_Excepción(Excepción != null ? Excepción.ToString() : null); }
                return Empty;
            }*/

            //internal static readonly Bloques Empty = new Bloques();

            /// <summary>
            /// Index used only to identify blocks internally by the application.
            /// </summary>
            internal static short Total_Bloques = 0;

            /// <summary>
            /// Array that holds up all the Minecraft blocks information the application knows. If new blocks are going to be added, they should be added here before compiling the application.
            /// </summary>
            internal static /*readonly */Bloques[] Matriz_Bloques = new Bloques[]
            {
                new Bloques("minecraft:acacia_bark", null, null, null, Color.FromArgb(255, 104, 99, 89), false, Obtenciones.Survival, true),
                new Bloques("minecraft:acacia_button", null, null, Color.FromArgb(255, 168, 91, 50), true, Obtenciones.Survival),
                new Bloques("minecraft:acacia_door", new List<byte>(new byte[] { 196 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 161, 93, 58), true, Obtenciones.Survival),
                new Bloques("minecraft:acacia_fence", new List<byte>(new byte[] { 192 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 167, 90, 50), true, Obtenciones.Survival),
                new Bloques("minecraft:acacia_fence_gate", new List<byte>(new byte[] { 187 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 169, 91, 51), true, Obtenciones.Survival),
                new Bloques("minecraft:acacia_leaves", new List<byte>(new byte[] { 161 }), new List<byte>(new byte[] { 0, 2, 4, 6, 8, 10, 12, 14 }), Color.FromArgb(255, 169, 103, 76), false, Obtenciones.Survival),
                new Bloques("minecraft:acacia_log", new List<byte>(new byte[] { 162 }), new List<byte>(new byte[] { 0, 2, 4, 6, 8, 10, 12, 14 }), Color.FromArgb(255, 105, 99, 88), false, Obtenciones.Survival),
                new Bloques("minecraft:acacia_planks", new List<byte>(new byte[] { 5 }), new List<byte>(new byte[] { 4 }), Color.FromArgb(255, 169, 92, 51), false, Obtenciones.Survival),
                new Bloques("minecraft:acacia_pressure_plate", null, null, Color.FromArgb(255, 171, 92, 51), true, Obtenciones.Survival),
                new Bloques("minecraft:acacia_sapling", new List<byte>(new byte[] { 6 }), new List<byte>(new byte[] { 4, 12 }), Color.FromArgb(255, 115, 115, 20), true, Obtenciones.Survival),
                new Bloques("minecraft:acacia_sign", null, null, Color.FromArgb(255, 169, 95, 56), false, Obtenciones.Survival),
                new Bloques("minecraft:acacia_slab", new List<byte>(new byte[] { 126 }), new List<byte>(new byte[] { 4, 12 }), Color.FromArgb(255, 168, 92, 51), true, Obtenciones.Survival),
                new Bloques("minecraft:acacia_stairs", new List<byte>(new byte[] { 163 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 170, 92, 51), true, Obtenciones.Survival),
                new Bloques("minecraft:acacia_trapdoor", null, null, Color.FromArgb(255, 157, 87, 51), true, Obtenciones.Survival),
                new Bloques("minecraft:acacia_wall_sign", null, null, Color.FromArgb(255, 176, 96, 53), false, Obtenciones.Survival),
                new Bloques("minecraft:acacia_wood", null, null, Color.FromArgb(255, 105, 99, 89), false, Obtenciones.Survival),
                new Bloques("minecraft:activator_rail", new List<byte>(new byte[] { 157 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 104, 83, 71), true, Obtenciones.Survival),
                new Bloques("minecraft:air", new List<byte>(new byte[] { 0 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(0, 0, 0, 0), true, Obtenciones.Survival),
                new Bloques("minecraft:allium", new List<byte>(new byte[] { 38 }), new List<byte>(new byte[] { 2 }), Color.FromArgb(255, 197, 129, 251)/*Color.FromArgb(255, 178, 141, 211)*/, true, Obtenciones.Survival),
                new Bloques("minecraft:ancient_debris", null, null, Color.FromArgb(255, 96, 64, 56), false, Obtenciones.Survival),
                new Bloques("minecraft:andesite", new List<byte>(new byte[] { 1 }), new List<byte>(new byte[] { 5 }), Color.FromArgb(255, 131, 131, 131), false, Obtenciones.Survival),
                new Bloques("minecraft:andesite_slab", null, null, Color.FromArgb(255, 132, 132, 133), false, Obtenciones.Survival),
                new Bloques("minecraft:andesite_stairs", null, null, Color.FromArgb(255, 132, 132, 132), false, Obtenciones.Survival),
                new Bloques("minecraft:andesite_wall", null, null, Color.FromArgb(255, 131, 131, 132), false, Obtenciones.Survival),
                new Bloques("minecraft:anvil", new List<byte>(new byte[] { 145 }), new List<byte>(new byte[] { 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 65, 65, 65), true, Obtenciones.Survival),
                new Bloques("minecraft:attached_melon_stem", null, null, Color.FromArgb(255, 178, 159, 22), true, Obtenciones.Survival),
                new Bloques("minecraft:attached_pumpkin_stem", null, null, Color.FromArgb(255, 179, 159, 22), true, Obtenciones.Survival),
                new Bloques("minecraft:azure_bluet", new List<byte>(new byte[] { 38 }), new List<byte>(new byte[] { 3 }), Color.FromArgb(255, 228, 232, 213)/*Color.FromArgb(255, 162, 192, 139)*/, true, Obtenciones.Survival),
                new Bloques("minecraft:bamboo", null, null, Color.FromArgb(255, 79, 127, 24), false, Obtenciones.Survival),
                new Bloques("minecraft:bamboo_sapling", null, null, Color.FromArgb(255, 92, 89, 36), false, Obtenciones.Survival),
                new Bloques("minecraft:banner", null, null, Color.FromArgb(255, 232, 231, 230), true, Obtenciones.Survival, true),
                new Bloques("minecraft:barrel", null, null, Color.FromArgb(255, 108, 81, 50), false, Obtenciones.Survival),
                new Bloques("minecraft:barrier", new List<byte>(new byte[] { 166 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 211, 25, 26), true, Obtenciones.Creative),
                new Bloques("minecraft:basalt", null, null, Color.FromArgb(255, 73, 73, 78), false, Obtenciones.Survival),
                new Bloques("minecraft:beacon", new List<byte>(new byte[] { 138 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 117, 221, 216), true, Obtenciones.Survival),
                new Bloques("minecraft:bed", null, null, Color.FromArgb(255, 177, 122, 122), true, Obtenciones.Survival, true),
                new Bloques("minecraft:bedrock", new List<byte>(new byte[] { 7 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 84, 84, 84), false, Obtenciones.Creative),
                new Bloques("minecraft:bee_nest", null, null, Color.FromArgb(255, 195, 152, 76), false, Obtenciones.Survival),
                new Bloques("minecraft:beehive", null, null, Color.FromArgb(255, 167, 132, 74), false, Obtenciones.Survival),
                new Bloques("minecraft:beetroots", new List<byte>(new byte[] { 207 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 176, 115, 111)/*Color.FromArgb(255, 81, 113, 54)*/, true, Obtenciones.Survival),
                new Bloques("minecraft:bell", null, null, Color.FromArgb(255, 253, 229, 97), false, Obtenciones.Survival),
                new Bloques("minecraft:birch_bark", null, null, null, Color.FromArgb(255, 206, 206, 201), false, Obtenciones.Survival, true),
                new Bloques("minecraft:birch_button", null, null, Color.FromArgb(255, 194, 177, 122), true, Obtenciones.Survival),
                new Bloques("minecraft:birch_door", new List<byte>(new byte[] { 194 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 218, 210, 176), true, Obtenciones.Survival),
                new Bloques("minecraft:birch_fence", new List<byte>(new byte[] { 189 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 193, 176, 121), true, Obtenciones.Survival),
                new Bloques("minecraft:birch_fence_gate", new List<byte>(new byte[] { 184 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 195, 179, 123), true, Obtenciones.Survival),
                new Bloques("minecraft:birch_leaves", new List<byte>(new byte[] { 18 }), new List<byte>(new byte[] { 2, 6, 10, 14 }), Color.FromArgb(255, 132, 166, 95), false, Obtenciones.Survival),
                new Bloques("minecraft:birch_log", new List<byte>(new byte[] { 17 }), new List<byte>(new byte[] { 2, 6, 10, 14 }), Color.FromArgb(255, 207, 206, 200), false, Obtenciones.Survival),
                new Bloques("minecraft:birch_planks", new List<byte>(new byte[] { 5 }), new List<byte>(new byte[] { 2 }), Color.FromArgb(255, 196, 179, 123), false, Obtenciones.Survival),
                new Bloques("minecraft:birch_pressure_plate", null, null, Color.FromArgb(255, 197, 181, 124), true, Obtenciones.Survival),
                new Bloques("minecraft:birch_sapling", new List<byte>(new byte[] { 6 }), new List<byte>(new byte[] { 2, 10 }), Color.FromArgb(255, 119, 151, 85), true, Obtenciones.Survival),
                new Bloques("minecraft:birch_sign", null, null, Color.FromArgb(255, 206, 191, 137), false, Obtenciones.Survival),
                new Bloques("minecraft:birch_slab", new List<byte>(new byte[] { 126 }), new List<byte>(new byte[] { 2, 10 }), Color.FromArgb(255, 196, 180, 124), true, Obtenciones.Survival),
                new Bloques("minecraft:birch_stairs", new List<byte>(new byte[] { 135 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 196, 180, 123), true, Obtenciones.Survival),
                new Bloques("minecraft:birch_trapdoor", null, null, Color.FromArgb(255, 207, 194, 157), true, Obtenciones.Survival),
                new Bloques("minecraft:birch_wall_sign", null, null, Color.FromArgb(255, 204, 188, 129), false, Obtenciones.Survival),
                new Bloques("minecraft:birch_wood", null, null, Color.FromArgb(255, 207, 206, 201), false, Obtenciones.Survival),
                new Bloques("minecraft:black_banner", new List<byte>(new byte[] { 176 }), new List<byte>(new byte[] { 15 }), Color.FromArgb(255, 8, 10, 14), true, Obtenciones.Survival),
                new Bloques("minecraft:black_bed", null, null, Color.FromArgb(255, 118, 118, 121), true, Obtenciones.Survival),
                new Bloques("minecraft:black_carpet", new List<byte>(new byte[] { 171 }), new List<byte>(new byte[] { 15 }), Color.FromArgb(255, 20, 21, 25), true, Obtenciones.Survival),
                new Bloques("minecraft:black_concrete", new List<byte>(new byte[] { 251 }), new List<byte>(new byte[] { 15 }), Color.FromArgb(255, 8, 10, 15), false, Obtenciones.Survival),
                new Bloques("minecraft:black_concrete_powder", new List<byte>(new byte[] { 252 }), new List<byte>(new byte[] { 15 }), Color.FromArgb(255, 25, 27, 32), false, Obtenciones.Survival),
                new Bloques("minecraft:black_glazed_terracotta", new List<byte>(new byte[] { 250 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 68, 30, 32), false, Obtenciones.Survival),
                new Bloques("minecraft:black_shulker_box", new List<byte>(new byte[] { 234 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 25, 25, 30), true, Obtenciones.Survival),
                new Bloques("minecraft:black_stained_glass", new List<byte>(new byte[] { 95 }), new List<byte>(new byte[] { 15 }), Color.FromArgb(194, 25, 25, 25), false, Obtenciones.Survival),
                new Bloques("minecraft:black_stained_glass_pane", new List<byte>(new byte[] { 160 }), new List<byte>(new byte[] { 15 }), Color.FromArgb(163, 25, 25, 24), true, Obtenciones.Survival),
                new Bloques("minecraft:black_terracotta", new List<byte>(new byte[] { 159 }), new List<byte>(new byte[] { 15 }), Color.FromArgb(255, 37, 23, 16), false, Obtenciones.Survival),
                new Bloques("minecraft:black_wall_banner", new List<byte>(new byte[] { 177 }), new List<byte>(new byte[] { 15 }), Color.FromArgb(255, 9, 10, 14), true, Obtenciones.Survival),
                new Bloques("minecraft:black_wool", new List<byte>(new byte[] { 35 }), new List<byte>(new byte[] { 15 }), Color.FromArgb(255, 21, 21, 26), false, Obtenciones.Survival),
                new Bloques("minecraft:blast_furnace", null, null, Color.FromArgb(255, 108, 108, 107), false, Obtenciones.Survival),
                new Bloques("minecraft:blue_banner", new List<byte>(new byte[] { 176 }), new List<byte>(new byte[] { 11 }), Color.FromArgb(255, 45, 47, 142), true, Obtenciones.Survival),
                new Bloques("minecraft:blue_bed", null, null, Color.FromArgb(255, 128, 130, 177), true, Obtenciones.Survival),
                new Bloques("minecraft:blue_carpet", new List<byte>(new byte[] { 171 }), new List<byte>(new byte[] { 11 }), Color.FromArgb(255, 53, 57, 156), true, Obtenciones.Survival),
                new Bloques("minecraft:blue_concrete", new List<byte>(new byte[] { 251 }), new List<byte>(new byte[] { 11 }), Color.FromArgb(255, 45, 47, 143), false, Obtenciones.Survival),
                new Bloques("minecraft:blue_concrete_powder", new List<byte>(new byte[] { 252 }), new List<byte>(new byte[] { 11 }), Color.FromArgb(255, 70, 73, 167), false, Obtenciones.Survival),
                new Bloques("minecraft:blue_coral", null, null, Color.FromArgb(255, 49, 87, 207), false, Obtenciones.Survival, true),
                new Bloques("minecraft:blue_coral_fan", null, null, Color.FromArgb(255, 43, 79, 186), true, Obtenciones.Survival, true),
                new Bloques("minecraft:blue_coral_plant", null, null, Color.FromArgb(255, 48, 83, 197), true, Obtenciones.Survival, true),
                new Bloques("minecraft:blue_dead_coral", null, null, Color.FromArgb(255, 130, 123, 120), false, Obtenciones.Survival, true),
                new Bloques("minecraft:blue_glazed_terracotta", new List<byte>(new byte[] { 246 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 47, 65, 139), false, Obtenciones.Survival),
                new Bloques("minecraft:blue_ice", null, null, Color.FromArgb(255, 116, 168, 253), false, Obtenciones.Survival),
                new Bloques("minecraft:blue_orchid", new List<byte>(new byte[] { 38 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(255, 37, 169, 239)/*Color.FromArgb(255, 38, 152, 138)*/, true, Obtenciones.Survival),
                new Bloques("minecraft:blue_shulker_box", new List<byte>(new byte[] { 230 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 44, 46, 140), true, Obtenciones.Survival),
                new Bloques("minecraft:blue_stained_glass", new List<byte>(new byte[] { 95 }), new List<byte>(new byte[] { 11 }), Color.FromArgb(194, 50, 76, 178), false, Obtenciones.Survival),
                new Bloques("minecraft:blue_stained_glass_pane", new List<byte>(new byte[] { 160 }), new List<byte>(new byte[] { 11 }), Color.FromArgb(163, 51, 76, 178), true, Obtenciones.Survival),
                new Bloques("minecraft:blue_terracotta", new List<byte>(new byte[] { 159 }), new List<byte>(new byte[] { 11 }), Color.FromArgb(255, 74, 60, 91), false, Obtenciones.Survival),
                new Bloques("minecraft:blue_wall_banner", new List<byte>(new byte[] { 177 }), new List<byte>(new byte[] { 11 }), Color.FromArgb(255, 46, 47, 142), true, Obtenciones.Survival),
                new Bloques("minecraft:blue_wool", new List<byte>(new byte[] { 35 }), new List<byte>(new byte[] { 11 }), Color.FromArgb(255, 53, 57, 157), false, Obtenciones.Survival),
                new Bloques("minecraft:bone_block", new List<byte>(new byte[] { 216 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 225, 221, 201), false, Obtenciones.Survival),
                new Bloques("minecraft:bookshelf", new List<byte>(new byte[] { 47 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 108, 88, 58), false, Obtenciones.Survival),
                new Bloques("minecraft:brain_coral", null, null, Color.FromArgb(255, 198, 85, 152), true, Obtenciones.Survival),
                new Bloques("minecraft:brain_coral_block", null, null, Color.FromArgb(255, 207, 91, 159), false, Obtenciones.Survival),
                new Bloques("minecraft:brain_coral_fan", null, null, Color.FromArgb(255, 203, 84, 154), true, Obtenciones.Survival),
                new Bloques("minecraft:brain_coral_wall_fan", null, null, Color.FromArgb(255, 203, 84, 153), true, Obtenciones.Survival),
                new Bloques("minecraft:brewing_stand", new List<byte>(new byte[] { 117 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 125, 103, 82), true, Obtenciones.Survival),
                new Bloques("minecraft:brick_slab", new List<byte>(new byte[] { 44 }), new List<byte>(new byte[] { 4, 12 }), Color.FromArgb(255, 146, 99, 87), true, Obtenciones.Survival),
                new Bloques("minecraft:brick_stairs", new List<byte>(new byte[] { 108 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 146, 100, 87), true, Obtenciones.Survival),
                new Bloques("minecraft:brick_wall", null, null, Color.FromArgb(255, 147, 101, 88), false, Obtenciones.Survival),
                new Bloques("minecraft:bricks", new List<byte>(new byte[] { 45 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 147, 100, 87), false, Obtenciones.Survival),
                new Bloques("minecraft:brown_banner", new List<byte>(new byte[] { 176 }), new List<byte>(new byte[] { 12 }), Color.FromArgb(255, 95, 60, 32), true, Obtenciones.Survival),
                new Bloques("minecraft:brown_bed", null, null, Color.FromArgb(255, 160, 139, 125), true, Obtenciones.Survival),
                new Bloques("minecraft:brown_carpet", new List<byte>(new byte[] { 171 }), new List<byte>(new byte[] { 12 }), Color.FromArgb(255, 113, 72, 41), true, Obtenciones.Survival),
                new Bloques("minecraft:brown_concrete", new List<byte>(new byte[] { 251 }), new List<byte>(new byte[] { 12 }), Color.FromArgb(255, 96, 60, 32), false, Obtenciones.Survival),
                new Bloques("minecraft:brown_concrete_powder", new List<byte>(new byte[] { 252 }), new List<byte>(new byte[] { 12 }), Color.FromArgb(255, 126, 85, 54), false, Obtenciones.Survival),
                new Bloques("minecraft:brown_glazed_terracotta", new List<byte>(new byte[] { 247 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 120, 106, 86), false, Obtenciones.Survival),
                new Bloques("minecraft:brown_mushroom", new List<byte>(new byte[] { 39 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 138, 106, 84), true, Obtenciones.Survival),
                new Bloques("minecraft:brown_mushroom_block", new List<byte>(new byte[] { 99 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 142, 107, 83), false, Obtenciones.Survival),
                new Bloques("minecraft:brown_shulker_box", new List<byte>(new byte[] { 231 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 106, 66, 36), true, Obtenciones.Survival),
                new Bloques("minecraft:brown_stained_glass", new List<byte>(new byte[] { 95 }), new List<byte>(new byte[] { 12 }), Color.FromArgb(194, 101, 76, 50), false, Obtenciones.Survival),
                new Bloques("minecraft:brown_stained_glass_pane", new List<byte>(new byte[] { 160 }), new List<byte>(new byte[] { 12 }), Color.FromArgb(163, 101, 76, 51), true, Obtenciones.Survival),
                new Bloques("minecraft:brown_terracotta", new List<byte>(new byte[] { 159 }), new List<byte>(new byte[] { 12 }), Color.FromArgb(255, 77, 51, 36), false, Obtenciones.Survival),
                new Bloques("minecraft:brown_wall_banner", new List<byte>(new byte[] { 177 }), new List<byte>(new byte[] { 12 }), Color.FromArgb(255, 96, 60, 31), true, Obtenciones.Survival),
                new Bloques("minecraft:brown_wool", new List<byte>(new byte[] { 35 }), new List<byte>(new byte[] { 12 }), Color.FromArgb(255, 114, 72, 41), false, Obtenciones.Survival),
                new Bloques("minecraft:bubble_column", null, null, Color.FromArgb(206, 49, 72, 243), true, Obtenciones.Survival),
                new Bloques("minecraft:bubble_coral", null, null, Color.FromArgb(255, 161, 24, 160), true, Obtenciones.Survival),
                new Bloques("minecraft:bubble_coral_block", null, null, Color.FromArgb(255, 165, 26, 162), false, Obtenciones.Survival),
                new Bloques("minecraft:bubble_coral_fan", null, null, Color.FromArgb(255, 160, 33, 159), true, Obtenciones.Survival),
                new Bloques("minecraft:bubble_coral_wall_fan", null, null, Color.FromArgb(255, 160, 33, 158), true, Obtenciones.Survival),
                new Bloques("minecraft:cactus", new List<byte>(new byte[] { 81 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 14, 102, 25), true, Obtenciones.Survival),
                new Bloques("minecraft:cake", new List<byte>(new byte[] { 92 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 229, 206, 207), true, Obtenciones.Survival),
                new Bloques("minecraft:campfire", null, null, Color.FromArgb(255, 111, 88, 54), false, Obtenciones.Survival),
                new Bloques("minecraft:carrots", new List<byte>(new byte[] { 141 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 213, 148, 9)/*Color.FromArgb(255, 21, 128, 2)*/, true, Obtenciones.Survival),
                new Bloques("minecraft:cartography_table", null, null, Color.FromArgb(255, 109, 81, 50), false, Obtenciones.Survival),
                new Bloques("minecraft:carved_pumpkin", new List<byte>(new byte[] { 86 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 142, 77, 13), false, Obtenciones.Survival),
                new Bloques("minecraft:cauldron", new List<byte>(new byte[] { 118 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 63, 63, 63), true, Obtenciones.Survival),
                new Bloques("minecraft:cave_air", null, null, Color.FromArgb(0, 2, 2, 2), true, Obtenciones.Survival),
                new Bloques("minecraft:chain_command_block", new List<byte>(new byte[] { 211 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 130, 159, 147), false, Obtenciones.Creative),
                new Bloques("minecraft:chest", new List<byte>(new byte[] { 54 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 118, 88, 42), true, Obtenciones.Survival),
                new Bloques("minecraft:chipped_anvil", new List<byte>(new byte[] { 145 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(255, 64, 61, 61), true, Obtenciones.Survival),
                new Bloques("minecraft:chiseled_quartz_block", new List<byte>(new byte[] { 155 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(255, 232, 228, 220), false, Obtenciones.Survival),
                new Bloques("minecraft:chiseled_red_sandstone", new List<byte>(new byte[] { 179 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(255, 162, 83, 28), false, Obtenciones.Survival),
                new Bloques("minecraft:chiseled_sandstone", new List<byte>(new byte[] { 24 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(255, 216, 208, 155), false, Obtenciones.Survival),
                new Bloques("minecraft:chiseled_stone_bricks", new List<byte>(new byte[] { 98 }), new List<byte>(new byte[] { 3 }), Color.FromArgb(255, 119, 119, 119), false, Obtenciones.Survival),
                new Bloques("minecraft:chorus_flower", new List<byte>(new byte[] { 200 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 134, 104, 134), true, Obtenciones.Survival),
                new Bloques("minecraft:chorus_plant", new List<byte>(new byte[] { 199 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 96, 60, 96), true, Obtenciones.Survival),
                new Bloques("minecraft:clay", new List<byte>(new byte[] { 82 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 159, 164, 177), false, Obtenciones.Survival),
                new Bloques("minecraft:coal_block", new List<byte>(new byte[] { 173 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 19, 19, 19), false, Obtenciones.Survival),
                new Bloques("minecraft:coal_ore", new List<byte>(new byte[] { 16 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 18, 19, 19)/*Color.FromArgb(255, 115, 115, 115)*/, false, Obtenciones.Survival),
                new Bloques("minecraft:coarse_dirt", new List<byte>(new byte[] { 3 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(255, 119, 86, 59), false, Obtenciones.Survival),
                new Bloques("minecraft:cobblestone", new List<byte>(new byte[] { 4 }), new List<byte>(new byte[] { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 123, 123, 123), false, Obtenciones.Survival),
                new Bloques("minecraft:cobblestone_slab", new List<byte>(new byte[] { 44 }), new List<byte>(new byte[] { 3, 11 }), Color.FromArgb(255, 122, 122, 123), true, Obtenciones.Survival),
                new Bloques("minecraft:cobblestone_stairs", new List<byte>(new byte[] { 67 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 122, 123, 123), true, Obtenciones.Survival),
                new Bloques("minecraft:cobblestone_wall", new List<byte>(new byte[] { 139 }), new List<byte>(new byte[] { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 121, 121, 122), true, Obtenciones.Survival),
                new Bloques("minecraft:cobweb", new List<byte>(new byte[] { 30 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 220, 220, 220), true, Obtenciones.Survival),
                new Bloques("minecraft:cocoa", new List<byte>(new byte[] { 127 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 146, 81, 31), true, Obtenciones.Survival),
                new Bloques("minecraft:command_block", new List<byte>(new byte[] { 137 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 172, 132, 109), false, Obtenciones.Creative),
                new Bloques("minecraft:comparator", new List<byte>(new byte[] { 149, 150 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 156, 151, 150), true, Obtenciones.Survival),
                new Bloques("minecraft:composter", null, null, Color.FromArgb(255, 112, 70, 32), false, Obtenciones.Survival),
                new Bloques("minecraft:conduit", null, null, Color.FromArgb(255, 154, 135, 107), true, Obtenciones.Survival),
                new Bloques("minecraft:cornflower", null, null, Color.FromArgb(255, 80, 121, 147), false, Obtenciones.Survival),
                new Bloques("minecraft:cracked_stone_bricks", new List<byte>(new byte[] { 98 }), new List<byte>(new byte[] { 2 }), Color.FromArgb(255, 118, 119, 119), false, Obtenciones.Survival),
                new Bloques("minecraft:crafting_table", new List<byte>(new byte[] { 58 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 115, 95, 64), false, Obtenciones.Survival),
                new Bloques("minecraft:creeper_head", new List<byte>(new byte[] { 144 }), new List<byte>(new byte[] { 4 }), Color.FromArgb(255, 87, 147, 79), true, Obtenciones.Survival),
                new Bloques("minecraft:creeper_wall_head", null, null, Color.FromArgb(255, 87, 146, 79), true, Obtenciones.Creative),
                new Bloques("minecraft:crimson_button", null, null, Color.FromArgb(255, 102, 49, 71), false, Obtenciones.Survival),
                new Bloques("minecraft:crimson_door", null, null, Color.FromArgb(255, 112, 54, 78), false, Obtenciones.Survival),
                new Bloques("minecraft:crimson_fence", null, null, Color.FromArgb(255, 99, 48, 69), false, Obtenciones.Survival),
                new Bloques("minecraft:crimson_fence_gate", null, null, Color.FromArgb(255, 100, 48, 70), false, Obtenciones.Survival),
                new Bloques("minecraft:crimson_fungi", null, null, Color.FromArgb(255, 141, 44, 30), false, Obtenciones.Survival),
                new Bloques("minecraft:crimson_nylium", null, null, Color.FromArgb(255, 131, 31, 31), false, Obtenciones.Survival),
                new Bloques("minecraft:crimson_planks", null, null, Color.FromArgb(255, 101, 49, 71), false, Obtenciones.Survival),
                new Bloques("minecraft:crimson_pressure_plate", null, null, Color.FromArgb(255, 102, 49, 72), false, Obtenciones.Survival),
                new Bloques("minecraft:crimson_roots", null, null, Color.FromArgb(255, 126, 8, 42), false, Obtenciones.Survival),
                new Bloques("minecraft:crimson_sign", null, null, Color.FromArgb(255, 102, 48, 70), false, Obtenciones.Survival),
                new Bloques("minecraft:crimson_slab", null, null, Color.FromArgb(255, 100, 49, 70), false, Obtenciones.Survival),
                new Bloques("minecraft:crimson_stairs", null, null, Color.FromArgb(255, 101, 49, 70), false, Obtenciones.Survival),
                new Bloques("minecraft:crimson_stem", null, null, Color.FromArgb(255, 93, 26, 30), false, Obtenciones.Survival),
                new Bloques("minecraft:crimson_trapdoor", null, null, Color.FromArgb(255, 104, 51, 72), false, Obtenciones.Survival),
                new Bloques("minecraft:crimson_wall_sign", null, null, Color.FromArgb(255, 103, 50, 72), false, Obtenciones.Survival),
                new Bloques("minecraft:cut_red_sandstone", new List<byte>(new byte[] { 179 }), new List<byte>(new byte[] { 2 }), Color.FromArgb(255, 168, 86, 30), false, Obtenciones.Survival),
                new Bloques("minecraft:cut_red_sandstone_slab", null, null, Color.FromArgb(255, 167, 84, 30), false, Obtenciones.Survival),
                new Bloques("minecraft:cut_sandstone", new List<byte>(new byte[] { 24 }), new List<byte>(new byte[] { 2 }), Color.FromArgb(255, 220, 212, 162), false, Obtenciones.Survival),
                new Bloques("minecraft:cut_sandstone_slab", null, null, Color.FromArgb(255, 218, 209, 158), false, Obtenciones.Survival),
                new Bloques("minecraft:cyan_banner", new List<byte>(new byte[] { 176 }), new List<byte>(new byte[] { 9 }), Color.FromArgb(255, 21, 119, 135), true, Obtenciones.Survival),
                new Bloques("minecraft:cyan_bed", null, null, Color.FromArgb(255, 115, 168, 174), true, Obtenciones.Survival),
                new Bloques("minecraft:cyan_carpet", new List<byte>(new byte[] { 171 }), new List<byte>(new byte[] { 9 }), Color.FromArgb(255, 21, 138, 144), true, Obtenciones.Survival),
                new Bloques("minecraft:cyan_concrete", new List<byte>(new byte[] { 251 }), new List<byte>(new byte[] { 9 }), Color.FromArgb(255, 21, 119, 136), false, Obtenciones.Survival),
                new Bloques("minecraft:cyan_concrete_powder", new List<byte>(new byte[] { 252 }), new List<byte>(new byte[] { 9 }), Color.FromArgb(255, 37, 148, 157), false, Obtenciones.Survival),
                new Bloques("minecraft:cyan_glazed_terracotta", new List<byte>(new byte[] { 244 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 52, 119, 125), false, Obtenciones.Survival),
                new Bloques("minecraft:cyan_shulker_box", new List<byte>(new byte[] { 228 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 20, 121, 135), true, Obtenciones.Survival),
                new Bloques("minecraft:cyan_stained_glass", new List<byte>(new byte[] { 95 }), new List<byte>(new byte[] { 9 }), Color.FromArgb(194, 76, 127, 152), false, Obtenciones.Survival),
                new Bloques("minecraft:cyan_stained_glass_pane", new List<byte>(new byte[] { 160 }), new List<byte>(new byte[] { 9 }), Color.FromArgb(163, 76, 126, 153), true, Obtenciones.Survival),
                new Bloques("minecraft:cyan_terracotta", new List<byte>(new byte[] { 159 }), new List<byte>(new byte[] { 9 }), Color.FromArgb(255, 87, 91, 91), false, Obtenciones.Survival),
                new Bloques("minecraft:cyan_wall_banner", new List<byte>(new byte[] { 177 }), new List<byte>(new byte[] { 9 }), Color.FromArgb(255, 22, 119, 135), true, Obtenciones.Survival),
                new Bloques("minecraft:cyan_wool", new List<byte>(new byte[] { 35 }), new List<byte>(new byte[] { 9 }), Color.FromArgb(255, 21, 138, 145), false, Obtenciones.Survival),
                new Bloques("minecraft:damaged_anvil", new List<byte>(new byte[] { 145 }), new List<byte>(new byte[] { 2 }), Color.FromArgb(255, 63, 61, 61), true, Obtenciones.Survival),
                new Bloques("minecraft:dandelion", new List<byte>(new byte[] { 37 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 203, 210, 1)/*Color.FromArgb(255, 108, 162, 1)*/, true, Obtenciones.Survival),
                new Bloques("minecraft:dark_oak_bark", null, null, null, Color.FromArgb(255, 51, 41, 23), false, Obtenciones.Survival, true),
                new Bloques("minecraft:dark_oak_button", null, null, Color.FromArgb(255, 59, 39, 18), true, Obtenciones.Survival),
                new Bloques("minecraft:dark_oak_door", new List<byte>(new byte[] { 197 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 70, 48, 25), true, Obtenciones.Survival),
                new Bloques("minecraft:dark_oak_fence", new List<byte>(new byte[] { 191 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 60, 39, 18), true, Obtenciones.Survival),
                new Bloques("minecraft:dark_oak_fence_gate", new List<byte>(new byte[] { 186 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 61, 39, 18), true, Obtenciones.Survival),
                new Bloques("minecraft:dark_oak_leaves", new List<byte>(new byte[] { 161 }), new List<byte>(new byte[] { 1, 3, 5, 7, 9, 11, 13, 15 }), Color.FromArgb(255, 85, 168, 48), false, Obtenciones.Survival),
                new Bloques("minecraft:dark_oak_log", new List<byte>(new byte[] { 162 }), new List<byte>(new byte[] { 1, 3, 5, 7, 9, 11, 13, 15 }), Color.FromArgb(255, 52, 41, 22), false, Obtenciones.Survival),
                new Bloques("minecraft:dark_oak_planks", new List<byte>(new byte[] { 5 }), new List<byte>(new byte[] { 5 }), Color.FromArgb(255, 61, 40, 18), false, Obtenciones.Survival),
                new Bloques("minecraft:dark_oak_pressure_plate", null, null, Color.FromArgb(255, 62, 40, 19), true, Obtenciones.Survival),
                new Bloques("minecraft:dark_oak_sapling", new List<byte>(new byte[] { 6 }), new List<byte>(new byte[] { 5, 13 }), Color.FromArgb(255, 57, 86, 28), true, Obtenciones.Survival),
                new Bloques("minecraft:dark_oak_sign", null, null, Color.FromArgb(255, 62, 41, 19), false, Obtenciones.Survival),
                new Bloques("minecraft:dark_oak_slab", new List<byte>(new byte[] { 126 }), new List<byte>(new byte[] { 5, 13 }), Color.FromArgb(255, 60, 40, 17), true, Obtenciones.Survival),
                new Bloques("minecraft:dark_oak_stairs", new List<byte>(new byte[] { 164 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 60, 40, 18), true, Obtenciones.Survival),
                new Bloques("minecraft:dark_oak_trapdoor", null, null, Color.FromArgb(255, 75, 50, 23), true, Obtenciones.Survival),
                new Bloques("minecraft:dark_oak_wall_sign", null, null, Color.FromArgb(255, 64, 41, 19), false, Obtenciones.Survival),
                new Bloques("minecraft:dark_oak_wood", null, null, Color.FromArgb(255, 52, 41, 23), false, Obtenciones.Survival),
                new Bloques("minecraft:dark_prismarine", new List<byte>(new byte[] { 168 }), new List<byte>(new byte[] { 2 }), Color.FromArgb(255, 60, 88, 75), false, Obtenciones.Survival),
                new Bloques("minecraft:dark_prismarine_slab", null, null, Color.FromArgb(255, 60, 88, 76), true, Obtenciones.Survival),
                new Bloques("minecraft:dark_prismarine_stairs", null, null, Color.FromArgb(255, 60, 87, 75), true, Obtenciones.Survival),
                new Bloques("minecraft:daylight_detector", new List<byte>(new byte[] { 151, 178 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 131, 116, 95), true, Obtenciones.Survival),
                new Bloques("minecraft:dead_brain_coral", null, null, Color.FromArgb(255, 134, 125, 121), true, Obtenciones.Survival),
                new Bloques("minecraft:dead_brain_coral_block", null, null, Color.FromArgb(255, 124, 118, 114), false, Obtenciones.Survival),
                new Bloques("minecraft:dead_brain_coral_fan", null, null, Color.FromArgb(255, 133, 125, 121), true, Obtenciones.Survival),
                new Bloques("minecraft:dead_brain_coral_wall_fan", null, null, Color.FromArgb(255, 133, 125, 120), true, Obtenciones.Survival),
                new Bloques("minecraft:dead_bubble_coral", null, null, Color.FromArgb(255, 133, 125, 119), true, Obtenciones.Survival),
                new Bloques("minecraft:dead_bubble_coral_block", null, null, Color.FromArgb(255, 132, 124, 119), false, Obtenciones.Survival),
                new Bloques("minecraft:dead_bubble_coral_fan", null, null, Color.FromArgb(255, 141, 135, 130), true, Obtenciones.Survival),
                new Bloques("minecraft:dead_bubble_coral_wall_fan", null, null, Color.FromArgb(255, 141, 135, 129), true, Obtenciones.Survival),
                new Bloques("minecraft:dead_bush", new List<byte>(new byte[] { 32 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 124, 80, 25), true, Obtenciones.Survival),
                new Bloques("minecraft:dead_fire_coral", null, null, Color.FromArgb(255, 137, 128, 124), true, Obtenciones.Survival),
                new Bloques("minecraft:dead_fire_coral_block", null, null, Color.FromArgb(255, 132, 124, 120), false, Obtenciones.Survival),
                new Bloques("minecraft:dead_fire_coral_fan", null, null, Color.FromArgb(255, 125, 118, 115), true, Obtenciones.Survival),
                new Bloques("minecraft:dead_fire_coral_wall_fan", null, null, Color.FromArgb(255, 125, 118, 114), true, Obtenciones.Survival),
                new Bloques("minecraft:dead_horn_coral", null, null, Color.FromArgb(255, 143, 135, 130), true, Obtenciones.Survival),
                new Bloques("minecraft:dead_horn_coral_block", null, null, Color.FromArgb(255, 134, 126, 122), false, Obtenciones.Survival),
                new Bloques("minecraft:dead_horn_coral_fan", null, null, Color.FromArgb(255, 134, 126, 121), true, Obtenciones.Survival),
                new Bloques("minecraft:dead_horn_coral_wall_fan", null, null, Color.FromArgb(255, 134, 126, 120), true, Obtenciones.Survival),
                new Bloques("minecraft:dead_tube_coral", null, null, Color.FromArgb(255, 118, 111, 108), true, Obtenciones.Survival),
                new Bloques("minecraft:dead_tube_coral_block", null, null, Color.FromArgb(255, 130, 123, 119), false, Obtenciones.Survival),
                new Bloques("minecraft:dead_tube_coral_fan", null, null, Color.FromArgb(255, 128, 122, 118), true, Obtenciones.Survival),
                new Bloques("minecraft:dead_tube_coral_wall_fan", null, null, Color.FromArgb(255, 128, 122, 117), true, Obtenciones.Survival),
                new Bloques("minecraft:detector_rail", new List<byte>(new byte[] { 28 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 120, 101, 89), true, Obtenciones.Survival),
                new Bloques("minecraft:diamond_block", new List<byte>(new byte[] { 57 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 98, 219, 214), false, Obtenciones.Survival),
                new Bloques("minecraft:diamond_ore", new List<byte>(new byte[] { 56 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }),  Color.FromArgb(255, 97, 219, 214)/*Color.FromArgb(255, 129, 140, 143)*/, false, Obtenciones.Survival),
                new Bloques("minecraft:diorite", new List<byte>(new byte[] { 1 }), new List<byte>(new byte[] { 3 }), Color.FromArgb(255, 180, 180, 183), false, Obtenciones.Survival),
                new Bloques("minecraft:diorite_slab", null, null, Color.FromArgb(255, 181, 181, 184), false, Obtenciones.Survival),
                new Bloques("minecraft:diorite_stairs", null, null, Color.FromArgb(255, 180, 180, 182), false, Obtenciones.Survival),
                new Bloques("minecraft:diorite_wall", null, null, Color.FromArgb(255, 180, 180, 181), false, Obtenciones.Survival),
                new Bloques("minecraft:dirt", new List<byte>(new byte[] { 3 }), new List<byte>(new byte[] { 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 134, 96, 67), false, Obtenciones.Survival),
                new Bloques("minecraft:dispenser", new List<byte>(new byte[] { 23 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Categorías.Redstone, Color.FromArgb(255, 117, 117, 117), false, Obtenciones.Survival),
                new Bloques("minecraft:dragon_egg", new List<byte>(new byte[] { 122 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 13, 9, 16), true, Obtenciones.Survival),
                new Bloques("minecraft:dragon_head", new List<byte>(new byte[] { 144 }), new List<byte>(new byte[] { 5 }), Color.FromArgb(255, 53, 33, 57), true, Obtenciones.Survival),
                new Bloques("minecraft:dragon_wall_head", null, null, Color.FromArgb(255, 53, 33, 56), true, Obtenciones.Creative),
                new Bloques("minecraft:dried_kelp_block", null, null, Color.FromArgb(255, 38, 49, 30), false, Obtenciones.Survival),
                new Bloques("minecraft:dropper", new List<byte>(new byte[] { 158 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 116, 117, 117), false, Obtenciones.Survival),
                new Bloques("minecraft:emerald_block", new List<byte>(new byte[] { 133 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 81, 217, 117), false, Obtenciones.Survival),
                new Bloques("minecraft:emerald_ore", new List<byte>(new byte[] { 129 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 80, 217, 117)/*Color.FromArgb(255, 110, 129, 116)*/, false, Obtenciones.Survival),
                new Bloques("minecraft:enchanting_table", new List<byte>(new byte[] { 116 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 42, 44, 46), true, Obtenciones.Survival),
                new Bloques("minecraft:end_gateway", new List<byte>(new byte[] { 209 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 0, 64, 32), true, Obtenciones.Creative),
                new Bloques("minecraft:end_portal", new List<byte>(new byte[] { 119 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 3, 3, 3), true, Obtenciones.Creative),
                new Bloques("minecraft:end_portal_frame", new List<byte>(new byte[] { 120 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 148, 160, 124), true, Obtenciones.Creative),
                new Bloques("minecraft:end_rod", new List<byte>(new byte[] { 198 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 220, 198, 206), true, Obtenciones.Survival),
                new Bloques("minecraft:end_stone", new List<byte>(new byte[] { 121 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 221, 224, 165), false, Obtenciones.Survival),
                new Bloques("minecraft:end_stone_brick_slab", null, null, Color.FromArgb(255, 226, 231, 172), false, Obtenciones.Survival),
                new Bloques("minecraft:end_stone_brick_stairs", null, null, Color.FromArgb(255, 225, 231, 170), false, Obtenciones.Survival),
                new Bloques("minecraft:end_stone_brick_wall", null, null, Color.FromArgb(255, 226, 231, 170), false, Obtenciones.Survival),
                new Bloques("minecraft:end_stone_bricks", new List<byte>(new byte[] { 206 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 226, 231, 171), false, Obtenciones.Survival),
                new Bloques("minecraft:ender_chest", new List<byte>(new byte[] { 130 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 34, 49, 44), true, Obtenciones.Survival),
                new Bloques("minecraft:farmland", new List<byte>(new byte[] { 60 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 115, 76, 45), true, Obtenciones.Survival),
                new Bloques("minecraft:fern", new List<byte>(new byte[] { 31 }), new List<byte>(new byte[] { 2 }), Color.FromArgb(255, 79, 194, 29), true, Obtenciones.Survival),
                new Bloques("minecraft:fire", new List<byte>(new byte[] { 51 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 213, 142, 53), true, Obtenciones.Creative),
                new Bloques("minecraft:fire_coral", null, null, Color.FromArgb(255, 167, 38, 47), true, Obtenciones.Survival),
                new Bloques("minecraft:fire_coral_block", null, null, Color.FromArgb(255, 164, 35, 47), false, Obtenciones.Survival),
                new Bloques("minecraft:fire_coral_fan", null, null, Color.FromArgb(255, 159, 35, 46), true, Obtenciones.Survival),
                new Bloques("minecraft:fire_coral_wall_fan", null, null, Color.FromArgb(255, 159, 35, 45), true, Obtenciones.Survival),
                new Bloques("minecraft:fletching_table", null, null, Color.FromArgb(255, 151, 132, 94), false, Obtenciones.Survival),
                new Bloques("minecraft:flower_pot", new List<byte>(new byte[] { 140 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 119, 66, 51), true, Obtenciones.Survival),
                new Bloques("minecraft:flowing_lava", new List<byte>(new byte[] { 10 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 207, 92, 21), true, Obtenciones.Creative, true),
                new Bloques("minecraft:flowing_water", new List<byte>(new byte[] { 8 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(206, 49, 72, 244), true, Obtenciones.Creative, true),
                new Bloques("minecraft:four_turtle_eggs", null, null, Color.FromArgb(255, 226, 226, 190), true, Obtenciones.Survival, true),
                new Bloques("minecraft:frosted_ice", new List<byte>(new byte[] { 212 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(159, 147, 187, 254), true, Obtenciones.Creative),
                new Bloques("minecraft:furnace", new List<byte>(new byte[] { 61, 62 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 78, 78, 78), false, Obtenciones.Survival),
                new Bloques("minecraft:glass", new List<byte>(new byte[] { 20 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 218, 241, 244), false, Obtenciones.Survival),
                new Bloques("minecraft:glass_pane", new List<byte>(new byte[] { 102 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 229, 247, 250), true, Obtenciones.Survival),
                new Bloques("minecraft:glowstone", new List<byte>(new byte[] { 89 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 144, 118, 70), false, Obtenciones.Survival),
                new Bloques("minecraft:gold_block", new List<byte>(new byte[] { 41 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 249, 236, 79), false, Obtenciones.Survival),
                new Bloques("minecraft:gold_ore", new List<byte>(new byte[] { 14 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 248, 236, 79)/*Color.FromArgb(255, 143, 140, 125)*/, false, Obtenciones.Survival),
                new Bloques("minecraft:granite", new List<byte>(new byte[] { 1 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(255, 153, 114, 99), false, Obtenciones.Survival),
                new Bloques("minecraft:granite_slab", null, null, Color.FromArgb(255, 153, 114, 98), false, Obtenciones.Survival),
                new Bloques("minecraft:granite_stairs", null, null, Color.FromArgb(255, 153, 113, 98), false, Obtenciones.Survival),
                new Bloques("minecraft:granite_wall", null, null, Color.FromArgb(255, 153, 114, 97), false, Obtenciones.Survival),
                new Bloques("minecraft:grass", new List<byte>(new byte[] { 31 }), new List<byte>(new byte[] { 1, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 84, 209, 29), true, Obtenciones.Survival),
                new Bloques("minecraft:grass_block", new List<byte>(new byte[] { 2 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 112, 179, 79), false, Obtenciones.Survival),
                new Bloques("minecraft:grass_path", new List<byte>(new byte[] { 208 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 150, 125, 71), true, Obtenciones.Creative),
                new Bloques("minecraft:gravel", new List<byte>(new byte[] { 13 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 127, 124, 123), false, Obtenciones.Survival),
                new Bloques("minecraft:gray_banner", new List<byte>(new byte[] { 176 }), new List<byte>(new byte[] { 7 }), Color.FromArgb(255, 55, 58, 61), true, Obtenciones.Survival),
                new Bloques("minecraft:gray_bed", null, null, Color.FromArgb(255, 134, 136, 138), true, Obtenciones.Survival),
                new Bloques("minecraft:gray_carpet", new List<byte>(new byte[] { 171 }), new List<byte>(new byte[] { 7 }), Color.FromArgb(255, 63, 68, 71), true, Obtenciones.Survival),
                new Bloques("minecraft:gray_concrete", new List<byte>(new byte[] { 251 }), new List<byte>(new byte[] { 7 }), Color.FromArgb(255, 55, 58, 62), false, Obtenciones.Survival),
                new Bloques("minecraft:gray_concrete_powder", new List<byte>(new byte[] { 252 }), new List<byte>(new byte[] { 7 }), Color.FromArgb(255, 77, 81, 85), false, Obtenciones.Survival),
                new Bloques("minecraft:gray_glazed_terracotta", new List<byte>(new byte[] { 242 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 83, 90, 94), false, Obtenciones.Survival),
                new Bloques("minecraft:gray_shulker_box", new List<byte>(new byte[] { 226 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 55, 59, 62), true, Obtenciones.Survival),
                new Bloques("minecraft:gray_stained_glass", new List<byte>(new byte[] { 95 }), new List<byte>(new byte[] { 7 }), Color.FromArgb(194, 76, 76, 76), false, Obtenciones.Survival),
                new Bloques("minecraft:gray_stained_glass_pane", new List<byte>(new byte[] { 160 }), new List<byte>(new byte[] { 7 }), Color.FromArgb(163, 76, 76, 75), true, Obtenciones.Survival),
                new Bloques("minecraft:gray_terracotta", new List<byte>(new byte[] { 159 }), new List<byte>(new byte[] { 7 }), Color.FromArgb(255, 58, 42, 36), false, Obtenciones.Survival),
                new Bloques("minecraft:gray_wall_banner", new List<byte>(new byte[] { 177 }), new List<byte>(new byte[] { 7 }), Color.FromArgb(255, 56, 58, 61), true, Obtenciones.Survival),
                new Bloques("minecraft:gray_wool", new List<byte>(new byte[] { 35 }), new List<byte>(new byte[] { 7 }), Color.FromArgb(255, 63, 68, 72), false, Obtenciones.Survival),
                new Bloques("minecraft:green_banner", new List<byte>(new byte[] { 176 }), new List<byte>(new byte[] { 13 }), Color.FromArgb(255, 73, 90, 36), true, Obtenciones.Survival),
                new Bloques("minecraft:green_bed", null, null, Color.FromArgb(255, 146, 157, 121), true, Obtenciones.Survival),
                new Bloques("minecraft:green_carpet", new List<byte>(new byte[] { 171 }), new List<byte>(new byte[] { 13 }), Color.FromArgb(255, 84, 109, 27), true, Obtenciones.Survival),
                new Bloques("minecraft:green_concrete", new List<byte>(new byte[] { 251 }), new List<byte>(new byte[] { 13 }), Color.FromArgb(255, 73, 91, 36), false, Obtenciones.Survival),
                new Bloques("minecraft:green_concrete_powder", new List<byte>(new byte[] { 252 }), new List<byte>(new byte[] { 13 }), Color.FromArgb(255, 97, 119, 45), false, Obtenciones.Survival),
                new Bloques("minecraft:green_glazed_terracotta", new List<byte>(new byte[] { 248 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 117, 142, 67), false, Obtenciones.Survival),
                new Bloques("minecraft:green_shulker_box", new List<byte>(new byte[] { 232 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 79, 101, 32), true, Obtenciones.Survival),
                new Bloques("minecraft:green_stained_glass", new List<byte>(new byte[] { 95 }), new List<byte>(new byte[] { 13 }), Color.FromArgb(194, 101, 127, 50), false, Obtenciones.Survival),
                new Bloques("minecraft:green_stained_glass_pane", new List<byte>(new byte[] { 160 }), new List<byte>(new byte[] { 13 }), Color.FromArgb(163, 101, 126, 51), true, Obtenciones.Survival),
                new Bloques("minecraft:green_terracotta", new List<byte>(new byte[] { 159 }), new List<byte>(new byte[] { 13 }), Color.FromArgb(255, 76, 83, 42), false, Obtenciones.Survival),
                new Bloques("minecraft:green_wall_banner", new List<byte>(new byte[] { 177 }), new List<byte>(new byte[] { 13 }), Color.FromArgb(255, 74, 90, 36), true, Obtenciones.Survival),
                new Bloques("minecraft:green_wool", new List<byte>(new byte[] { 35 }), new List<byte>(new byte[] { 13 }), Color.FromArgb(255, 85, 110, 28), false, Obtenciones.Survival),
                new Bloques("minecraft:grindstone", null, null, Color.FromArgb(255, 137, 127, 117), false, Obtenciones.Survival),
                new Bloques("minecraft:hay_block", new List<byte>(new byte[] { 170 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 158, 117, 18), false, Obtenciones.Survival),
                new Bloques("minecraft:heavy_weighted_pressure_plate", new List<byte>(new byte[] { 148 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 229, 229, 229), true, Obtenciones.Survival),
                new Bloques("minecraft:honey_block", null, null, Color.FromArgb(189, 250, 188, 58), false, Obtenciones.Survival),
                new Bloques("minecraft:honeycomb_block", null, null, Color.FromArgb(255, 229, 148, 30), false, Obtenciones.Survival),
                new Bloques("minecraft:hopper", new List<byte>(new byte[] { 154 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 62, 63, 63), true, Obtenciones.Survival),
                new Bloques("minecraft:horn_coral", null, null, Color.FromArgb(255, 209, 186, 63), true, Obtenciones.Survival),
                new Bloques("minecraft:horn_coral_block", null, null, Color.FromArgb(255, 216, 200, 66), false, Obtenciones.Survival),
                new Bloques("minecraft:horn_coral_fan", null, null, Color.FromArgb(255, 206, 183, 61), true, Obtenciones.Survival),
                new Bloques("minecraft:horn_coral_wall_fan", null, null, Color.FromArgb(255, 206, 183, 60), true, Obtenciones.Survival),
                new Bloques("minecraft:ice", new List<byte>(new byte[] { 79 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(159, 125, 172, 254), false, Obtenciones.Survival),
                new Bloques("minecraft:infested_chiseled_stone_bricks", new List<byte>(new byte[] { 97 }), new List<byte>(new byte[] { 5 }), Color.FromArgb(255, 119, 119, 118), true, Obtenciones.Creative),
                new Bloques("minecraft:infested_cobblestone", new List<byte>(new byte[] { 97 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(255, 123, 123, 122), true, Obtenciones.Creative),
                new Bloques("minecraft:infested_cracked_stone_bricks", new List<byte>(new byte[] { 97 }), new List<byte>(new byte[] { 4 }), Color.FromArgb(255, 119, 118, 118), true, Obtenciones.Creative),
                new Bloques("minecraft:infested_mossy_stone_bricks", new List<byte>(new byte[] { 97 }), new List<byte>(new byte[] { 3 }), Color.FromArgb(255, 115, 118, 106), true, Obtenciones.Creative),
                new Bloques("minecraft:infested_stone", new List<byte>(new byte[] { 97 }), new List<byte>(new byte[] { 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 124, 125, 125), true, Obtenciones.Creative),
                new Bloques("minecraft:infested_stone_bricks", new List<byte>(new byte[] { 97 }), new List<byte>(new byte[] { 2 }), Color.FromArgb(255, 122, 122, 121), true, Obtenciones.Creative),
                new Bloques("minecraft:iron_bars", new List<byte>(new byte[] { 101 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 110, 108, 106), true, Obtenciones.Survival),
                new Bloques("minecraft:iron_block", new List<byte>(new byte[] { 42 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 219, 219, 219), false, Obtenciones.Survival),
                new Bloques("minecraft:iron_door", new List<byte>(new byte[] { 71 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 187, 187, 187), true, Obtenciones.Survival),
                new Bloques("minecraft:iron_ore", new List<byte>(new byte[] { 15 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 218, 219, 219)/*Color.FromArgb(255, 136, 130, 127)*/, false, Obtenciones.Survival),
                new Bloques("minecraft:iron_trapdoor", new List<byte>(new byte[] { 167 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 200, 200, 200), true, Obtenciones.Survival),
                new Bloques("minecraft:item_frame", null, null, Color.FromArgb(255, 118, 68, 45), true, Obtenciones.Survival, true),
                new Bloques("minecraft:jack_o_lantern", new List<byte>(new byte[] { 91 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 185, 133, 28), false, Obtenciones.Survival),
                new Bloques("minecraft:jigsaw", null, null, Color.FromArgb(255, 48, 48, 48), false, Obtenciones.Survival),
                new Bloques("minecraft:jukebox", new List<byte>(new byte[] { 84 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 107, 73, 55), false, Obtenciones.Survival),
                new Bloques("minecraft:jungle_bark", null, null, null, Color.FromArgb(255, 86, 68, 27), false, Obtenciones.Survival, true),
                new Bloques("minecraft:jungle_button", null, null, Color.FromArgb(255, 149, 107, 74), true, Obtenciones.Survival),
                new Bloques("minecraft:jungle_door", new List<byte>(new byte[] { 195 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 157, 115, 85), true, Obtenciones.Survival),
                new Bloques("minecraft:jungle_fence", new List<byte>(new byte[] { 190 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 150, 107, 74), true, Obtenciones.Survival),
                new Bloques("minecraft:jungle_fence_gate", new List<byte>(new byte[] { 185 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 153, 110, 76), true, Obtenciones.Survival),
                new Bloques("minecraft:jungle_leaves", new List<byte>(new byte[] { 18 }), new List<byte>(new byte[] { 3, 7, 11, 15 }), Color.FromArgb(255, 84, 169, 79), false, Obtenciones.Survival),
                new Bloques("minecraft:jungle_log", new List<byte>(new byte[] { 17 }), new List<byte>(new byte[] { 3, 7, 11, 15 }), Color.FromArgb(255, 87, 68, 26), false, Obtenciones.Survival),
                new Bloques("minecraft:jungle_planks", new List<byte>(new byte[] { 5 }), new List<byte>(new byte[] { 3 }), Color.FromArgb(255, 154, 110, 77), false, Obtenciones.Survival),
                new Bloques("minecraft:jungle_pressure_plate", null, null, Color.FromArgb(255, 156, 112, 78), true, Obtenciones.Survival),
                new Bloques("minecraft:jungle_sapling", new List<byte>(new byte[] { 6 }), new List<byte>(new byte[] { 3, 11 }), Color.FromArgb(255, 49, 86, 19), true, Obtenciones.Survival),
                new Bloques("minecraft:jungle_sign", null, null, Color.FromArgb(255, 157, 114, 77), false, Obtenciones.Survival),
                new Bloques("minecraft:jungle_slab", new List<byte>(new byte[] { 126 }), new List<byte>(new byte[] { 3, 11 }), Color.FromArgb(255, 155, 111, 78), true, Obtenciones.Survival),
                new Bloques("minecraft:jungle_stairs", new List<byte>(new byte[] { 136 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 154, 111, 77), true, Obtenciones.Survival),
                new Bloques("minecraft:jungle_trapdoor", null, null, Color.FromArgb(255, 153, 110, 77), true, Obtenciones.Survival),
                new Bloques("minecraft:jungle_wall_sign", null, null, Color.FromArgb(255, 165, 118, 82), false, Obtenciones.Survival),
                new Bloques("minecraft:jungle_wood", null, null, Color.FromArgb(255, 87, 68, 27), false, Obtenciones.Survival),
                new Bloques("minecraft:kelp", null, null, Color.FromArgb(255, 88, 142, 45), true, Obtenciones.Survival),
                new Bloques("minecraft:kelp_plant", null, null, Color.FromArgb(255, 87, 131, 43), true, Obtenciones.Survival),
                new Bloques("minecraft:kelp_top", null, null, null, Color.FromArgb(255, 88, 142, 44), true, Obtenciones.Survival, true),
                new Bloques("minecraft:ladder", new List<byte>(new byte[] { 65 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 121, 95, 53), true, Obtenciones.Survival),
                new Bloques("minecraft:lantern", null, null, Color.FromArgb(255, 157, 119, 83), false, Obtenciones.Survival),
                new Bloques("minecraft:lapis_block", new List<byte>(new byte[] { 22 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 39, 67, 138), false, Obtenciones.Survival),
                new Bloques("minecraft:lapis_ore", new List<byte>(new byte[] { 21 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 38, 67, 138)/*Color.FromArgb(255, 102, 112, 135)*/, false, Obtenciones.Survival),
                new Bloques("minecraft:large_fern", new List<byte>(new byte[] { 175 }), new List<byte>(new byte[] { 3, 11 }), Color.FromArgb(255, 81, 199, 29), true, Obtenciones.Creative),
                new Bloques("minecraft:lava", new List<byte>(new byte[] { 11 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 217, 105, 26), true, Obtenciones.Survival),
                new Bloques("minecraft:lectern", null, null, Color.FromArgb(255, 126, 97, 53), false, Obtenciones.Survival),
                new Bloques("minecraft:lever", new List<byte>(new byte[] { 69 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 106, 89, 64), true, Obtenciones.Survival),
                new Bloques("minecraft:light_blue_banner", new List<byte>(new byte[] { 176 }), new List<byte>(new byte[] { 3 }), Color.FromArgb(255, 36, 137, 198), true, Obtenciones.Survival),
                new Bloques("minecraft:light_blue_bed", null, null, Color.FromArgb(255, 132, 187, 212), true, Obtenciones.Survival),
                new Bloques("minecraft:light_blue_carpet", new List<byte>(new byte[] { 171 }), new List<byte>(new byte[] { 3 }), Color.FromArgb(255, 58, 175, 218), true, Obtenciones.Survival),
                new Bloques("minecraft:light_blue_concrete", new List<byte>(new byte[] { 251 }), new List<byte>(new byte[] { 3 }), Color.FromArgb(255, 36, 137, 199), false, Obtenciones.Survival),
                new Bloques("minecraft:light_blue_concrete_powder", new List<byte>(new byte[] { 252 }), new List<byte>(new byte[] { 3 }), Color.FromArgb(255, 74, 181, 213), false, Obtenciones.Survival),
                new Bloques("minecraft:light_blue_glazed_terracotta", new List<byte>(new byte[] { 238 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 95, 165, 209), false, Obtenciones.Survival),
                new Bloques("minecraft:light_blue_shulker_box", new List<byte>(new byte[] { 222 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 49, 164, 212), true, Obtenciones.Survival),
                new Bloques("minecraft:light_blue_stained_glass", new List<byte>(new byte[] { 95 }), new List<byte>(new byte[] { 3 }), Color.FromArgb(194, 101, 152, 215), false, Obtenciones.Survival),
                new Bloques("minecraft:light_blue_stained_glass_pane", new List<byte>(new byte[] { 160 }), new List<byte>(new byte[] { 3 }), Color.FromArgb(163, 101, 153, 215), true, Obtenciones.Survival),
                new Bloques("minecraft:light_blue_terracotta", new List<byte>(new byte[] { 159 }), new List<byte>(new byte[] { 3 }), Color.FromArgb(255, 113, 109, 138), false, Obtenciones.Survival),
                new Bloques("minecraft:light_blue_wall_banner", new List<byte>(new byte[] { 177 }), new List<byte>(new byte[] { 3 }), Color.FromArgb(255, 37, 137, 198), true, Obtenciones.Survival),
                new Bloques("minecraft:light_blue_wool", new List<byte>(new byte[] { 35 }), new List<byte>(new byte[] { 3 }), Color.FromArgb(255, 58, 175, 217), false, Obtenciones.Survival),
                new Bloques("minecraft:light_gray_banner", new List<byte>(new byte[] { 176 }), new List<byte>(new byte[] { 8 }), Color.FromArgb(255, 124, 125, 115), true, Obtenciones.Survival),
                new Bloques("minecraft:light_gray_bed", null, null, Color.FromArgb(255, 169, 168, 164), true, Obtenciones.Survival),
                new Bloques("minecraft:light_gray_carpet", new List<byte>(new byte[] { 171 }), new List<byte>(new byte[] { 8 }), Color.FromArgb(255, 141, 142, 135), true, Obtenciones.Survival),
                new Bloques("minecraft:light_gray_concrete", new List<byte>(new byte[] { 251 }), new List<byte>(new byte[] { 8 }), Color.FromArgb(255, 125, 125, 115), false, Obtenciones.Survival),
                new Bloques("minecraft:light_gray_concrete_powder", new List<byte>(new byte[] { 252 }), new List<byte>(new byte[] { 8 }), Color.FromArgb(255, 155, 155, 148), false, Obtenciones.Survival),
                new Bloques("minecraft:light_gray_glazed_terracotta", new List<byte>(new byte[] { 243 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 144, 166, 168), false, Obtenciones.Survival),
                new Bloques("minecraft:light_gray_shulker_box", new List<byte>(new byte[] { 227 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 124, 124, 115), true, Obtenciones.Survival),
                new Bloques("minecraft:light_gray_stained_glass", new List<byte>(new byte[] { 95 }), new List<byte>(new byte[] { 8 }), Color.FromArgb(194, 152, 152, 152), false, Obtenciones.Survival),
                new Bloques("minecraft:light_gray_stained_glass_pane", new List<byte>(new byte[] { 160 }), new List<byte>(new byte[] { 8 }), Color.FromArgb(163, 153, 153, 153), true, Obtenciones.Survival),
                new Bloques("minecraft:light_gray_terracotta", new List<byte>(new byte[] { 159 }), new List<byte>(new byte[] { 8 }), Color.FromArgb(255, 135, 107, 97), false, Obtenciones.Survival),
                new Bloques("minecraft:light_gray_wall_banner", new List<byte>(new byte[] { 177 }), new List<byte>(new byte[] { 8 }), Color.FromArgb(255, 125, 125, 114), true, Obtenciones.Survival),
                new Bloques("minecraft:light_gray_wool", new List<byte>(new byte[] { 35 }), new List<byte>(new byte[] { 8 }), Color.FromArgb(255, 142, 142, 135), false, Obtenciones.Survival),
                new Bloques("minecraft:light_weighted_pressure_plate", new List<byte>(new byte[] { 147 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 254, 246, 85), true, Obtenciones.Survival),
                new Bloques("minecraft:lilac", new List<byte>(new byte[] { 175 }), new List<byte>(new byte[] { 1, 9 }), Color.FromArgb(255, 171, 147, 172)/*Color.FromArgb(255, 148, 148, 140)*/, true, Obtenciones.Survival),
                new Bloques("minecraft:lily_of_the_valley", null, null, Color.FromArgb(255, 123, 175, 95), false, Obtenciones.Survival),
                new Bloques("minecraft:lily_pad", new List<byte>(new byte[] { 111 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 40, 159, 60), true, Obtenciones.Survival),
                new Bloques("minecraft:lime_banner", new List<byte>(new byte[] { 176 }), new List<byte>(new byte[] { 5 }), Color.FromArgb(255, 94, 168, 24), true, Obtenciones.Survival),
                new Bloques("minecraft:lime_bed", null, null, Color.FromArgb(255, 157, 192, 120), true, Obtenciones.Survival),
                new Bloques("minecraft:lime_carpet", new List<byte>(new byte[] { 171 }), new List<byte>(new byte[] { 5 }), Color.FromArgb(255, 112, 185, 25), true, Obtenciones.Survival),
                new Bloques("minecraft:lime_concrete", new List<byte>(new byte[] { 251 }), new List<byte>(new byte[] { 5 }), Color.FromArgb(255, 94, 169, 24), false, Obtenciones.Survival),
                new Bloques("minecraft:lime_concrete_powder", new List<byte>(new byte[] { 252 }), new List<byte>(new byte[] { 5 }), Color.FromArgb(255, 125, 189, 42), false, Obtenciones.Survival),
                new Bloques("minecraft:lime_glazed_terracotta", new List<byte>(new byte[] { 240 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 163, 198, 55), false, Obtenciones.Survival),
                new Bloques("minecraft:lime_shulker_box", new List<byte>(new byte[] { 224 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 100, 173, 23), true, Obtenciones.Survival),
                new Bloques("minecraft:lime_stained_glass", new List<byte>(new byte[] { 95 }), new List<byte>(new byte[] { 5 }), Color.FromArgb(194, 127, 203, 25), false, Obtenciones.Survival),
                new Bloques("minecraft:lime_stained_glass_pane", new List<byte>(new byte[] { 160 }), new List<byte>(new byte[] { 5 }), Color.FromArgb(163, 126, 203, 25), true, Obtenciones.Survival),
                new Bloques("minecraft:lime_terracotta", new List<byte>(new byte[] { 159 }), new List<byte>(new byte[] { 5 }), Color.FromArgb(255, 104, 118, 53), false, Obtenciones.Survival),
                new Bloques("minecraft:lime_wall_banner", new List<byte>(new byte[] { 177 }), new List<byte>(new byte[] { 5 }), Color.FromArgb(255, 95, 168, 24), true, Obtenciones.Survival),
                new Bloques("minecraft:lime_wool", new List<byte>(new byte[] { 35 }), new List<byte>(new byte[] { 5 }), Color.FromArgb(255, 112, 185, 26), false, Obtenciones.Survival),
                new Bloques("minecraft:loom", null, null, Color.FromArgb(255, 148, 119, 82), false, Obtenciones.Survival),
                new Bloques("minecraft:magenta_banner", new List<byte>(new byte[] { 176 }), new List<byte>(new byte[] { 2 }), Color.FromArgb(255, 168, 48, 159), true, Obtenciones.Survival),
                new Bloques("minecraft:magenta_bed", null, null, Color.FromArgb(255, 193, 134, 189), true, Obtenciones.Survival),
                new Bloques("minecraft:magenta_carpet", new List<byte>(new byte[] { 171 }), new List<byte>(new byte[] { 2 }), Color.FromArgb(255, 189, 68, 179), true, Obtenciones.Survival),
                new Bloques("minecraft:magenta_concrete", new List<byte>(new byte[] { 251 }), new List<byte>(new byte[] { 2 }), Color.FromArgb(255, 169, 48, 159), false, Obtenciones.Survival),
                new Bloques("minecraft:magenta_concrete_powder", new List<byte>(new byte[] { 252 }), new List<byte>(new byte[] { 2 }), Color.FromArgb(255, 193, 84, 185), false, Obtenciones.Survival),
                new Bloques("minecraft:magenta_glazed_terracotta", new List<byte>(new byte[] { 237 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 208, 100, 192), false, Obtenciones.Survival),
                new Bloques("minecraft:magenta_shulker_box", new List<byte>(new byte[] { 221 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 174, 54, 164), true, Obtenciones.Survival),
                new Bloques("minecraft:magenta_stained_glass", new List<byte>(new byte[] { 95 }), new List<byte>(new byte[] { 2 }), Color.FromArgb(194, 178, 76, 215), false, Obtenciones.Survival),
                new Bloques("minecraft:magenta_stained_glass_pane", new List<byte>(new byte[] { 160 }), new List<byte>(new byte[] { 2 }), Color.FromArgb(163, 178, 76, 214), true, Obtenciones.Survival),
                new Bloques("minecraft:magenta_terracotta", new List<byte>(new byte[] { 159 }), new List<byte>(new byte[] { 2 }), Color.FromArgb(255, 150, 88, 109), false, Obtenciones.Survival),
                new Bloques("minecraft:magenta_wall_banner", new List<byte>(new byte[] { 177 }), new List<byte>(new byte[] { 2 }), Color.FromArgb(255, 169, 48, 158), true, Obtenciones.Survival),
                new Bloques("minecraft:magenta_wool", new List<byte>(new byte[] { 35 }), new List<byte>(new byte[] { 2 }), Color.FromArgb(255, 190, 69, 180), false, Obtenciones.Survival),
                new Bloques("minecraft:magma_block", new List<byte>(new byte[] { 213 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 135, 65, 25), false, Obtenciones.Survival),
                new Bloques("minecraft:melon", new List<byte>(new byte[] { 103 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 141, 146, 36), false, Obtenciones.Survival),
                new Bloques("minecraft:melon_block", null, null, null, Color.FromArgb(255, 141, 146, 35), false, Obtenciones.Survival, true),
                new Bloques("minecraft:melon_stem", new List<byte>(new byte[] { 105 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 154, 154, 154), true, Obtenciones.Survival),
                new Bloques("minecraft:mob_spawner", null, null, null, Color.FromArgb(255, 160, 1, 255)/*Color.FromArgb(255, 26, 40, 49)*/, false, Obtenciones.Creative, true),
                new Bloques("minecraft:mossy_cobblestone", new List<byte>(new byte[] { 48 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 104, 121, 104), false, Obtenciones.Survival),
                new Bloques("minecraft:mossy_cobblestone_slab", null, null, Color.FromArgb(255, 104, 121, 103), false, Obtenciones.Survival),
                new Bloques("minecraft:mossy_cobblestone_stairs", null, null, Color.FromArgb(255, 104, 121, 102), false, Obtenciones.Survival),
                new Bloques("minecraft:mossy_cobblestone_wall", new List<byte>(new byte[] { 139 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(255, 101, 120, 101), true, Obtenciones.Survival),
                new Bloques("minecraft:mossy_stone_brick_slab", null, null, Color.FromArgb(255, 114, 118, 106), false, Obtenciones.Survival),
                new Bloques("minecraft:mossy_stone_brick_stairs", null, null, Color.FromArgb(255, 113, 118, 105), false, Obtenciones.Survival),
                new Bloques("minecraft:mossy_stone_brick_wall", null, null, Color.FromArgb(255, 114, 118, 105), false, Obtenciones.Survival),
                new Bloques("minecraft:mossy_stone_bricks", new List<byte>(new byte[] { 98 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(255, 115, 119, 106), false, Obtenciones.Survival),
                new Bloques("minecraft:moving_piston", new List<byte>(new byte[] { 36 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 109, 104, 96), true, Obtenciones.Creative),
                new Bloques("minecraft:mushroom_stem", null, null, Color.FromArgb(255, 208, 204, 194), false, Obtenciones.Survival),
                new Bloques("minecraft:mycelium", new List<byte>(new byte[] { 110 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 111, 100, 105), false, Obtenciones.Survival),
                new Bloques("minecraft:nether_brick_fence", new List<byte>(new byte[] { 113 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 44, 23, 27), true, Obtenciones.Survival),
                new Bloques("minecraft:nether_brick_slab", new List<byte>(new byte[] { 44 }), new List<byte>(new byte[] { 6, 14 }), Color.FromArgb(255, 43, 22, 26), true, Obtenciones.Survival),
                new Bloques("minecraft:nether_brick_stairs", new List<byte>(new byte[] { 114 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 44, 22, 26), true, Obtenciones.Survival),
                new Bloques("minecraft:nether_brick_wall", null, null, Color.FromArgb(255, 44, 22, 25), false, Obtenciones.Survival),
                new Bloques("minecraft:nether_bricks", new List<byte>(new byte[] { 112 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 45, 23, 27), false, Obtenciones.Survival),
                new Bloques("minecraft:nether_portal", new List<byte>(new byte[] { 90 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(229, 91, 13, 193), true, Obtenciones.Creative),
                new Bloques("minecraft:nether_quartz_ore", new List<byte>(new byte[] { 153 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 235, 233, 226)/*Color.FromArgb(255, 125, 85, 80)*/, false, Obtenciones.Survival),
                new Bloques("minecraft:nether_sprouts", null, null, Color.FromArgb(255, 20, 146, 133), false, Obtenciones.Survival),
                new Bloques("minecraft:nether_wart", new List<byte>(new byte[] { 115 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 112, 19, 17), true, Obtenciones.Survival),
                new Bloques("minecraft:nether_wart_block", new List<byte>(new byte[] { 214 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 117, 6, 7), false, Obtenciones.Survival),
                new Bloques("minecraft:netherite_block", null, null, Color.FromArgb(255, 67, 61, 64), false, Obtenciones.Survival),
                new Bloques("minecraft:netherrack", new List<byte>(new byte[] { 87 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 111, 54, 53), false, Obtenciones.Survival),
                new Bloques("minecraft:note_block", new List<byte>(new byte[] { 25 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Categorías.Redstone, Color.FromArgb(255, 101, 68, 51), false, Obtenciones.Survival),
                new Bloques("minecraft:oak_bark", null, null, null, Color.FromArgb(255, 101, 81, 50), false, Obtenciones.Survival, true),
                new Bloques("minecraft:oak_button", new List<byte>(new byte[] { 143 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 153, 124, 76), true, Obtenciones.Survival),
                new Bloques("minecraft:oak_door", new List<byte>(new byte[] { 64 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 135, 103, 52), true, Obtenciones.Survival),
                new Bloques("minecraft:oak_fence", new List<byte>(new byte[] { 85 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 153, 125, 77), true, Obtenciones.Survival),
                new Bloques("minecraft:oak_fence_gate", new List<byte>(new byte[] { 107 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 156, 127, 78), true, Obtenciones.Survival),
                new Bloques("minecraft:oak_leaves", new List<byte>(new byte[] { 18 }), new List<byte>(new byte[] { 0, 4, 8, 12 }), Color.FromArgb(255, 85, 204, 33), false, Obtenciones.Survival),
                new Bloques("minecraft:oak_log", new List<byte>(new byte[] { 17 }), new List<byte>(new byte[] { 0, 4, 8, 12 }), Color.FromArgb(255, 102, 81, 49), false, Obtenciones.Survival),
                new Bloques("minecraft:oak_planks", new List<byte>(new byte[] { 5 }), new List<byte>(new byte[] { 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 157, 128, 79), false, Obtenciones.Survival),
                new Bloques("minecraft:oak_pressure_plate", new List<byte>(new byte[] { 72 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 158, 129, 79), true, Obtenciones.Survival),
                new Bloques("minecraft:oak_sapling", new List<byte>(new byte[] { 6 }), new List<byte>(new byte[] { 0, 8, 6, 7, 14, 15 }), Color.FromArgb(255, 72, 102, 38), true, Obtenciones.Survival),
                new Bloques("minecraft:oak_sign", null, null, Color.FromArgb(255, 153, 125, 74), false, Obtenciones.Survival),
                new Bloques("minecraft:oak_slab", new List<byte>(new byte[] { 126 }), new List<byte>(new byte[] { 0, 8, 6, 7, 14, 15 }), Color.FromArgb(255, 156, 127, 79), true, Obtenciones.Survival),
                new Bloques("minecraft:oak_stairs", new List<byte>(new byte[] { 53 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 156, 128, 79), true, Obtenciones.Survival),
                new Bloques("minecraft:oak_trapdoor", new List<byte>(new byte[] { 96 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 127, 93, 46), true, Obtenciones.Survival),
                new Bloques("minecraft:oak_wall_sign", null, null, Color.FromArgb(255, 159, 130, 78), false, Obtenciones.Survival),
                new Bloques("minecraft:oak_wood", null, null, Color.FromArgb(255, 102, 81, 50), false, Obtenciones.Survival),
                new Bloques("minecraft:observer", new List<byte>(new byte[] { 218 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 102, 102, 102), false, Obtenciones.Survival),
                new Bloques("minecraft:obsidian", new List<byte>(new byte[] { 49 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 20, 18, 30), false, Obtenciones.Survival),
                new Bloques("minecraft:orange_banner", new List<byte>(new byte[] { 176 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(255, 223, 97, 1), true, Obtenciones.Survival),
                new Bloques("minecraft:orange_bed", null, null, Color.FromArgb(255, 221, 160, 112), true, Obtenciones.Survival),
                new Bloques("minecraft:orange_carpet", new List<byte>(new byte[] { 171 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(255, 241, 118, 19), true, Obtenciones.Survival),
                new Bloques("minecraft:orange_concrete", new List<byte>(new byte[] { 251 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(255, 224, 97, 1), false, Obtenciones.Survival),
                new Bloques("minecraft:orange_concrete_powder", new List<byte>(new byte[] { 252 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(255, 227, 132, 32), false, Obtenciones.Survival),
                new Bloques("minecraft:orange_glazed_terracotta", new List<byte>(new byte[] { 236 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 155, 147, 92), false, Obtenciones.Survival),
                new Bloques("minecraft:orange_shulker_box", new List<byte>(new byte[] { 220 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 234, 106, 9), true, Obtenciones.Survival),
                new Bloques("minecraft:orange_stained_glass", new List<byte>(new byte[] { 95 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(194, 215, 127, 50), false, Obtenciones.Survival),
                new Bloques("minecraft:orange_stained_glass_pane", new List<byte>(new byte[] { 160 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(163, 215, 126, 51), true, Obtenciones.Survival),
                new Bloques("minecraft:orange_terracotta", new List<byte>(new byte[] { 159 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(255, 162, 84, 38), false, Obtenciones.Survival),
                new Bloques("minecraft:orange_tulip", new List<byte>(new byte[] { 38 }), new List<byte>(new byte[] { 5 }), Color.FromArgb(255, 216, 106, 25)/*Color.FromArgb(255, 96, 134, 32)*/, true, Obtenciones.Survival),
                new Bloques("minecraft:orange_wall_banner", new List<byte>(new byte[] { 177 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(255, 224, 97, 0), true, Obtenciones.Survival),
                new Bloques("minecraft:orange_wool", new List<byte>(new byte[] { 35 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(255, 241, 118, 20), false, Obtenciones.Survival),
                new Bloques("minecraft:oxeye_daisy", new List<byte>(new byte[] { 38 }), new List<byte>(new byte[] { 8 }), Color.FromArgb(255, 233, 230, 193)/*Color.FromArgb(255, 176, 198, 139)*/, true, Obtenciones.Survival),
                new Bloques("minecraft:packed_ice", new List<byte>(new byte[] { 174 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 165, 195, 245), false, Obtenciones.Survival),
                new Bloques("minecraft:peony", new List<byte>(new byte[] { 175 }), new List<byte>(new byte[] { 5, 13 }), Color.FromArgb(255, 228, 190, 244)/*Color.FromArgb(255, 132, 134, 142)*/, true, Obtenciones.Survival),
                new Bloques("minecraft:petrified_oak_slab", new List<byte>(new byte[] { 44 }), new List<byte>(new byte[] { 2, 10 }), Color.FromArgb(255, 157, 128, 78), true, Obtenciones.Creative),
                new Bloques("minecraft:pink_banner", new List<byte>(new byte[] { 176 }), new List<byte>(new byte[] { 6 }), Color.FromArgb(255, 213, 101, 143), true, Obtenciones.Survival),
                new Bloques("minecraft:pink_bed", null, null, Color.FromArgb(255, 219, 168, 185), true, Obtenciones.Survival),
                new Bloques("minecraft:pink_carpet", new List<byte>(new byte[] { 171 }), new List<byte>(new byte[] { 6 }), Color.FromArgb(255, 238, 142, 173), true, Obtenciones.Survival),
                new Bloques("minecraft:pink_concrete", new List<byte>(new byte[] { 251 }), new List<byte>(new byte[] { 6 }), Color.FromArgb(255, 214, 101, 143), false, Obtenciones.Survival),
                new Bloques("minecraft:pink_concrete_powder", new List<byte>(new byte[] { 252 }), new List<byte>(new byte[] { 6 }), Color.FromArgb(255, 229, 153, 181), false, Obtenciones.Survival),
                new Bloques("minecraft:pink_coral", null, null, Color.FromArgb(255, 207, 91, 158), false, Obtenciones.Survival, true),
                new Bloques("minecraft:pink_coral_fan", null, null, Color.FromArgb(255, 182, 64, 137), true, Obtenciones.Survival, true),
                new Bloques("minecraft:pink_coral_plant", null, null, Color.FromArgb(255, 198, 85, 151), true, Obtenciones.Survival, true),
                new Bloques("minecraft:pink_dead_coral", null, null, Color.FromArgb(255, 124, 118, 113), false, Obtenciones.Survival, true),
                new Bloques("minecraft:pink_glazed_terracotta", new List<byte>(new byte[] { 241 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 235, 155, 182), false, Obtenciones.Survival),
                new Bloques("minecraft:pink_shulker_box", new List<byte>(new byte[] { 225 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 230, 122, 158), true, Obtenciones.Survival),
                new Bloques("minecraft:pink_stained_glass", new List<byte>(new byte[] { 95 }), new List<byte>(new byte[] { 6 }), Color.FromArgb(194, 242, 127, 164), false, Obtenciones.Survival),
                new Bloques("minecraft:pink_stained_glass_pane", new List<byte>(new byte[] { 160 }), new List<byte>(new byte[] { 6 }), Color.FromArgb(163, 242, 126, 164), true, Obtenciones.Survival),
                new Bloques("minecraft:pink_terracotta", new List<byte>(new byte[] { 159 }), new List<byte>(new byte[] { 6 }), Color.FromArgb(255, 162, 78, 79), false, Obtenciones.Survival),
                new Bloques("minecraft:pink_tulip", new List<byte>(new byte[] { 38 }), new List<byte>(new byte[] { 7 }), Color.FromArgb(255, 232, 190, 232)/*Color.FromArgb(255, 101, 150, 73)*/, true, Obtenciones.Survival),
                new Bloques("minecraft:pink_wall_banner", new List<byte>(new byte[] { 177 }), new List<byte>(new byte[] { 6 }), Color.FromArgb(255, 214, 101, 142), true, Obtenciones.Survival),
                new Bloques("minecraft:pink_wool", new List<byte>(new byte[] { 35 }), new List<byte>(new byte[] { 6 }), Color.FromArgb(255, 238, 141, 172), false, Obtenciones.Survival),
                new Bloques("minecraft:piston", new List<byte>(new byte[] { 33 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 154, 129, 90), true, Obtenciones.Survival),
                new Bloques("minecraft:piston_head", new List<byte>(new byte[] { 34 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 148, 130, 101), true, Obtenciones.Creative),
                new Bloques("minecraft:player_head", new List<byte>(new byte[] { 144 }), new List<byte>(new byte[] { 3 }), Color.FromArgb(255, 124, 87, 69), true, Obtenciones.Survival),
                new Bloques("minecraft:player_wall_head", null, null, Color.FromArgb(255, 123, 87, 69), true, Obtenciones.Creative),
                new Bloques("minecraft:podzol", new List<byte>(new byte[] { 3 }), new List<byte>(new byte[] { 2 }), Color.FromArgb(255, 91, 63, 29), false, Obtenciones.Survival),
                new Bloques("minecraft:polished_andesite", new List<byte>(new byte[] { 1 }), new List<byte>(new byte[] { 6 }), Color.FromArgb(255, 133, 133, 135), false, Obtenciones.Survival),
                new Bloques("minecraft:polished_andesite_slab", null, null, Color.FromArgb(255, 129, 129, 130), false, Obtenciones.Survival),
                new Bloques("minecraft:polished_andesite_stairs", null, null, Color.FromArgb(255, 130, 130, 131), false, Obtenciones.Survival),
                new Bloques("minecraft:polished_diorite", new List<byte>(new byte[] { 1 }), new List<byte>(new byte[] { 4 }), Color.FromArgb(255, 183, 183, 186), false, Obtenciones.Survival),
                new Bloques("minecraft:polished_diorite_slab", null, null, Color.FromArgb(255, 178, 178, 181), false, Obtenciones.Survival),
                new Bloques("minecraft:polished_diorite_stairs", null, null, Color.FromArgb(255, 180, 180, 180), false, Obtenciones.Survival),
                new Bloques("minecraft:polished_granite", new List<byte>(new byte[] { 1 }), new List<byte>(new byte[] { 2 }), Color.FromArgb(255, 159, 115, 98), false, Obtenciones.Survival),
                new Bloques("minecraft:polished_granite_slab", null, null, Color.FromArgb(255, 154, 110, 94), false, Obtenciones.Survival),
                new Bloques("minecraft:polished_granite_stairs", null, null, Color.FromArgb(255, 156, 111, 95), false, Obtenciones.Survival),
                new Bloques("minecraft:poppy", new List<byte>(new byte[] { 38 }), new List<byte>(new byte[] { 0, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 155, 14, 7)/*Color.FromArgb(255, 101, 58, 4)*/, true, Obtenciones.Survival),
                new Bloques("minecraft:portal", null, null, null, Color.FromArgb(229, 91, 13, 192), true, Obtenciones.Creative, true),
                new Bloques("minecraft:potatoes", new List<byte>(new byte[] { 142 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 79, 163, 43)/*Color.FromArgb(255, 35, 171, 36)*/, true, Obtenciones.Survival),
                new Bloques("minecraft:potted_acacia_sapling", null, null, Color.FromArgb(255, 117, 100, 32), true, Obtenciones.Survival),
                new Bloques("minecraft:potted_allium", null, null, Color.FromArgb(255, 150, 102, 132), true, Obtenciones.Survival),
                new Bloques("minecraft:potted_azure_bluet", null, null, Color.FromArgb(255, 146, 131, 100), true, Obtenciones.Survival),
                new Bloques("minecraft:potted_bamboo", null, null, Color.FromArgb(255, 109, 100, 40), false, Obtenciones.Survival),
                new Bloques("minecraft:potted_birch_sapling", null, null, Color.FromArgb(255, 118, 126, 75), true, Obtenciones.Survival),
                new Bloques("minecraft:potted_blue_orchid", null, null, Color.FromArgb(255, 76, 114, 104), true, Obtenciones.Survival),
                new Bloques("minecraft:potted_brown_mushroom", null, null, Color.FromArgb(255, 132, 83, 65), true, Obtenciones.Survival),
                new Bloques("minecraft:potted_cactus", null, null, Color.FromArgb(255, 63, 77, 36), true, Obtenciones.Survival),
                new Bloques("minecraft:potted_cornflower", null, null, Color.FromArgb(255, 103, 90, 102), false, Obtenciones.Survival),
                new Bloques("minecraft:potted_dandelion", null, null, Color.FromArgb(255, 132, 110, 33), true, Obtenciones.Survival),
                new Bloques("minecraft:potted_dark_oak_sapling", null, null, Color.FromArgb(255, 75, 81, 36), true, Obtenciones.Survival),
                new Bloques("minecraft:potted_dead_bush", null, null, Color.FromArgb(255, 122, 75, 34), true, Obtenciones.Survival),
                new Bloques("minecraft:potted_fern", null, null, Color.FromArgb(255, 93, 150, 36), true, Obtenciones.Survival),
                new Bloques("minecraft:potted_jungle_sapling", null, null, Color.FromArgb(255, 76, 81, 31), true, Obtenciones.Survival),
                new Bloques("minecraft:potted_lily_of_the_valley", null, null, Color.FromArgb(255, 128, 130, 83), false, Obtenciones.Survival),
                new Bloques("minecraft:potted_oak_sapling", null, null, Color.FromArgb(255, 84, 92, 41), true, Obtenciones.Survival),
                new Bloques("minecraft:potted_orange_tulip", null, null, Color.FromArgb(255, 110, 102, 41), true, Obtenciones.Survival),
                new Bloques("minecraft:potted_oxeye_daisy", null, null, Color.FromArgb(255, 156, 138, 103), true, Obtenciones.Survival),
                new Bloques("minecraft:potted_pink_tulip", null, null, Color.FromArgb(255, 114, 112, 68), true, Obtenciones.Survival),
                new Bloques("minecraft:potted_poppy", null, null, Color.FromArgb(255, 127, 52, 34), true, Obtenciones.Survival),
                new Bloques("minecraft:potted_red_mushroom", null, null, Color.FromArgb(255, 154, 61, 52), true, Obtenciones.Survival),
                new Bloques("minecraft:potted_red_tulip", null, null, Color.FromArgb(255, 114, 100, 44), true, Obtenciones.Survival),
                new Bloques("minecraft:potted_spruce_sapling", null, null, Color.FromArgb(255, 75, 63, 41), true, Obtenciones.Survival),
                new Bloques("minecraft:potted_white_tulip", null, null, Color.FromArgb(255, 110, 114, 63), true, Obtenciones.Survival),
                new Bloques("minecraft:potted_wither_rose", null, null, Color.FromArgb(255, 83, 56, 39), false, Obtenciones.Survival),
                new Bloques("minecraft:powered_rail", new List<byte>(new byte[] { 27 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 132, 108, 72), true, Obtenciones.Survival),
                new Bloques("minecraft:prismarine", new List<byte>(new byte[] { 168 }), new List<byte>(new byte[] { 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 107, 170, 151), false, Obtenciones.Survival),
                new Bloques("minecraft:prismarine_brick_slab", null, null, Color.FromArgb(255, 98, 158, 141), true, Obtenciones.Survival),
                new Bloques("minecraft:prismarine_brick_stairs", null, null, Color.FromArgb(255, 99, 159, 142), true, Obtenciones.Survival),
                new Bloques("minecraft:prismarine_bricks", new List<byte>(new byte[] { 168 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(255, 100, 160, 143), false, Obtenciones.Survival),
                new Bloques("minecraft:prismarine_bricks_slab", null, null, null, Color.FromArgb(255, 98, 158, 140), true, Obtenciones.Survival, true),
                new Bloques("minecraft:prismarine_bricks_stairs", null, null, null, Color.FromArgb(255, 99, 159, 141), true, Obtenciones.Survival, true),
                new Bloques("minecraft:prismarine_slab", null, null, Color.FromArgb(255, 107, 170, 152), true, Obtenciones.Survival),
                new Bloques("minecraft:prismarine_stairs", null, null, Color.FromArgb(255, 107, 171, 152), true, Obtenciones.Survival),
                new Bloques("minecraft:prismarine_wall", null, null, Color.FromArgb(255, 106, 170, 151), false, Obtenciones.Survival),
                new Bloques("minecraft:pumpkin", null, null, Color.FromArgb(255, 197, 121, 24), false, Obtenciones.Survival),
                new Bloques("minecraft:pumpkin_stem", new List<byte>(new byte[] { 104 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 192, 170, 24), true, Obtenciones.Survival),
                new Bloques("minecraft:purple_banner", new List<byte>(new byte[] { 176 }), new List<byte>(new byte[] { 10 }), Color.FromArgb(255, 100, 32, 155), true, Obtenciones.Survival),
                new Bloques("minecraft:purple_bed", null, null, Color.FromArgb(255, 159, 124, 186), true, Obtenciones.Survival),
                new Bloques("minecraft:purple_carpet", new List<byte>(new byte[] { 171 }), new List<byte>(new byte[] { 10 }), Color.FromArgb(255, 121, 41, 171), true, Obtenciones.Survival),
                new Bloques("minecraft:purple_concrete", new List<byte>(new byte[] { 251 }), new List<byte>(new byte[] { 10 }), Color.FromArgb(255, 100, 32, 156), false, Obtenciones.Survival),
                new Bloques("minecraft:purple_concrete_powder", new List<byte>(new byte[] { 252 }), new List<byte>(new byte[] { 10 }), Color.FromArgb(255, 132, 56, 178), false, Obtenciones.Survival),
                new Bloques("minecraft:purple_coral", null, null, Color.FromArgb(255, 165, 26, 161), false, Obtenciones.Survival, true),
                new Bloques("minecraft:purple_coral_fan", null, null, Color.FromArgb(255, 140, 22, 143), true, Obtenciones.Survival, true),
                new Bloques("minecraft:purple_coral_plant", null, null, Color.FromArgb(255, 161, 24, 159), true, Obtenciones.Survival, true),
                new Bloques("minecraft:purple_dead_coral", null, null, Color.FromArgb(255, 132, 124, 118), false, Obtenciones.Survival, true),
                new Bloques("minecraft:purple_glazed_terracotta", new List<byte>(new byte[] { 245 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 110, 48, 152), false, Obtenciones.Survival),
                new Bloques("minecraft:purple_shulker_box", new List<byte>(new byte[] { 229 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 103, 32, 156), true, Obtenciones.Survival),
                new Bloques("minecraft:purple_stained_glass", new List<byte>(new byte[] { 95 }), new List<byte>(new byte[] { 10 }), Color.FromArgb(194, 127, 62, 178), false, Obtenciones.Survival),
                new Bloques("minecraft:purple_stained_glass_pane", new List<byte>(new byte[] { 160 }), new List<byte>(new byte[] { 10 }), Color.FromArgb(163, 126, 62, 178), true, Obtenciones.Survival),
                new Bloques("minecraft:purple_terracotta", new List<byte>(new byte[] { 159 }), new List<byte>(new byte[] { 10 }), Color.FromArgb(255, 118, 70, 86), false, Obtenciones.Survival),
                new Bloques("minecraft:purple_wall_banner", new List<byte>(new byte[] { 177 }), new List<byte>(new byte[] { 10 }), Color.FromArgb(255, 101, 32, 155), true, Obtenciones.Survival),
                new Bloques("minecraft:purple_wool", new List<byte>(new byte[] { 35 }), new List<byte>(new byte[] { 10 }), Color.FromArgb(255, 122, 42, 173), false, Obtenciones.Survival),
                new Bloques("minecraft:purpur_block", new List<byte>(new byte[] { 201, 204 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 166, 122, 166), false, Obtenciones.Survival),
                new Bloques("minecraft:purpur_pillar", new List<byte>(new byte[] { 202 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 170, 126, 170), false, Obtenciones.Survival),
                new Bloques("minecraft:purpur_slab", new List<byte>(new byte[] { 205 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 167, 123, 167), true, Obtenciones.Survival),
                new Bloques("minecraft:purpur_stairs", new List<byte>(new byte[] { 203 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 167, 122, 167), true, Obtenciones.Survival),
                new Bloques("minecraft:quartz_block", new List<byte>(new byte[] { 155 }), new List<byte>(new byte[] { 0, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 236, 233, 226), false, Obtenciones.Survival),
                new Bloques("minecraft:quartz_pillar", new List<byte>(new byte[] { 155 }), new List<byte>(new byte[] { 2 }), Color.FromArgb(255, 231, 228, 220), false, Obtenciones.Survival),
                new Bloques("minecraft:quartz_slab", new List<byte>(new byte[] { 44 }), new List<byte>(new byte[] { 7, 15 }), Color.FromArgb(255, 234, 232, 225), true, Obtenciones.Survival),
                new Bloques("minecraft:quartz_stairs", new List<byte>(new byte[] { 156 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 235, 232, 225), true, Obtenciones.Survival),
                new Bloques("minecraft:rail", new List<byte>(new byte[] { 66 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 121, 109, 89), true, Obtenciones.Survival),
                new Bloques("minecraft:red_banner", new List<byte>(new byte[] { 176 }), new List<byte>(new byte[] { 14 }), Color.FromArgb(255, 141, 33, 33), true, Obtenciones.Survival),
                new Bloques("minecraft:red_bed", new List<byte>(new byte[] { 26 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 178, 122, 122), true, Obtenciones.Survival),
                new Bloques("minecraft:red_carpet", new List<byte>(new byte[] { 171 }), new List<byte>(new byte[] { 14 }), Color.FromArgb(255, 160, 39, 34), true, Obtenciones.Survival),
                new Bloques("minecraft:red_concrete", new List<byte>(new byte[] { 251 }), new List<byte>(new byte[] { 14 }), Color.FromArgb(255, 142, 33, 33), false, Obtenciones.Survival),
                new Bloques("minecraft:red_concrete_powder", new List<byte>(new byte[] { 252 }), new List<byte>(new byte[] { 14 }), Color.FromArgb(255, 168, 54, 51), false, Obtenciones.Survival),
                new Bloques("minecraft:red_coral", null, null, Color.FromArgb(255, 164, 35, 46), false, Obtenciones.Survival, true),
                new Bloques("minecraft:red_coral_fan", null, null, Color.FromArgb(255, 159, 35, 44), true, Obtenciones.Survival, true),
                new Bloques("minecraft:red_coral_plant", null, null, Color.FromArgb(255, 167, 38, 46), true, Obtenciones.Survival, true),
                new Bloques("minecraft:red_dead_coral", null, null, Color.FromArgb(255, 132, 124, 117), false, Obtenciones.Survival, true),
                new Bloques("minecraft:red_glazed_terracotta", new List<byte>(new byte[] { 249 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 182, 60, 53), false, Obtenciones.Survival),
                new Bloques("minecraft:red_mushroom", new List<byte>(new byte[] { 40 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 195, 54, 56), true, Obtenciones.Survival),
                new Bloques("minecraft:red_mushroom_block", new List<byte>(new byte[] { 100 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 183, 38, 36), false, Obtenciones.Survival),
                new Bloques("minecraft:red_nether_brick_slab", null, null, Color.FromArgb(255, 69, 4, 6), false, Obtenciones.Survival),
                new Bloques("minecraft:red_nether_brick_stairs", null, null, Color.FromArgb(255, 68, 4, 6), false, Obtenciones.Survival),
                new Bloques("minecraft:red_nether_brick_wall", null, null, Color.FromArgb(255, 68, 4, 5), false, Obtenciones.Survival),
                new Bloques("minecraft:red_nether_bricks", new List<byte>(new byte[] { 215 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 68, 4, 7), false, Obtenciones.Survival),
                new Bloques("minecraft:red_sand", new List<byte>(new byte[] { 12 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(255, 169, 88, 33), false, Obtenciones.Survival),
                new Bloques("minecraft:red_sandstone", new List<byte>(new byte[] { 179 }), new List<byte>(new byte[] { 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 166, 85, 30), false, Obtenciones.Survival),
                new Bloques("minecraft:red_sandstone_slab", new List<byte>(new byte[] { 182, 181 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 165, 84, 29), true, Obtenciones.Survival),
                new Bloques("minecraft:red_sandstone_stairs", new List<byte>(new byte[] { 180 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 166, 84, 30), true, Obtenciones.Survival),
                new Bloques("minecraft:red_sandstone_wall", null, null, Color.FromArgb(255, 165, 84, 28), false, Obtenciones.Survival),
                new Bloques("minecraft:red_shulker_box", new List<byte>(new byte[] { 233 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 140, 31, 30), true, Obtenciones.Survival),
                new Bloques("minecraft:red_stained_glass", new List<byte>(new byte[] { 95 }), new List<byte>(new byte[] { 14 }), Color.FromArgb(194, 152, 50, 50), false, Obtenciones.Survival),
                new Bloques("minecraft:red_stained_glass_pane", new List<byte>(new byte[] { 160 }), new List<byte>(new byte[] { 14 }), Color.FromArgb(163, 153, 51, 51), true, Obtenciones.Survival),
                new Bloques("minecraft:red_terracotta", new List<byte>(new byte[] { 159 }), new List<byte>(new byte[] { 14 }), Color.FromArgb(255, 143, 61, 47), false, Obtenciones.Survival),
                new Bloques("minecraft:red_tulip", new List<byte>(new byte[] { 38 }), new List<byte>(new byte[] { 4 }), Color.FromArgb(255, 202, 48, 12)/*Color.FromArgb(255, 103, 135, 39)*/, true, Obtenciones.Survival),
                new Bloques("minecraft:red_wall_banner", new List<byte>(new byte[] { 177 }), new List<byte>(new byte[] { 14 }), Color.FromArgb(255, 142, 33, 32), true, Obtenciones.Survival),
                new Bloques("minecraft:red_wool", new List<byte>(new byte[] { 35 }), new List<byte>(new byte[] { 14 }), Color.FromArgb(255, 161, 39, 35), false, Obtenciones.Survival),
                new Bloques("minecraft:redstone_block", new List<byte>(new byte[] { 152 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 171, 28, 9), false, Obtenciones.Survival),
                new Bloques("minecraft:redstone_lamp", new List<byte>(new byte[] { 123, 124 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 70, 43, 27), false, Obtenciones.Survival),
                new Bloques("minecraft:redstone_ore", new List<byte>(new byte[] { 73, 74 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 170, 28, 9)/*Color.FromArgb(255, 133, 107, 107)*/, false, Obtenciones.Survival),
                new Bloques("minecraft:redstone_torch", new List<byte>(new byte[] { 75, 76 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 168, 76, 41), true, Obtenciones.Survival),
                new Bloques("minecraft:redstone_wall_torch", null, null, Color.FromArgb(255, 167, 76, 41), true, Obtenciones.Survival),
                new Bloques("minecraft:redstone_wire", new List<byte>(new byte[] { 55 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 53, 0, 0), true, Obtenciones.Survival),
                new Bloques("minecraft:repeater", new List<byte>(new byte[] { 93, 94 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 151, 147, 147), true, Obtenciones.Survival),
                new Bloques("minecraft:repeating_command_block", new List<byte>(new byte[] { 210 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 124, 107, 172), false, Obtenciones.Survival),
                new Bloques("minecraft:rose_bush", new List<byte>(new byte[] { 175 }), new List<byte>(new byte[] { 4, 12 }), Color.FromArgb(255, 193, 15, 15)/*Color.FromArgb(255, 116, 61, 8)*/, true, Obtenciones.Survival),
                new Bloques("minecraft:sand", new List<byte>(new byte[] { 12 }), new List<byte>(new byte[] { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 219, 211, 160), false, Obtenciones.Survival),
                new Bloques("minecraft:sandstone", new List<byte>(new byte[] { 24 }), new List<byte>(new byte[] { 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 217, 210, 157), false, Obtenciones.Survival),
                new Bloques("minecraft:sandstone_slab", new List<byte>(new byte[] { 44 }), new List<byte>(new byte[] { 1, 9 }), Color.FromArgb(255, 216, 209, 156), true, Obtenciones.Survival),
                new Bloques("minecraft:sandstone_stairs", new List<byte>(new byte[] { 128 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 217, 209, 157), true, Obtenciones.Survival),
                new Bloques("minecraft:sandstone_wall", null, null, Color.FromArgb(255, 216, 209, 155), false, Obtenciones.Survival),
                new Bloques("minecraft:scaffolding", null, null, Color.FromArgb(255, 175, 134, 80), false, Obtenciones.Survival),
                new Bloques("minecraft:sea_grass", null, null, Color.FromArgb(255, 51, 126, 9), true, Obtenciones.Survival, true),
                new Bloques("minecraft:sea_lantern", new List<byte>(new byte[] { 169 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 172, 200, 191), false, Obtenciones.Survival),
                new Bloques("minecraft:sea_pickle", null, null, Color.FromArgb(255, 105, 114, 52)/*Color.FromArgb(255, 90, 97, 40)*/, true, Obtenciones.Survival),
                new Bloques("minecraft:seagrass", null, null, Color.FromArgb(255, 51, 126, 8), true, Obtenciones.Survival),
                new Bloques("minecraft:shroomlight", null, null, Color.FromArgb(255, 241, 147, 71), false, Obtenciones.Survival),
                new Bloques("minecraft:shulker_box", null, null, Color.FromArgb(255, 139, 97, 139), true, Obtenciones.Survival),
                new Bloques("minecraft:sign", new List<byte>(new byte[] { 63, 68 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 153, 125, 75), true, Obtenciones.Survival, true),
                new Bloques("minecraft:skeleton_skull", new List<byte>(new byte[] { 144 }), new List<byte>(new byte[] { 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 153, 153, 152), true, Obtenciones.Survival),
                new Bloques("minecraft:skeleton_wall_skull", null, null, Color.FromArgb(255, 152, 153, 153), true, Obtenciones.Survival),
                new Bloques("minecraft:slime_block", new List<byte>(new byte[] { 165 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(188, 120, 200, 101), false, Obtenciones.Survival),
                new Bloques("minecraft:smithing_table", null, null, Color.FromArgb(255, 128, 103, 70), false, Obtenciones.Survival),
                new Bloques("minecraft:smoker", null, null, Color.FromArgb(255, 88, 75, 58), false, Obtenciones.Survival),
                new Bloques("minecraft:smooth_quartz", new List<byte>(new byte[] { 43 }), new List<byte>(new byte[] { 14 }), Color.FromArgb(255, 235, 233, 225), false, Obtenciones.Survival),
                new Bloques("minecraft:smooth_quartz_slab", null, null, Color.FromArgb(255, 235, 232, 224), false, Obtenciones.Survival),
                new Bloques("minecraft:smooth_quartz_stairs", null, null, Color.FromArgb(255, 235, 232, 223), false, Obtenciones.Survival),
                new Bloques("minecraft:smooth_red_sandstone", new List<byte>(new byte[] { 181 }), new List<byte>(new byte[] { 8 }), Color.FromArgb(255, 167, 85, 30), false, Obtenciones.Survival),
                new Bloques("minecraft:smooth_red_sandstone_slab", null, null, Color.FromArgb(255, 167, 85, 29), false, Obtenciones.Survival),
                new Bloques("minecraft:smooth_red_sandstone_stairs", null, null, Color.FromArgb(255, 167, 85, 28), false, Obtenciones.Survival),
                new Bloques("minecraft:smooth_sandstone", new List<byte>(new byte[] { 43 }), new List<byte>(new byte[] { 9 }), Color.FromArgb(255, 218, 210, 159), false, Obtenciones.Survival),
                new Bloques("minecraft:smooth_sandstone_slab", null, null, Color.FromArgb(255, 218, 211, 159), false, Obtenciones.Survival),
                new Bloques("minecraft:smooth_sandstone_stairs", null, null, Color.FromArgb(255, 219, 211, 159), false, Obtenciones.Survival),
                new Bloques("minecraft:smooth_stone", new List<byte>(new byte[] { 43 }), new List<byte>(new byte[] { 8 }), Color.FromArgb(255, 159, 159, 159), false, Obtenciones.Survival),
                new Bloques("minecraft:smooth_stone_slab", null, null, Color.FromArgb(255, 167, 167, 166), false, Obtenciones.Survival),
                new Bloques("minecraft:snow", new List<byte>(new byte[] { 78 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 241, 251, 251), true, Obtenciones.Survival),
                new Bloques("minecraft:snow_block", new List<byte>(new byte[] { 80 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 240, 251, 251), false, Obtenciones.Survival),
                new Bloques("minecraft:soul_fire", null, null, Color.FromArgb(255, 56, 204, 209), false, Obtenciones.Survival),
                new Bloques("minecraft:soul_fire_lantern", null, null, Color.FromArgb(255, 102, 134, 133), false, Obtenciones.Survival),
                new Bloques("minecraft:soul_fire_torch", null, null, Color.FromArgb(255, 109, 115, 90), false, Obtenciones.Survival),
                new Bloques("minecraft:soul_fire_wall_torch", null, null, Color.FromArgb(255, 109, 115, 91), false, Obtenciones.Survival),
                new Bloques("minecraft:soul_sand", new List<byte>(new byte[] { 88 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 85, 64, 52), true, Obtenciones.Survival),
                new Bloques("minecraft:soul_soil", null, null, Color.FromArgb(255, 76, 58, 47), false, Obtenciones.Survival),
                new Bloques("minecraft:spawner", new List<byte>(new byte[] { 52 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 160, 0, 255)/*Color.FromArgb(255, 26, 40, 49)*/, false, Obtenciones.Creative),
                new Bloques("minecraft:sponge", new List<byte>(new byte[] { 19 }), new List<byte>(new byte[] { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 195, 196, 85), false, Obtenciones.Survival),
                new Bloques("minecraft:spruce_bark", null, null, null, Color.FromArgb(255, 45, 29, 12), false, Obtenciones.Survival, true),
                new Bloques("minecraft:spruce_button", null, null, Color.FromArgb(255, 100, 76, 46), true, Obtenciones.Survival),
                new Bloques("minecraft:spruce_door", new List<byte>(new byte[] { 193 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 96, 75, 49), true, Obtenciones.Survival),
                new Bloques("minecraft:spruce_fence", new List<byte>(new byte[] { 188 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 101, 76, 46), true, Obtenciones.Survival),
                new Bloques("minecraft:spruce_fence_gate", new List<byte>(new byte[] { 183 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 103, 78, 47), true, Obtenciones.Survival),
                new Bloques("minecraft:spruce_leaves", new List<byte>(new byte[] { 18 }), new List<byte>(new byte[] { 1, 5, 9, 13 }), Color.FromArgb(255, 96, 145, 96), false, Obtenciones.Survival),
                new Bloques("minecraft:spruce_log", new List<byte>(new byte[] { 17 }), new List<byte>(new byte[] { 1, 5, 9, 13 }), Color.FromArgb(255, 46, 29, 11), false, Obtenciones.Survival),
                new Bloques("minecraft:spruce_planks", new List<byte>(new byte[] { 5 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(255, 104, 78, 47), false, Obtenciones.Survival),
                new Bloques("minecraft:spruce_pressure_plate", null, null, Color.FromArgb(255, 105, 79, 47), true, Obtenciones.Survival),
                new Bloques("minecraft:spruce_sapling", new List<byte>(new byte[] { 6 }), new List<byte>(new byte[] { 1, 9 }), Color.FromArgb(255, 51, 58, 34), true, Obtenciones.Survival),
                new Bloques("minecraft:spruce_sign", null, null, Color.FromArgb(255, 103, 77, 45), false, Obtenciones.Survival),
                new Bloques("minecraft:spruce_slab", new List<byte>(new byte[] { 126 }), new List<byte>(new byte[] { 1, 9 }), Color.FromArgb(255, 103, 77, 46), true, Obtenciones.Survival),
                new Bloques("minecraft:spruce_stairs", new List<byte>(new byte[] { 134 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 103, 77, 47), true, Obtenciones.Survival),
                new Bloques("minecraft:spruce_trapdoor", null, null, Color.FromArgb(255, 100, 76, 49), true, Obtenciones.Survival),
                new Bloques("minecraft:spruce_wall_sign", null, null, Color.FromArgb(255, 110, 83, 49), false, Obtenciones.Survival),
                new Bloques("minecraft:spruce_wood", null, null, Color.FromArgb(255, 46, 29, 12), false, Obtenciones.Survival),
                new Bloques("minecraft:sticky_piston", new List<byte>(new byte[] { 29 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 142, 146, 100), true, Obtenciones.Survival),
                new Bloques("minecraft:stone", new List<byte>(new byte[] { 1 }), new List<byte>(new byte[] { 0, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 125, 125, 125), false, Obtenciones.Survival),
                new Bloques("minecraft:stone_brick_slab", new List<byte>(new byte[] { 44 }), new List<byte>(new byte[] { 5, 13 }), Color.FromArgb(255, 121, 122, 122), true, Obtenciones.Survival),
                new Bloques("minecraft:stone_brick_stairs", new List<byte>(new byte[] { 109 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 121, 121, 121), true, Obtenciones.Survival),
                new Bloques("minecraft:stone_brick_wall", null, null, Color.FromArgb(255, 121, 121, 120), false, Obtenciones.Survival),
                new Bloques("minecraft:stone_bricks", new List<byte>(new byte[] { 98 }), new List<byte>(new byte[] { 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 122, 122, 122), false, Obtenciones.Survival),
                new Bloques("minecraft:stone_button", new List<byte>(new byte[] { 77 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 124, 124, 124), true, Obtenciones.Survival),
                new Bloques("minecraft:stone_pressure_plate", new List<byte>(new byte[] { 70 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 126, 126, 126), true, Obtenciones.Survival),
                new Bloques("minecraft:stone_slab", new List<byte>(new byte[] { 44 }), new List<byte>(new byte[] { 0, 8 }), Color.FromArgb(255, 167, 167, 167), true, Obtenciones.Survival),
                new Bloques("minecraft:stone_stairs", null, null, Color.FromArgb(255, 126, 126, 125), false, Obtenciones.Survival),
                new Bloques("minecraft:stonecutter", null, null, Color.FromArgb(255, 164, 163, 164), false, Obtenciones.Survival),
                new Bloques("minecraft:stripped_acacia_log", null, null, Color.FromArgb(255, 175, 93, 59), false, Obtenciones.Survival),
                new Bloques("minecraft:stripped_acacia_wood", null, null, Color.FromArgb(255, 175, 93, 60), false, Obtenciones.Survival),
                new Bloques("minecraft:stripped_birch_log", null, null, Color.FromArgb(255, 197, 176, 117), false, Obtenciones.Survival),
                new Bloques("minecraft:stripped_birch_wood", null, null, Color.FromArgb(255, 197, 176, 118), false, Obtenciones.Survival),
                new Bloques("minecraft:stripped_crimson_stem", null, null, Color.FromArgb(255, 137, 57, 90), false, Obtenciones.Survival),
                new Bloques("minecraft:stripped_dark_oak_log", null, null, Color.FromArgb(255, 97, 76, 49), false, Obtenciones.Survival),
                new Bloques("minecraft:stripped_dark_oak_wood", null, null, Color.FromArgb(255, 97, 76, 50), false, Obtenciones.Survival),
                new Bloques("minecraft:stripped_jungle_log", null, null, Color.FromArgb(255, 170, 132, 82), false, Obtenciones.Survival),
                new Bloques("minecraft:stripped_jungle_wood", null, null, Color.FromArgb(255, 171, 133, 85), false, Obtenciones.Survival),
                new Bloques("minecraft:stripped_oak_log", null, null, Color.FromArgb(255, 177, 144, 85), false, Obtenciones.Survival),
                new Bloques("minecraft:stripped_oak_wood", null, null, Color.FromArgb(255, 177, 144, 86), false, Obtenciones.Survival),
                new Bloques("minecraft:stripped_spruce_log", null, null, Color.FromArgb(255, 116, 90, 51), false, Obtenciones.Survival),
                new Bloques("minecraft:stripped_spruce_wood", null, null, Color.FromArgb(255, 116, 90, 52), false, Obtenciones.Survival),
                new Bloques("minecraft:stripped_warped_stem", null, null, Color.FromArgb(255, 58, 151, 148), false, Obtenciones.Survival),
                new Bloques("minecraft:structure_block", new List<byte>(new byte[] { 255 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 89, 74, 90), true, Obtenciones.Survival),
                new Bloques("minecraft:structure_void", new List<byte>(new byte[] { 217 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 31, 91, 96), true, Obtenciones.Survival),
                new Bloques("minecraft:sugar_cane", new List<byte>(new byte[] { 83 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 149, 193, 101), true, Obtenciones.Survival),
                new Bloques("minecraft:sunflower", new List<byte>(new byte[] { 175 }), new List<byte>(new byte[] { 0, 8, 6, 7, 14, 15 }), Color.FromArgb(255, 234, 198, 34)/*Color.FromArgb(255, 201, 181, 36)*/, true, Obtenciones.Survival),
                new Bloques("minecraft:sweet_berry_bush", null, null, Color.FromArgb(255, 68, 78, 51), false, Obtenciones.Survival),
                new Bloques("minecraft:tall_grass", new List<byte>(new byte[] { 175 }), new List<byte>(new byte[] { 2, 10 }), Color.FromArgb(255, 90, 214, 35), true, Obtenciones.Survival),
                new Bloques("minecraft:tall_sea_grass", null, null, Color.FromArgb(255, 46, 118, 4), true, Obtenciones.Survival, true),
                new Bloques("minecraft:tall_seagrass", null, null, Color.FromArgb(255, 46, 118, 3), true, Obtenciones.Survival),
                new Bloques("minecraft:terracotta", new List<byte>(new byte[] { 172 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 151, 93, 67), false, Obtenciones.Survival),
                new Bloques("minecraft:three_turtle_eggs", null, null, Color.FromArgb(255, 226, 225, 189), true, Obtenciones.Survival, true),
                new Bloques("minecraft:tnt", new List<byte>(new byte[] { 46 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 170, 93, 71), false, Obtenciones.Survival),
                new Bloques("minecraft:torch", new List<byte>(new byte[] { 50 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 255, 217, 102)/*Color.FromArgb(255, 130, 106, 58)*/, true, Obtenciones.Survival),
                new Bloques("minecraft:trapped_chest", new List<byte>(new byte[] { 146 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 119, 88, 42), true, Obtenciones.Survival),
                new Bloques("minecraft:tripwire", new List<byte>(new byte[] { 132 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(226, 129, 129, 129), true, Obtenciones.Survival),
                new Bloques("minecraft:tripwire_hook", new List<byte>(new byte[] { 131 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 139, 129, 114), true, Obtenciones.Survival),
                new Bloques("minecraft:tube_coral", null, null, Color.FromArgb(255, 48, 83, 196), true, Obtenciones.Survival),
                new Bloques("minecraft:tube_coral_block", null, null, Color.FromArgb(255, 49, 87, 206), false, Obtenciones.Survival),
                new Bloques("minecraft:tube_coral_fan", null, null, Color.FromArgb(255, 51, 92, 209), true, Obtenciones.Survival),
                new Bloques("minecraft:tube_coral_wall_fan", null, null, Color.FromArgb(255, 51, 92, 208), true, Obtenciones.Survival),
                new Bloques("minecraft:turtle_egg", null, null, Color.FromArgb(255, 227, 225, 185), true, Obtenciones.Survival),
                new Bloques("minecraft:two_turtle_eggs", null, null, Color.FromArgb(255, 225, 226, 190), true, Obtenciones.Survival, true),
                new Bloques("minecraft:vine", new List<byte>(new byte[] { 106 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 58, 136, 65), true, Obtenciones.Survival),
                new Bloques("minecraft:void_air", null, null, Color.FromArgb(0, 1, 1, 1), true, Obtenciones.Survival),
                new Bloques("minecraft:wall_banner", null, null, Color.FromArgb(255, 236, 235, 236), true, Obtenciones.Survival, true),
                new Bloques("minecraft:wall_sign", new List<byte>(new byte[] { 68 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 158, 130, 78), true, Obtenciones.Survival, true),
                new Bloques("minecraft:wall_torch", null, null, Color.FromArgb(255, 129, 106, 58), true, Obtenciones.Survival),
                new Bloques("minecraft:warped_button", null, null, Color.FromArgb(255, 42, 105, 100), false, Obtenciones.Survival),
                new Bloques("minecraft:warped_door", null, null, Color.FromArgb(255, 45, 125, 118), false, Obtenciones.Survival),
                new Bloques("minecraft:warped_fence", null, null, Color.FromArgb(255, 42, 103, 97), false, Obtenciones.Survival),
                new Bloques("minecraft:warped_fence_gate", null, null, Color.FromArgb(255, 43, 104, 99), false, Obtenciones.Survival),
                new Bloques("minecraft:warped_fungi", null, null, Color.FromArgb(255, 74, 109, 88), false, Obtenciones.Survival),
                new Bloques("minecraft:warped_nylium", null, null, Color.FromArgb(255, 43, 114, 101), false, Obtenciones.Survival),
                new Bloques("minecraft:warped_planks", null, null, Color.FromArgb(255, 43, 105, 99), false, Obtenciones.Survival),
                new Bloques("minecraft:warped_pressure_plate", null, null, Color.FromArgb(255, 44, 106, 100), false, Obtenciones.Survival),
                new Bloques("minecraft:warped_roots", null, null, Color.FromArgb(255, 20, 138, 124), false, Obtenciones.Survival),
                new Bloques("minecraft:warped_sign", null, null, Color.FromArgb(255, 38, 104, 100), false, Obtenciones.Survival),
                new Bloques("minecraft:warped_slab", null, null, Color.FromArgb(255, 43, 104, 98), false, Obtenciones.Survival),
                new Bloques("minecraft:warped_stairs", null, null, Color.FromArgb(255, 43, 104, 100), false, Obtenciones.Survival),
                new Bloques("minecraft:warped_stem", null, null, Color.FromArgb(255, 58, 59, 78), false, Obtenciones.Survival),
                new Bloques("minecraft:warped_trapdoor", null, null, Color.FromArgb(255, 47, 120, 112), false, Obtenciones.Survival),
                new Bloques("minecraft:warped_wall_sign", null, null, Color.FromArgb(255, 36, 109, 102), false, Obtenciones.Survival),
                new Bloques("minecraft:warped_wart_block", null, null, Color.FromArgb(255, 23, 120, 121), false, Obtenciones.Survival),
                new Bloques("minecraft:water", new List<byte>(new byte[] { 9 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(223, 47, 67, 244), true, Obtenciones.Survival),
                new Bloques("minecraft:weeping_vines", null, null, Color.FromArgb(255, 105, 1, 0), false, Obtenciones.Survival),
                new Bloques("minecraft:weeping_vines_plant", null, null, Color.FromArgb(255, 133, 16, 12), false, Obtenciones.Survival),
                new Bloques("minecraft:wet_sponge", new List<byte>(new byte[] { 19 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(255, 160, 159, 63), false, Obtenciones.Survival),
                new Bloques("minecraft:wheat", new List<byte>(new byte[] { 59 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 138, 139, 11)/*Color.FromArgb(255, 87, 102, 8)*/, true, Obtenciones.Survival),
                new Bloques("minecraft:white_banner", new List<byte>(new byte[] { 176 }), new List<byte>(new byte[] { 0 }), Color.FromArgb(255, 236, 236, 236), true, Obtenciones.Survival),
                new Bloques("minecraft:white_bed", null, null, Color.FromArgb(255, 214, 216, 216), true, Obtenciones.Survival),
                new Bloques("minecraft:white_carpet", new List<byte>(new byte[] { 171 }), new List<byte>(new byte[] { 0 }), Color.FromArgb(255, 234, 236, 236), true, Obtenciones.Survival),
                new Bloques("minecraft:white_concrete", new List<byte>(new byte[] { 251 }), new List<byte>(new byte[] { 0 }), Color.FromArgb(255, 207, 213, 214), false, Obtenciones.Survival),
                new Bloques("minecraft:white_concrete_powder", new List<byte>(new byte[] { 252 }), new List<byte>(new byte[] { 0 }), Color.FromArgb(255, 226, 227, 228), false, Obtenciones.Survival),
                new Bloques("minecraft:white_glazed_terracotta", new List<byte>(new byte[] { 235 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 188, 212, 203), false, Obtenciones.Survival),
                new Bloques("minecraft:white_shulker_box", new List<byte>(new byte[] { 219 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 216, 221, 221), true, Obtenciones.Survival),
                new Bloques("minecraft:white_stained_glass", new List<byte>(new byte[] { 95 }), new List<byte>(new byte[] { 0 }), Color.FromArgb(194, 254, 254, 254), false, Obtenciones.Survival),
                new Bloques("minecraft:white_stained_glass_pane", new List<byte>(new byte[] { 160 }), new List<byte>(new byte[] { 0 }), Color.FromArgb(163, 254, 254, 253), true, Obtenciones.Survival),
                new Bloques("minecraft:white_terracotta", new List<byte>(new byte[] { 159 }), new List<byte>(new byte[] { 0 }), Color.FromArgb(255, 210, 178, 161), false, Obtenciones.Survival),
                new Bloques("minecraft:white_tulip", new List<byte>(new byte[] { 38 }), new List<byte>(new byte[] { 6 }), Color.FromArgb(255, 230, 230, 230)/*Color.FromArgb(255, 95, 153, 66)*/, true, Obtenciones.Survival),
                new Bloques("minecraft:white_wall_banner", new List<byte>(new byte[] { 177 }), new List<byte>(new byte[] { 0 }), Color.FromArgb(255, 237, 236, 236), true, Obtenciones.Survival),
                new Bloques("minecraft:white_wool", new List<byte>(new byte[] { 35 }), new List<byte>(new byte[] { 0 }), Color.FromArgb(255, 234, 236, 237), false, Obtenciones.Survival),
                new Bloques("minecraft:wither_rose", null, null, Color.FromArgb(255, 41, 45, 23), false, Obtenciones.Survival),
                new Bloques("minecraft:wither_skeleton_skull", new List<byte>(new byte[] { 144 }), new List<byte>(new byte[] { 1 }), Color.FromArgb(255, 46, 47, 47), true, Obtenciones.Survival),
                new Bloques("minecraft:wither_skeleton_wall_skull", null, null, Color.FromArgb(255, 46, 46, 47), true, Obtenciones.Survival),
                new Bloques("minecraft:yellow_banner", new List<byte>(new byte[] { 176 }), new List<byte>(new byte[] { 4 }), Color.FromArgb(255, 240, 175, 21), true, Obtenciones.Survival),
                new Bloques("minecraft:yellow_bed", null, null, Color.FromArgb(255, 228, 200, 123), true, Obtenciones.Survival),
                new Bloques("minecraft:yellow_carpet", new List<byte>(new byte[] { 171 }), new List<byte>(new byte[] { 4 }), Color.FromArgb(255, 248, 198, 40), true, Obtenciones.Survival),
                new Bloques("minecraft:yellow_concrete", new List<byte>(new byte[] { 251 }), new List<byte>(new byte[] { 4 }), Color.FromArgb(255, 241, 175, 21), false, Obtenciones.Survival),
                new Bloques("minecraft:yellow_concrete_powder", new List<byte>(new byte[] { 252 }), new List<byte>(new byte[] { 4 }), Color.FromArgb(255, 233, 199, 55), false, Obtenciones.Survival),
                new Bloques("minecraft:yellow_coral", null, null, Color.FromArgb(255, 216, 200, 65), false, Obtenciones.Survival, true),
                new Bloques("minecraft:yellow_coral_fan", null, null, Color.FromArgb(255, 201, 171, 58), true, Obtenciones.Survival, true),
                new Bloques("minecraft:yellow_coral_plant", null, null, Color.FromArgb(255, 209, 186, 62), true, Obtenciones.Survival, true),
                new Bloques("minecraft:yellow_dead_coral", null, null, Color.FromArgb(255, 134, 126, 119), false, Obtenciones.Survival, true),
                new Bloques("minecraft:yellow_glazed_terracotta", new List<byte>(new byte[] { 239 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 234, 192, 89), false, Obtenciones.Survival),
                new Bloques("minecraft:yellow_shulker_box", new List<byte>(new byte[] { 223 }), new List<byte>(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }), Color.FromArgb(255, 248, 189, 29), true, Obtenciones.Survival),
                new Bloques("minecraft:yellow_stained_glass", new List<byte>(new byte[] { 95 }), new List<byte>(new byte[] { 4 }), Color.FromArgb(194, 229, 229, 50), false, Obtenciones.Survival),
                new Bloques("minecraft:yellow_stained_glass_pane", new List<byte>(new byte[] { 160 }), new List<byte>(new byte[] { 4 }), Color.FromArgb(163, 228, 228, 51), true, Obtenciones.Survival),
                new Bloques("minecraft:yellow_terracotta", new List<byte>(new byte[] { 159 }), new List<byte>(new byte[] { 4 }), Color.FromArgb(255, 186, 133, 35), false, Obtenciones.Survival),
                new Bloques("minecraft:yellow_wall_banner", new List<byte>(new byte[] { 177 }), new List<byte>(new byte[] { 4 }), Color.FromArgb(255, 241, 175, 20), true, Obtenciones.Survival),
                new Bloques("minecraft:yellow_wool", new List<byte>(new byte[] { 35 }), new List<byte>(new byte[] { 4 }), Color.FromArgb(255, 249, 198, 40), false, Obtenciones.Survival),
                new Bloques("minecraft:zombie_head", new List<byte>(new byte[] { 144 }), new List<byte>(new byte[] { 2 }), Color.FromArgb(255, 76, 112, 58), true, Obtenciones.Survival),
                new Bloques("minecraft:zombie_wall_head", null, null, Color.FromArgb(255, 76, 111, 58), true, Obtenciones.Survival),
                
                // TODO: update the textures, since some have changed and also it's average color.
            };

            /// <summary>
            /// Temporary fix to see if any Minecraft 1.12.2- ID is missing from the block dictionaries.
            /// </summary>
            internal static void Contar_IDs_Únicos()
            {
                Dictionary<byte, object> Diccionario_IDs = new Dictionary<byte, object>();
                for (int Índice_Bloque = 0; Índice_Bloque < Matriz_Bloques.Length; Índice_Bloque++)
                {
                    for (int Índice_ID = 0; Índice_ID < Matriz_Bloques[Índice_Bloque].Lista_ID.Count; Índice_ID++)
                    {
                        if (Matriz_Bloques[Índice_Bloque].Lista_ID != null && Matriz_Bloques[Índice_Bloque].Lista_ID.Count > 0 && !Diccionario_IDs.ContainsKey(Matriz_Bloques[Índice_Bloque].Lista_ID[Índice_ID]))
                        {
                            Diccionario_IDs.Add(Matriz_Bloques[Índice_Bloque].Lista_ID[Índice_ID], null);
                        }
                    }
                }
                if (Diccionario_IDs.Count < 256)
                {
                    string Texto = "";
                    for (int Índice = 0; Índice < 256; Índice++)
                    {
                        if (!Diccionario_IDs.ContainsKey((byte)Índice))
                        {
                            Texto += Índice.ToString() + ", ";
                        }
                    }
                    MessageBox.Show("Missing IDs: " + Texto.TrimEnd(", ".ToCharArray()) + ".", Program.Texto_Título_Versión, MessageBoxButtons.OK, MessageBoxIcon.Warning);
                }
            }

            internal static Dictionary<short, object> Diccionario_Índice_Estructuras_Ocultas = new Dictionary<short, object>();
            internal static Dictionary<short, object> Diccionario_Índice_Vida_Vegetal = new Dictionary<short, object>();
            internal static Dictionary<short, object> Diccionario_Índice_Agua = new Dictionary<short, object>();
            internal static Dictionary<short, object> Diccionario_Índice_Lava = new Dictionary<short, object>();
            internal static Dictionary<short, object> Diccionario_Índice_Piedra_Rojiza = new Dictionary<short, object>();
            internal static Dictionary<short, object> Diccionario_Índice_Peces_Plateados = new Dictionary<short, object>();

            // Dictionaries used to quickly obtain one of the values of a block based on it's index in the array.
            internal static Dictionary<short, string> Diccionario_Índice_Nombre = new Dictionary<short, string>();
            internal static Dictionary<short, byte> Diccionario_Índice_ID = new Dictionary<short, byte>();
            internal static Dictionary<short, byte> Diccionario_Índice_Data = new Dictionary<short, byte>();
            internal static Dictionary<short, Color> Diccionario_Índice_Color_ARGB = new Dictionary<short, Color>();
            internal static Dictionary<short, Color> Diccionario_Índice_Color_ARGB_Sólido = new Dictionary<short, Color>();
            internal static Dictionary<short, int> Diccionario_Índice_Código_Hash_Color = new Dictionary<short, int>();
            internal static Dictionary<short, int> Diccionario_Índice_Código_Hash_Color_Sólido = new Dictionary<short, int>();
            internal static Dictionary<short, bool> Diccionario_Índice_Altura_Diferente = new Dictionary<short, bool>();
            internal static Dictionary<short, Obtenciones> Diccionario_Índice_Método_Obtención = new Dictionary<short, Obtenciones>();
            internal static Dictionary<short, Bitmap> Diccionario_Índice_Textura = new Dictionary<short, Bitmap>();
            internal static Dictionary<short, Transparencias> Diccionario_Índice_Transparencia_Textura = new Dictionary<short, Transparencias>();

            // Dictionaries used to quickly obtain the index in the array of a block based on one of it's values.
            internal static Dictionary<string, short> Diccionario_Nombre_Índice = new Dictionary<string, short>();
            internal static Dictionary<byte, short> Diccionario_ID_Índice = new Dictionary<byte, short>();
            internal static Dictionary<byte, short> Diccionario_Data_Índice = new Dictionary<byte, short>();
            internal static Dictionary<Color, short> Diccionario_Color_ARGB_Índice = new Dictionary<Color, short>();
            internal static Dictionary<Color, short> Diccionario_Color_ARGB_Sólido_Índice = new Dictionary<Color, short>();
            internal static Dictionary<int, short> Diccionario_Código_Hash_Color_Índice = new Dictionary<int, short>();
            internal static Dictionary<int, short> Diccionario_Código_Hash_Color_Sólido_Índice = new Dictionary<int, short>();
            internal static Dictionary<bool, short> Diccionario_Altura_Diferente_Índice = new Dictionary<bool, short>();
            internal static Dictionary<Obtenciones, short> Diccionario_Método_Obtención_Índice = new Dictionary<Obtenciones, short>();
            internal static Dictionary<Bitmap, short> Diccionario_Textura_Índice = new Dictionary<Bitmap, short>();
            internal static Dictionary<Transparencias, short> Diccionario_Transparencia_Textura_Índice = new Dictionary<Transparencias, short>();

            /// <summary>
            /// Function that only should be called once when first starting the application, designed to add copies of all the block information in several dictionaries for a quicker block searching later on. It also adds the ID ans Data values from Minecraft 1.12.2- to quickly convert them to Minecraft 1.13+ and viceversa.
            /// </summary>
            internal static void Reiniciar_Diccionarios_Bloques()
            {
                //try
                {
                    if (Matriz_Bloques != null && Matriz_Bloques.Length > 0)
                    {
                        // Sort the main block array by it's Minecraft 1.13+ block names.
                        if (Matriz_Bloques.Length > 1) Array.Sort(Matriz_Bloques, new Comparador_Bloques());
                        //Contar_IDs_Únicos(); // 253, 254
                        //for (int Índice_Bloque = 0; Índice_Bloque < Bloques.Matriz_Bloques.Length; Índice_Bloque++)
                        foreach (Bloques Bloque in Matriz_Bloques)
                        {
                            //Diccionario_Bloques_Índices_Nombres.Add(Bloque.Índice, Bloque.Nombre_1_13);
                            //Diccionario_Bloques_Nombres_Índices.Add(Bloque.Nombre_1_13, Bloque.Índice);

                            // Start the main dictionaries for a quicker block searching:
                            if (!Diccionario_Bloques_Nombres_Índices.ContainsKey(Bloque.Nombre_1_13))
                            {
                                Diccionario_Bloques_Nombres_Índices.Add(Bloque.Nombre_1_13, Bloque.Índice);
                                Diccionario_Nombre_Índice.Add(Bloque.Nombre_1_13, Bloque.Índice);
                            }
                            else MessageBox.Show(Bloque.Nombre_1_13, "Repeated block name");

                            if (!Diccionario_Bloques_Índices_Nombres.ContainsKey(Bloque.Índice))
                            {
                                Diccionario_Bloques_Índices_Nombres.Add(Bloque.Índice, Bloque.Nombre_1_13);
                                Diccionario_Índice_Nombre.Add(Bloque.Índice, Bloque.Nombre_1_13);
                            }
                            else MessageBox.Show(Bloque.Nombre_1_13, "Repeated block index");

                            if (!Diccionario_Color_ARGB_Índice.ContainsKey(Bloque.Color_ARGB))
                            {
                                Diccionario_Color_ARGB_Índice.Add(Bloque.Color_ARGB, Bloque.Índice);
                                Diccionario_Índice_Color_ARGB.Add(Bloque.Índice, Bloque.Color_ARGB);
                            } // 2018_10_10_18_17_07_660 Update.
                            else MessageBox.Show(Bloque.Nombre_1_13, "Repeated block color");

                            if (!Diccionario_Color_ARGB_Sólido_Índice.ContainsKey(Bloque.Color_ARGB_Sólido))
                            {
                                Diccionario_Color_ARGB_Sólido_Índice.Add(Bloque.Color_ARGB_Sólido, Bloque.Índice);
                                Diccionario_Índice_Color_ARGB_Sólido.Add(Bloque.Índice, Bloque.Color_ARGB_Sólido);
                            } // 2018_10_16_12_19_38_738 Update.
                            else MessageBox.Show(Bloque.Nombre_1_13, "Repeated block color without transparency");

                            if (!Diccionario_Código_Hash_Color_Índice.ContainsKey(Bloque.Código_Hash_Color))
                            {
                                Diccionario_Código_Hash_Color_Índice.Add(Bloque.Código_Hash_Color, Bloque.Índice);
                                Diccionario_Índice_Código_Hash_Color.Add(Bloque.Índice, Bloque.Código_Hash_Color);
                            } // 2018_10_10_18_00_11_276 Update.
                            //else MessageBox.Show(Bloque.Nombre_1_13, "Repeated block hash color");

                            if (!Diccionario_Código_Hash_Color_Sólido_Índice.ContainsKey(Bloque.Código_Hash_Color_Sólido))
                            {
                                Diccionario_Código_Hash_Color_Sólido_Índice.Add(Bloque.Código_Hash_Color_Sólido, Bloque.Índice);
                                Diccionario_Índice_Código_Hash_Color_Sólido.Add(Bloque.Índice, Bloque.Código_Hash_Color_Sólido);
                            } // 2018_10_16_12_20_04_668 Update.
                            //else MessageBox.Show(Bloque.Nombre_1_13, "Repeated block hash color without transparency");

                            Diccionario_Bloques_Índices_Colores.Add(Bloque.Índice, Bloque.Color_ARGB);
                            if (Bloque.Lista_ID != null && Bloque.Lista_ID.Count > 0 && Bloque.Lista_Data != null && Bloque.Lista_Data.Count > 0)
                            {
                                for (int Índice_Data = 0; Índice_Data < Bloque.Lista_Data.Count; Índice_Data++)
                                {
                                    short ID_Data = Obtener_Valor_ID_Data(Bloque.Lista_ID[0], Bloque.Lista_Data[Índice_Data]);
                                    if (!Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.ContainsKey(ID_Data)) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(ID_Data, Bloque.Índice);
                                    else MessageBox.Show(Bloque.Nombre_1_13, "Repeated block ID or data");
                                }
                            }
                            if (Bloque.Altura_Diferente) Diccionario_Bloques_Altura_Diferente.Add(Bloque.Índice, Bloque.Nombre_1_13);
                            if (Bloque.Transparencia == Transparencias.Semitransparent) Diccionario_Texturas_Píxeles_Parcialmente_Transparentes.Add(Bloque.Índice, Bloque.Nombre_1_13);
                            if (Bloque.Transparencia == Transparencias.Transparent) Diccionario_Texturas_Píxeles_Completamente_Transparentes.Add(Bloque.Índice, Bloque.Nombre_1_13);
                            if (Bloque.Transparencia != Transparencias.Solid) Diccionario_Texturas_Transparentes.Add(Bloque.Índice, Bloque.Nombre_1_13);
                        }

                        // Start other useful minor dictionaries:
                        Índice_Aire = Diccionario_Bloques_Nombres_Índices["minecraft:air"];
                        Índice_Aire_Cueva = Diccionario_Bloques_Nombres_Índices["minecraft:cave_air"];
                        Índice_Aire_Vacío = Diccionario_Bloques_Nombres_Índices["minecraft:void_air"];

                        Diccionario_Bloques_Aire.Add(Diccionario_Bloques_Nombres_Índices["minecraft:air"], "minecraft:air");
                        Diccionario_Bloques_Aire.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cave_air"], "minecraft:cave_air");
                        Diccionario_Bloques_Aire.Add(Diccionario_Bloques_Nombres_Índices["minecraft:void_air"], "minecraft:void_air");

                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:air"], "minecraft:air");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cave_air"], "minecraft:cave_air");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:void_air"], "minecraft:void_air");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_leaves"], "minecraft:acacia_leaves");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_leaves"], "minecraft:birch_leaves");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_leaves"], "minecraft:dark_oak_leaves");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_leaves"], "minecraft:jungle_leaves");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_leaves"], "minecraft:oak_leaves");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_leaves"], "minecraft:spruce_leaves");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_log"], "minecraft:acacia_log");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_log"], "minecraft:birch_log");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_log"], "minecraft:dark_oak_log");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_log"], "minecraft:jungle_log");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_log"], "minecraft:oak_log");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_log"], "minecraft:spruce_log");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_mushroom_block"], "minecraft:brown_mushroom_block");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_mushroom_block"], "minecraft:red_mushroom_block");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:mushroom_stem"], "minecraft:mushroom_stem");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:vine"], "minecraft:vine");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cocoa"], "minecraft:cocoa");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:snow"], "minecraft:snow");

                        /*Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:air"], "minecraft:air");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cave_air"], "minecraft:cave_air");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:void_air"], "minecraft:void_air");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_leaves"], "minecraft:acacia_leaves");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_leaves"], "minecraft:birch_leaves");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_leaves"], "minecraft:dark_oak_leaves");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_leaves"], "minecraft:jungle_leaves");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_leaves"], "minecraft:oak_leaves");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_leaves"], "minecraft:spruce_leaves");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:vine"], "minecraft:vine");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cocoa"], "minecraft:cocoa");
                        Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:snow"], "minecraft:snow");*/

                        Diccionario_Bloques_Transparentes.Add(Diccionario_Bloques_Nombres_Índices["minecraft:air"], "minecraft:air");
                        Diccionario_Bloques_Transparentes.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cave_air"], "minecraft:cave_air");
                        Diccionario_Bloques_Transparentes.Add(Diccionario_Bloques_Nombres_Índices["minecraft:void_air"], "minecraft:void_air");
                        Diccionario_Bloques_Transparentes.Add(Diccionario_Bloques_Nombres_Índices["minecraft:water"], "minecraft:water");
                        Diccionario_Bloques_Transparentes.Add(Diccionario_Bloques_Nombres_Índices["minecraft:flowing_water"], "minecraft:flowing_water");
                        Diccionario_Bloques_Transparentes.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lava"], "minecraft:lava");
                        Diccionario_Bloques_Transparentes.Add(Diccionario_Bloques_Nombres_Índices["minecraft:flowing_lava"], "minecraft:flowing_lava");
                        Diccionario_Bloques_Transparentes.Add(Diccionario_Bloques_Nombres_Índices["minecraft:fire"], "minecraft:fire");
                        Diccionario_Bloques_Transparentes.Add(Diccionario_Bloques_Nombres_Índices["minecraft:snow"], "minecraft:snow");
                        Diccionario_Bloques_Transparentes.Add(Diccionario_Bloques_Nombres_Índices["minecraft:ice"], "minecraft:ice");
                        Diccionario_Bloques_Transparentes.Add(Diccionario_Bloques_Nombres_Índices["minecraft:frosted_ice"], "minecraft:frosted_ice");

                        Diccionario_Bloques_Minerales.Add(Diccionario_Bloques_Nombres_Índices["minecraft:emerald_ore"], Color.FromArgb(0, 255, 0));
                        Diccionario_Bloques_Minerales.Add(Diccionario_Bloques_Nombres_Índices["minecraft:diamond_ore"], Color.FromArgb(0, 255, 255));
                        Diccionario_Bloques_Minerales.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gold_ore"], Color.FromArgb(255, 255, 0));
                        Diccionario_Bloques_Minerales.Add(Diccionario_Bloques_Nombres_Índices["minecraft:iron_ore"], Color.FromArgb(192, 192, 192));
                        Diccionario_Bloques_Minerales.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lapis_ore"], Color.FromArgb(0, 0, 144));
                        Diccionario_Bloques_Minerales.Add(Diccionario_Bloques_Nombres_Índices["minecraft:redstone_ore"], Color.FromArgb(255, 0, 0));
                        Diccionario_Bloques_Minerales.Add(Diccionario_Bloques_Nombres_Índices["minecraft:coal_ore"], Color.FromArgb(128, 128, 128));
                        Diccionario_Bloques_Minerales.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_quartz_ore"], Color.FromArgb(255, 255, 255));

                        Diccionario_Bloques_Minerales_1_12_2_a_1_13.Add(129, Diccionario_Bloques_Nombres_Índices["minecraft:emerald_ore"]);
                        Diccionario_Bloques_Minerales_1_12_2_a_1_13.Add(56, Diccionario_Bloques_Nombres_Índices["minecraft:diamond_ore"]);
                        Diccionario_Bloques_Minerales_1_12_2_a_1_13.Add(14, Diccionario_Bloques_Nombres_Índices["minecraft:gold_ore"]);
                        Diccionario_Bloques_Minerales_1_12_2_a_1_13.Add(15, Diccionario_Bloques_Nombres_Índices["minecraft:iron_ore"]);
                        Diccionario_Bloques_Minerales_1_12_2_a_1_13.Add(21, Diccionario_Bloques_Nombres_Índices["minecraft:lapis_ore"]);
                        Diccionario_Bloques_Minerales_1_12_2_a_1_13.Add(73, Diccionario_Bloques_Nombres_Índices["minecraft:redstone_ore"]);
                        Diccionario_Bloques_Minerales_1_12_2_a_1_13.Add(16, Diccionario_Bloques_Nombres_Índices["minecraft:coal_ore"]);
                        Diccionario_Bloques_Minerales_1_12_2_a_1_13.Add(153, Diccionario_Bloques_Nombres_Índices["minecraft:nether_quartz_ore"]);

                        Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:mob_spawner"], Color.FromArgb(255, 0, 255));
                        //Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spawner"], Color.FromArgb(255, 0, 255));
                        Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chest"], Color.FromArgb(255, 0, 0));
                        Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:trapped_chest"], Color.FromArgb(128, 0, 0));
                        Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:ender_chest"], Color.FromArgb(160, 0, 255));
                        Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sponge"], Color.FromArgb(255, 255, 0));
                        Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wet_sponge"], Color.FromArgb(160, 160, 0));
                        Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tnt"], Color.FromArgb(255, 170, 93, 71));
                        Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine_bricks"], Color.FromArgb(255, 100, 160, 143));
                        Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine"], Color.FromArgb(255, 100, 152, 142));
                        Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_prismarine"], Color.FromArgb(255, 60, 88, 75));

                        Diccionario_Bloques_Tesoros_1_12_2_a_1_13.Add(52, Diccionario_Bloques_Nombres_Índices["minecraft:mob_spawner"]);
                        Diccionario_Bloques_Tesoros_1_12_2_a_1_13.Add(54, Diccionario_Bloques_Nombres_Índices["minecraft:chest"]);
                        Diccionario_Bloques_Tesoros_1_12_2_a_1_13.Add(146, Diccionario_Bloques_Nombres_Índices["minecraft:trapped_chest"]);
                        Diccionario_Bloques_Tesoros_1_12_2_a_1_13.Add(130, Diccionario_Bloques_Nombres_Índices["minecraft:ender_chest"]);
                        Diccionario_Bloques_Tesoros_1_12_2_a_1_13.Add(19, Diccionario_Bloques_Nombres_Índices["minecraft:sponge"]);
                        Diccionario_Bloques_Tesoros_1_12_2_a_1_13.Add(46, Diccionario_Bloques_Nombres_Índices["minecraft:tnt"]);
                        Diccionario_Bloques_Tesoros_1_12_2_a_1_13.Add(168, Diccionario_Bloques_Nombres_Índices["minecraft:prismarine"]);

                        // Start the hidden structures dictionary:
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:acacia_door"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:acacia_fence"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:acacia_planks"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:acacia_stairs"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:beetroots"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:birch_fence"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:birch_planks"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:birch_sapling"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:birch_slab"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:birch_stairs"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:black_carpet"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:black_wall_banner"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:black_wool"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:blue_carpet"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:blue_wool"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:bone_block"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:bookshelf"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:brain_coral"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:brain_coral_block"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:brain_coral_fan"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:brewing_stand"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:bricks"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:brown_carpet"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:brown_wool"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:bubble_column"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:bubble_coral"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:bubble_coral_block"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:bubble_coral_fan"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:carrots"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:carved_pumpkin"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:cauldron"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:chest"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:chiseled_sandstone"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:chiseled_stone_bricks"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:coal_block"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:cobblestone"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:cobblestone_slab"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:cobblestone_stairs"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:cobblestone_wall"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:cobweb"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:cracked_stone_bricks"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:crafting_table"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:cut_sandstone"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:cyan_carpet"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:cyan_wool"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:damaged_anvil"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:dark_oak_door"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:dark_oak_fence"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:dark_oak_fence_gate"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:dark_oak_planks"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:dark_oak_sapling"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:dark_oak_slab"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:dark_oak_stairs"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:dark_oak_trapdoor"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:dark_prismarine"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:dead_brain_coral_block"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:dead_bubble_coral_block"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:dead_fire_coral_block"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:dead_horn_coral_block"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:dead_tube_coral_block"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:diamond_block"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:dispenser"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:dragon_head"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:dragon_wall_head"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:emerald_block"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:end_gateway"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:end_portal"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:end_portal_frame"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:end_rod"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:end_stone_bricks"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:ender_chest"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:farmland"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:fire_coral"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:fire_coral_block"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:fire_coral_fan"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:flower_pot"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:furnace"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:glass"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:glass_pane"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:gold_block"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:grass_path"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:gray_carpet"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:gray_wall_banner"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:gray_wool"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:green_carpet"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:green_wool"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:horn_coral"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:horn_coral_block"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:horn_coral_fan"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:infested_chiseled_stone_bricks"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:infested_cobblestone"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:infested_mossy_stone_bricks"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:infested_stone_bricks"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:iron_bars"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:iron_block"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:iron_door"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:item_frame"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:jungle_door"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:jungle_fence"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:jungle_planks"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:jungle_slab"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:jungle_stairs"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:jungle_trapdoor"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:ladder"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:lapis_block"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:lever"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:light_blue_carpet"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:light_blue_wool"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:light_gray_carpet"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:light_gray_wall_banner"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:light_gray_wool"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:lime_carpet"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:lime_wool"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:magenta_carpet"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:magenta_stained_glass"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:magenta_wall_banner"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:melon_block"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:melon_stem"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:mob_spawner"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:mossy_stone_bricks"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:nether_brick_fence"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:nether_brick_stairs"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:nether_bricks"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:nether_wart"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:oak_door"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:oak_fence"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:oak_planks"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:oak_pressure_plate"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:oak_slab"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:oak_stairs"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:oak_trapdoor"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:orange_wool"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:pink_carpet"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:polished_andesite"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:polished_diorite"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:polished_granite"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:portal"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:potatoes"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:potted_allium"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:potted_azure_bluet"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:potted_birch_sapling"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:potted_blue_orchid"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:potted_cactus"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:potted_dandelion"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:potted_oxeye_daisy"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:potted_poppy"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:potted_red_mushroom"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:potted_red_tulip"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:potted_white_tulip"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:prismarine"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:prismarine_bricks"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:pumpkin"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:pumpkin_stem"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:purple_carpet"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:purple_glazed_terracotta"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:purpur_block"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:purpur_pillar"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:purpur_slab"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:purpur_stairs"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:quartz_block"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:rail"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:red_bed"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:red_carpet"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:red_wool"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:redstone_block"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:redstone_torch"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:redstone_wire"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:repeater"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:sandstone_slab"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:sandstone_stairs"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:sea_lantern"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:sea_pickle"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:sign"], null);
                        //Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:snow_block"], null); // From Igloos, but fails on Ice Spike biomes.
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:spawner"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:spruce_door"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:spruce_fence"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:spruce_planks"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:spruce_slab"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:spruce_stairs"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:spruce_trapdoor"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:sticky_piston"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:stone_brick_stairs"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:stone_pressure_plate"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:stone_slab"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:tnt"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:torch"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:trapped_chest"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:tripwire"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:tripwire_hook"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:tube_coral"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:tube_coral_block"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:tube_coral_fan"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:wall_sign"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:wall_torch"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:wet_sponge"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:wheat"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:white_carpet"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:white_wool"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:yellow_carpet"], null);
                        Diccionario_Índice_Estructuras_Ocultas.Add(Diccionario_Nombre_Índice["minecraft:yellow_wool"], null);

                        // Start the plant life dictionary:
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:bubble_column"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:cobweb"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:farmland"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:flower_pot"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:water"], null);

                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:acacia_bark"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:acacia_leaves"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:acacia_log"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:acacia_sapling"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:air"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:allium"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:attached_melon_stem"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:attached_pumpkin_stem"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:azure_bluet"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:beetroots"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:birch_bark"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:birch_leaves"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:birch_log"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:birch_sapling"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:blue_coral"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:blue_coral_fan"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:blue_coral_plant"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:blue_dead_coral"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:blue_orchid"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:bone_block"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:brain_coral"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:brain_coral_block"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:brain_coral_fan"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:brown_mushroom"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:brown_mushroom_block"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:bubble_coral"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:bubble_coral_block"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:bubble_coral_fan"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:cactus"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:cake"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:carrots"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:carved_pumpkin"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:cave_air"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:chorus_flower"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:chorus_plant"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:cocoa"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:creeper_head"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:creeper_wall_head"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:dandelion"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:dark_oak_bark"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:dark_oak_leaves"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:dark_oak_log"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:dark_oak_sapling"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:dead_brain_coral_block"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:dead_bubble_coral_block"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:dead_bush"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:dead_fire_coral_block"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:dead_horn_coral_block"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:dead_tube_coral_block"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:dragon_egg"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:dragon_head"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:dragon_wall_head"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:dried_kelp_block"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:fern"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:fire"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:fire_coral"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:fire_coral_block"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:fire_coral_fan"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:four_turtle_eggs"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:frosted_ice"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:grass"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:grass_block"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:grass_path"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:hay_block"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:horn_coral"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:horn_coral_block"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:horn_coral_fan"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:ice"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:infested_chiseled_stone_bricks"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:infested_cobblestone"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:infested_cracked_stone_bricks"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:infested_mossy_stone_bricks"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:infested_stone"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:infested_stone_bricks"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:jack_o_lantern"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:jungle_bark"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:jungle_leaves"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:jungle_log"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:jungle_sapling"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:kelp"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:kelp_top"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:large_fern"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:lilac"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:lily_pad"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:melon_block"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:melon_stem"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:mossy_cobblestone"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:mossy_cobblestone_wall"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:mossy_stone_bricks"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:mushroom_stem"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:mycelium"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:nether_wart"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:nether_wart_block"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:oak_bark"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:oak_leaves"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:oak_log"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:oak_sapling"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:orange_tulip"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:oxeye_daisy"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:peony"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:pink_coral"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:pink_coral_fan"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:pink_coral_plant"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:pink_dead_coral"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:pink_tulip"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:player_head"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:player_wall_head"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:podzol"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:poppy"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:potatoes"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:potted_acacia_sapling"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:potted_allium"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:potted_azure_bluet"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:potted_birch_sapling"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:potted_blue_orchid"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:potted_brown_mushroom"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:potted_cactus"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:potted_dandelion"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:potted_dark_oak_sapling"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:potted_dead_bush"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:potted_fern"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:potted_jungle_sapling"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:potted_oak_sapling"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:potted_orange_tulip"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:potted_oxeye_daisy"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:potted_pink_tulip"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:potted_poppy"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:potted_red_mushroom"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:potted_red_tulip"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:potted_spruce_sapling"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:potted_white_tulip"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:pumpkin"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:pumpkin_stem"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:purple_coral"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:purple_coral_fan"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:purple_coral_plant"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:purple_dead_coral"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:red_coral"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:red_coral_fan"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:red_coral_plant"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:red_dead_coral"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:red_mushroom"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:red_mushroom_block"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:red_tulip"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:rose_bush"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:sea_grass"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:sea_pickle"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:seagrass"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:skeleton_skull"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:skeleton_wall_skull"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:slime_block"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:snow"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:snow_block"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:soul_sand"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:sponge"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:spruce_bark"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:spruce_leaves"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:spruce_log"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:spruce_sapling"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:sugar_cane"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:sunflower"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:tall_grass"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:tall_sea_grass"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:tall_seagrass"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:three_turtle_eggs"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:tripwire"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:tube_coral"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:tube_coral_block"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:tube_coral_fan"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:turtle_egg"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:two_turtle_eggs"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:vine"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:void_air"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:wet_sponge"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:wheat"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:white_tulip"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:wither_skeleton_skull"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:wither_skeleton_wall_skull"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:yellow_coral"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:yellow_coral_fan"], null);
                        Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:yellow_coral_plant"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:yellow_dead_coral"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:zombie_head"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:zombie_wall_head"], null);
                        //Diccionario_Índice_Vida_Vegetal.Add(Diccionario_Nombre_Índice["minecraft:"], null);

                        Diccionario_Índice_Agua.Add(Diccionario_Nombre_Índice["minecraft:water"], null);
                        Diccionario_Índice_Agua.Add(Diccionario_Nombre_Índice["minecraft:flowing_water"], null);
                        Diccionario_Índice_Lava.Add(Diccionario_Nombre_Índice["minecraft:lava"], null);
                        Diccionario_Índice_Lava.Add(Diccionario_Nombre_Índice["minecraft:flowing_lava"], null);

                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:acacia_button"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:acacia_door"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:acacia_fence_gate"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:acacia_pressure_plate"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:acacia_trapdoor"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:activator_rail"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:anvil"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:birch_button"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:birch_door"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:birch_fence_gate"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:birch_pressure_plate"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:birch_trapdoor"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:black_shulker_box"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:blue_shulker_box"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:brewing_stand"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:brown_shulker_box"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:cake"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:cauldron"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:chain_command_block"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:chest"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:chipped_anvil"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:command_block"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:comparator"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:cyan_shulker_box"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:damaged_anvil"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:dark_oak_button"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:dark_oak_door"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:dark_oak_fence_gate"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:dark_oak_pressure_plate"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:dark_oak_trapdoor"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:daylight_detector"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:detector_rail"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:dispenser"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:dropper"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:end_portal_frame"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:furnace"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:gray_shulker_box"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:green_shulker_box"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:heavy_weighted_pressure_plate"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:hopper"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:iron_door"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:iron_trapdoor"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:jukebox"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:jungle_button"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:jungle_door"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:jungle_fence_gate"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:jungle_pressure_plate"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:jungle_trapdoor"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:lever"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:light_blue_shulker_box"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:light_gray_shulker_box"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:light_weighted_pressure_plate"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:lime_shulker_box"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:magenta_shulker_box"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:moving_piston"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:note_block"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:oak_button"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:oak_door"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:oak_fence_gate"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:oak_pressure_plate"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:oak_trapdoor"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:observer"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:orange_shulker_box"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:pink_shulker_box"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:piston"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:piston_head"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:powered_rail"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:purple_shulker_box"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:rail"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:red_shulker_box"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:redstone_block"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:redstone_lamp"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:redstone_torch"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:redstone_wall_torch"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:redstone_wire"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:repeater"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:repeating_command_block"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:shulker_box"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:slime_block"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:spruce_button"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:spruce_door"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:spruce_fence_gate"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:spruce_pressure_plate"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:spruce_trapdoor"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:sticky_piston"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:structure_block"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:structure_void"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:tnt"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:trapped_chest"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:tripwire"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:tripwire_hook"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:white_shulker_box"], null);
                        Diccionario_Índice_Piedra_Rojiza.Add(Diccionario_Nombre_Índice["minecraft:yellow_shulker_box"], null);

                        Diccionario_Índice_Peces_Plateados.Add(Diccionario_Nombre_Índice["minecraft:infested_chiseled_stone_bricks"], null);
                        Diccionario_Índice_Peces_Plateados.Add(Diccionario_Nombre_Índice["minecraft:infested_cobblestone"], null);
                        Diccionario_Índice_Peces_Plateados.Add(Diccionario_Nombre_Índice["minecraft:infested_cracked_stone_bricks"], null);
                        Diccionario_Índice_Peces_Plateados.Add(Diccionario_Nombre_Índice["minecraft:infested_mossy_stone_bricks"], null);
                        Diccionario_Índice_Peces_Plateados.Add(Diccionario_Nombre_Índice["minecraft:infested_stone"], null);
                        Diccionario_Índice_Peces_Plateados.Add(Diccionario_Nombre_Índice["minecraft:infested_stone_bricks"], null);

                        // ?:
                        /*Diccionario_Índice_Tesoros.Add(Diccionario_Nombre_Índice[""], null);
                        Diccionario_Índice_Tesoros.Add(Diccionario_Nombre_Índice[""], null);
                        Diccionario_Índice_Tesoros.Add(Diccionario_Nombre_Índice[""], null);
                        Diccionario_Índice_Tesoros.Add(Diccionario_Nombre_Índice[""], null);
                        Diccionario_Índice_Tesoros.Add(Diccionario_Nombre_Índice[""], null);
                        Diccionario_Índice_Tesoros.Add(Diccionario_Nombre_Índice[""], null);
                        Diccionario_Índice_Tesoros.Add(Diccionario_Nombre_Índice[""], null);
                        Diccionario_Índice_Tesoros.Add(Diccionario_Nombre_Índice[""], null);
                        Diccionario_Índice_Tesoros.Add(Diccionario_Nombre_Índice[""], null);
                        Diccionario_Índice_Tesoros.Add(Diccionario_Nombre_Índice["minecraft:"], null);
                        Diccionario_Índice_Tesoros.Add(Diccionario_Nombre_Índice["minecraft:"], null);
                        Diccionario_Índice_Tesoros.Add(Diccionario_Nombre_Índice["minecraft:"], null);
                        Diccionario_Índice_Tesoros.Add(Diccionario_Nombre_Índice["minecraft:"], null);
                        Diccionario_Índice_Tesoros.Add(Diccionario_Nombre_Índice["minecraft:"], null);
                        Diccionario_Índice_Tesoros.Add(Diccionario_Nombre_Índice["minecraft:"], null);
                        Diccionario_Índice_Tesoros.Add(Diccionario_Nombre_Índice["minecraft:"], null);
                        Diccionario_Índice_Tesoros.Add(Diccionario_Nombre_Índice["minecraft:"], null);
                        Diccionario_Índice_Tesoros.Add(Diccionario_Nombre_Índice["minecraft:"], null);*/

                        // Find the new blocks for Minecraft 1.13+:
                        foreach (KeyValuePair<short, string> Entrada in Diccionario_Bloques_Índices_Nombres)
                        {
                            bool Existente_1_12 = false;
                            foreach (KeyValuePair<short, short> Entrada_1_12 in Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13)
                            {
                                if (Entrada_1_12.Value == Entrada.Key)
                                {
                                    Existente_1_12 = true;
                                    break;
                                }
                            }
                            if (!Existente_1_12) Diccionario_Bloques_Minecraft_1_13.Add(Entrada.Key, Entrada.Value);
                        }

                        foreach (KeyValuePair<short, string> Entrada in Diccionario_Bloques_Índices_Nombres)
                        {
                            Bitmap Imagen = Program.Obtener_Imagen_Recursos(Entrada.Value);
                            Diccionario_Texturas.Add(Entrada.Key, Imagen);
                        }

                        Chunks.Crear_Matriz_Aire();
                    }

                    // Old code to automatically convert the blocks from the dictionaries to the new block structure:
                    /*string Texto = null;
                    foreach (KeyValuePair<short, string> Entrada in Diccionario_Bloques_Índices_Nombres)
                    {
                        byte ID = 0;
                        byte Data = 0;
                        List<byte> Lista_Data = new List<byte>();
                        foreach (KeyValuePair<short, short> Subentrada in Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13)
                        {
                            if (Subentrada.Value == Entrada.Key)
                            {
                                ID = Obtener_Valores_ID_Data(Subentrada.Key, out Data);
                                if (!Lista_Data.Contains(Data)) Lista_Data.Add(Data);
                            }
                        }
                        string Texto_Lista_Data = null;
                        if (Lista_Data != null && Lista_Data.Count > 0)
                        {
                            Texto_Lista_Data = "new List<byte>(new byte[] { ";
                            foreach (byte Valor in Lista_Data)
                            {
                                Texto_Lista_Data += Valor.ToString() + ", ";
                            }
                            Texto_Lista_Data = Texto_Lista_Data.TrimEnd(", ".ToCharArray()) + " })";
                        }
                        else Texto_Lista_Data = "null";
                        Texto += "new Bloques(\"" + Entrada.Value + "\", " + ID + ", " + Texto_Lista_Data + ", Color.FromArgb(" + Diccionario_Bloques_Índices_Colores[Entrada.Key].A.ToString() + ", " + Diccionario_Bloques_Índices_Colores[Entrada.Key].R.ToString() + ", " + Diccionario_Bloques_Índices_Colores[Entrada.Key].G.ToString() + ", " + Diccionario_Bloques_Índices_Colores[Entrada.Key].B.ToString() + "), " + (!Diccionario_Bloques_Altura_Diferente.ContainsKey(Entrada.Key) ? "false" : "true") + ", Métodos_Obtención.Supervivencia),\r\n";
                        Lista_Data = null;
                    }
                    Clipboard.SetText(Texto.TrimEnd(",\r\n".ToCharArray()));*/
                }
                //catch (Exception Excepción) { Depurador.Escribir_Excepción(Excepción != null ? Excepción.ToString() : null); }
            }
        }

        /// <summary>
        /// Structure that holds up all the information about a Minecraft level.dat file.
        /// </summary>
        [StructLayout(LayoutKind.Sequential)]
        internal struct Información_Niveles
        {
            internal long ClearWeatherTime;
            /// <summary>
            /// The ticks ellapsed in a world, including the skipped time of sleeping, so it's the real plus virtual played time. Adjust this between 24000 to obtain the current time in the world.
            /// </summary>
            internal long DayTime;
            internal long Difficulty;
            internal long GameType;
            internal long Hardcore;
            /// <summary>
            /// Milliseconds ellapsed since the start of the year 1970.
            /// </summary>
            internal long LastPlayed;
            internal string LevelName;
            internal long Raining;
            internal long RainTime;
            internal long RandomSeed;
            internal long SpawnX;
            internal long SpawnY;
            internal long SpawnZ;
            internal int Spawn_Chunk_X; // For 2D structure markers.
            internal int Spawn_Chunk_Z;
            internal int Spawn_Región_X; // For 2D structure markers.
            internal int Spawn_Región_Z;
            internal long Thundering;
            internal long ThunderTime;
            /// <summary>
            /// The ticks ellapsed in a world, excluding the skipped time of sleeping, so it's just the real played time. Divide this by 24000 to obtain the current day in the world.
            /// </summary>
            internal long Time;
            internal long VersionSnapshot;
            internal string VersionName;

            internal Información_Niveles(int ClearWeatherTime, long DayTime, byte Difficulty, int GameType, byte Hardcore, long LastPlayed, string LevelName, byte Raining, int RainTime, long RandomSeed, int SpawnX, int SpawnY, int SpawnZ, byte Thundering, int ThunderTime, long Time, byte VersionSnapshot, string VersionName)
            {
                this.ClearWeatherTime = ClearWeatherTime;
                this.DayTime = DayTime;
                this.Difficulty = Difficulty;
                this.GameType = GameType;
                this.Hardcore = Hardcore;
                this.LastPlayed = LastPlayed;
                this.LevelName = LevelName;
                this.Raining = Raining;
                this.RainTime = RainTime;
                this.RandomSeed = RandomSeed;
                this.SpawnX = SpawnX;
                this.SpawnY = SpawnY;
                this.SpawnZ = SpawnZ;
                this.Spawn_Chunk_X = (SpawnX / 16) % 32;
                this.Spawn_Chunk_Z = (SpawnZ / 16) % 32;
                this.Spawn_Región_X = SpawnX / 512;
                this.Spawn_Región_Z = SpawnZ / 512;
                this.Thundering = Thundering;
                this.ThunderTime = ThunderTime;
                this.Time = Time;
                this.VersionSnapshot = VersionSnapshot;
                this.VersionName = VersionName;
            }

            internal static Información_Niveles Default()
            {
                Información_Niveles Información_Nivel = new Información_Niveles();
                Información_Nivel.ClearWeatherTime = long.MinValue;
                Información_Nivel.DayTime = long.MinValue;
                Información_Nivel.Difficulty = long.MinValue;
                Información_Nivel.GameType = long.MinValue;
                Información_Nivel.Hardcore = long.MinValue;
                Información_Nivel.LastPlayed = 0L;
                Información_Nivel.LevelName = null;
                Información_Nivel.Raining = long.MinValue;
                Información_Nivel.RainTime = long.MinValue;
                Información_Nivel.RandomSeed = 0L;
                Información_Nivel.SpawnX = 0L;
                Información_Nivel.SpawnY = 0L;
                Información_Nivel.SpawnZ = 0L;
                Información_Nivel.Spawn_Chunk_X = 0;
                Información_Nivel.Spawn_Chunk_Z = 0;
                Información_Nivel.Spawn_Región_X = 0;
                Información_Nivel.Spawn_Región_Z = 0;
                Información_Nivel.Thundering = long.MinValue;
                Información_Nivel.ThunderTime = long.MinValue;
                Información_Nivel.Time = long.MinValue;
                Información_Nivel.VersionSnapshot = long.MinValue;
                Información_Nivel.VersionName = null;
                return Información_Nivel;
            }

            /// <summary>
            /// Loads the most relevant level information inside a new structure.
            /// </summary>
            /// <param name="Ruta">Any valid path to a Minecraft world or it's level file.</param>
            /// <returns>Returns a new structure filled with information about the loaded level.</returns>
            internal static Información_Niveles Obtener_Información_Nivel(string Ruta)
            {
                try
                {
                    Información_Niveles Información_Nivel = Default();
                    if (!string.IsNullOrEmpty(Ruta) && (Directory.Exists(Ruta) || File.Exists(Ruta)))
                    {
                        string Ruta_Nivel = (!File.Exists(Ruta) ? Ruta : Path.GetDirectoryName(Ruta)) + "\\level.dat";
                        if (File.Exists(Ruta_Nivel))
                        {
                            FileStream Lector = new FileStream(Ruta_Nivel, FileMode.OpenOrCreate, FileAccess.Read, FileShare.ReadWrite);
                            if (Lector != null && Lector.Length > 0L)
                            {
                                NbtTree Árbol = null;
                                try
                                {
                                    Lector.Seek(0L, SeekOrigin.Begin);
                                    Árbol = new NbtTree();
                                    Árbol.ReadFrom(Lector);
                                }
                                catch { Árbol = null; }
                                if (Árbol == null || Árbol.Root == null)
                                {
                                    try
                                    {
                                        Lector.Seek(0L, SeekOrigin.Begin);
                                        Árbol = new NbtTree();
                                        Árbol.ReadFrom(new GZipStream(Lector, CompressionMode.Decompress));
                                    }
                                    catch { Árbol = null; }
                                }
                                if (Árbol == null || Árbol.Root == null)
                                {
                                    try
                                    {
                                        Lector.Seek(0L, SeekOrigin.Begin);
                                        Árbol = new NbtTree();
                                        Árbol.ReadFrom(new ZlibStream(Lector, CompressionMode.Decompress));
                                    }
                                    catch { Árbol = null; }
                                }
                                if (Árbol == null || Árbol.Root == null)
                                {
                                    try
                                    {
                                        Lector.Seek(0L, SeekOrigin.Begin);
                                        Árbol = new NbtTree();
                                        Árbol.ReadFrom(new DeflateStream(Lector, CompressionMode.Decompress));
                                    }
                                    catch { Árbol = null; }
                                }
                                if (Árbol != null && Árbol.Root != null && Árbol.Root.Keys != null && Árbol.Root.Keys.Count > 0)
                                {
                                    foreach (string Clave in Árbol.Root.Keys)
                                    {
                                        if (string.Compare(Clave, "Data", true) == 0)
                                        {
                                            TagNodeCompound Nodo_Compuesto = Árbol.Root[Clave] as TagNodeCompound;
                                            if (Nodo_Compuesto != null && Nodo_Compuesto.Keys != null && Nodo_Compuesto.Keys.Count > 0)
                                            {
                                                foreach (string Subclave in Nodo_Compuesto.Keys)
                                                {
                                                    if (string.Compare(Subclave, "clearWeatherTime", true) == 0)
                                                    {
                                                        try { Información_Nivel.ClearWeatherTime = (long)Nodo_Compuesto[Subclave].ToTagInt(); }
                                                        catch { Información_Nivel.ClearWeatherTime = long.MinValue; }
                                                    }
                                                    else if (string.Compare(Subclave, "DayTime", true) == 0)
                                                    {
                                                        try { Información_Nivel.DayTime = (long)Nodo_Compuesto[Subclave].ToTagLong(); }
                                                        catch { Información_Nivel.DayTime = long.MinValue; }
                                                    }
                                                    else if (string.Compare(Subclave, "Difficulty", true) == 0)
                                                    {
                                                        try { Información_Nivel.Difficulty = (long)Nodo_Compuesto[Subclave].ToTagByte(); }
                                                        catch { Información_Nivel.Difficulty = long.MinValue; }
                                                    }
                                                    else if (string.Compare(Subclave, "GameType", true) == 0)
                                                    {
                                                        try { Información_Nivel.GameType = (long)Nodo_Compuesto[Subclave].ToTagInt(); }
                                                        catch { Información_Nivel.GameType = long.MinValue; }
                                                    }
                                                    else if (string.Compare(Subclave, "Hardcore", true) == 0)
                                                    {
                                                        try { Información_Nivel.Hardcore = (long)Nodo_Compuesto[Subclave].ToTagByte(); }
                                                        catch { Información_Nivel.Hardcore = long.MinValue; }
                                                    }
                                                    else if (string.Compare(Subclave, "LastPlayed", true) == 0)
                                                    {
                                                        try { Información_Nivel.LastPlayed = (long)Nodo_Compuesto[Subclave].ToTagLong(); }
                                                        catch { Información_Nivel.LastPlayed = long.MinValue; }
                                                    }
                                                    else if (string.Compare(Subclave, "LevelName", true) == 0)
                                                    {
                                                        try { Información_Nivel.LevelName = (string)Nodo_Compuesto[Subclave].ToTagString(); }
                                                        catch { Información_Nivel.LevelName = null; }
                                                    }
                                                    else if (string.Compare(Subclave, "raining", true) == 0)
                                                    {
                                                        try { Información_Nivel.Raining = (long)Nodo_Compuesto[Subclave].ToTagByte(); }
                                                        catch { Información_Nivel.Raining = long.MinValue; }
                                                    }
                                                    else if (string.Compare(Subclave, "rainTime", true) == 0)
                                                    {
                                                        try { Información_Nivel.RainTime = (long)Nodo_Compuesto[Subclave].ToTagInt(); }
                                                        catch { Información_Nivel.RainTime = long.MinValue; }
                                                    }
                                                    else if (string.Compare(Subclave, "RandomSeed", true) == 0)
                                                    {
                                                        try { Información_Nivel.RandomSeed = (long)Nodo_Compuesto[Subclave].ToTagLong(); }
                                                        catch { Información_Nivel.RandomSeed = long.MinValue; }
                                                    }
                                                    else if (string.Compare(Subclave, "SpawnX", true) == 0)
                                                    {
                                                        try
                                                        {
                                                            Información_Nivel.SpawnX = (long)Nodo_Compuesto[Subclave].ToTagInt();
                                                            Información_Nivel.Spawn_Chunk_X = ((int)Math.Abs(Información_Nivel.SpawnX) / 16) % 32;
                                                            Información_Nivel.Spawn_Región_X = (int)Información_Nivel.SpawnX / 512;
                                                            if (Información_Nivel.SpawnX < 0)
                                                            {
                                                                Información_Nivel.Spawn_Chunk_X = 31 - Información_Nivel.Spawn_Chunk_X;
                                                                Información_Nivel.Spawn_Región_X--;
                                                            }
                                                        }
                                                        catch { Información_Nivel.SpawnX = long.MinValue; }
                                                    }
                                                    else if (string.Compare(Subclave, "SpawnY", true) == 0)
                                                    {
                                                        try { Información_Nivel.SpawnY = (long)Nodo_Compuesto[Subclave].ToTagInt(); }
                                                        catch { Información_Nivel.SpawnY = long.MinValue; }
                                                    }
                                                    else if (string.Compare(Subclave, "SpawnZ", true) == 0)
                                                    {
                                                        try
                                                        {
                                                            Información_Nivel.SpawnZ = (long)Nodo_Compuesto[Subclave].ToTagInt();
                                                            Información_Nivel.Spawn_Chunk_Z = ((int)Math.Abs(Información_Nivel.SpawnZ) / 16) % 32;
                                                            Información_Nivel.Spawn_Región_Z = (int)Información_Nivel.SpawnZ / 512;
                                                            if (Información_Nivel.SpawnZ < 0)
                                                            {
                                                                Información_Nivel.Spawn_Chunk_Z = 31 - Información_Nivel.Spawn_Chunk_Z;
                                                                Información_Nivel.Spawn_Región_Z--;
                                                            }
                                                        }
                                                        catch { Información_Nivel.SpawnZ = long.MinValue; }
                                                    }
                                                    else if (string.Compare(Subclave, "thundering", true) == 0)
                                                    {
                                                        try { Información_Nivel.Thundering = (long)Nodo_Compuesto[Subclave].ToTagByte(); }
                                                        catch { Información_Nivel.Thundering = long.MinValue; }
                                                    }
                                                    else if (string.Compare(Subclave, "thunderTime", true) == 0)
                                                    {
                                                        try { Información_Nivel.ThunderTime = (long)Nodo_Compuesto[Subclave].ToTagInt(); }
                                                        catch { Información_Nivel.ThunderTime = long.MinValue; }
                                                    }
                                                    else if (string.Compare(Subclave, "Time", true) == 0)
                                                    {
                                                        try { Información_Nivel.Time = (long)Nodo_Compuesto[Subclave].ToTagLong(); }
                                                        catch { Información_Nivel.Time = long.MinValue; }
                                                    }
                                                    else if (string.Compare(Subclave, "Version", true) == 0)
                                                    {
                                                        TagNodeCompound Subnodo_Compuesto = Nodo_Compuesto[Subclave] as TagNodeCompound;
                                                        if (Subnodo_Compuesto != null && Subnodo_Compuesto.Keys != null && Subnodo_Compuesto.Keys.Count > 0)
                                                        {
                                                            foreach (string Clave_Versión in Subnodo_Compuesto.Keys)
                                                            {
                                                                if (string.Compare(Clave_Versión, "Name", true) == 0)
                                                                {
                                                                    try { Información_Nivel.VersionName = (string)Subnodo_Compuesto[Clave_Versión].ToTagString(); }
                                                                    catch { Información_Nivel.VersionName = null; }
                                                                }
                                                                else if (string.Compare(Clave_Versión, "Snapshot", true) == 0)
                                                                {
                                                                    try { Información_Nivel.VersionSnapshot = (long)Subnodo_Compuesto[Clave_Versión].ToTagByte(); }
                                                                    catch { Información_Nivel.VersionSnapshot = long.MinValue; }
                                                                }
                                                            }
                                                            Subnodo_Compuesto = null;
                                                        }
                                                    }
                                                }
                                                Nodo_Compuesto = null;
                                                Árbol = null;
                                                Lector.Close();
                                                Lector.Dispose();
                                                Lector = null;
                                                return Información_Nivel;
                                            }
                                        }
                                    }
                                }
                                else MessageBox.Show("The level file couldn't be opened, make sure it's a valid NBT file.\r\nAnd if it is, maybe this application is outdated, so sorry about that.", Program.Texto_Título_Versión, MessageBoxButtons.OK, MessageBoxIcon.Question);
                                Lector.Close();
                                Lector.Dispose();
                                Lector = null;
                            }
                        }
                    }
                    return Información_Nivel;
                }
                catch (Exception Excepción) { Depurador.Escribir_Excepción(Excepción != null ? Excepción.ToString() : null); }
                return Default();
            }
        }

        /// <summary>
        /// Structure that holds up the current position of a Minecraft player.
        /// </summary>
        [StructLayout(LayoutKind.Sequential)]
        internal struct Posiciones_Jugadores
        {
            /// <summary>
            /// The X position of a player.
            /// </summary>
            internal double X;
            /// <summary>
            /// The Y position of a player.
            /// </summary>
            internal double Y;
            /// <summary>
            /// The Z position of a player.
            /// </summary>
            internal double Z;
            /// <summary>
            /// The chunk X (inside a region from 0 to 31) position of a player.
            /// </summary>
            internal int Chunk_X;
            /// <summary>
            /// The chunk Z (inside a region from 0 to 31) position of a player.
            /// </summary>
            internal int Chunk_Z;
            /// <summary>
            /// The region X position of a player.
            /// </summary>
            internal int Región_X;
            /// <summary>
            /// The region Z position of a player.
            /// </summary>
            internal int Región_Z;
            /// <summary>
            /// The dimension a player is in. 0 = Overworld, -1 = Nether, +1 = The End.
            /// </summary>
            internal int Dimesión;

            internal Posiciones_Jugadores(double X, double Y, double Z)
            {
                this.X = X;
                this.Y = Y;
                this.Z = Z;
                this.Chunk_X = ((int)X / 16) % 32; // For 2D structure markers.
                this.Chunk_Z = ((int)Z / 16) % 32;
                this.Región_X = (int)X / 512; // For 2D structure markers.
                this.Región_Z = (int)Z / 512;
                this.Dimesión = 0; // Default is Overworld.
            }

            internal Posiciones_Jugadores(double X, double Y, double Z, int Dimesión)
            {
                this.X = X;
                this.Y = Y;
                this.Z = Z;
                this.Chunk_X = ((int)X / 16) % 32; // For 2D structure markers.
                this.Chunk_Z = ((int)Z / 16) % 32;
                this.Región_X = (int)X / 512; // For 2D structure markers.
                this.Región_Z = (int)Z / 512;
                this.Dimesión = Dimesión; // Set this to don't send a player to a wrong dimension.
            }

            internal static Posiciones_Jugadores Default()
            {
                Posiciones_Jugadores Posición_Jugador = new Posiciones_Jugadores();
                Posición_Jugador.X = 0d;
                Posición_Jugador.Y = 0d;
                Posición_Jugador.Z = 0d;
                Posición_Jugador.Chunk_X = 0;
                Posición_Jugador.Chunk_Z = 0;
                Posición_Jugador.Región_X = 0;
                Posición_Jugador.Región_Z = 0;
                Posición_Jugador.Dimesión = 0;
                return Posición_Jugador;
            }

            /// <summary>
            /// Extracts the current positions of all the players registered within the current world.
            /// </summary>
            /// <param name="Ruta">A valid Minecraft world path, or to it's "players" subfolder.</param>
            /// <returns>Returns a dictionary with the current positions of all the players in a Minecraft world. Returns null on any error.</returns>
            internal static Dictionary<string, Posiciones_Jugadores> Obtener_Posiciones_Jugadores(string Ruta)
            {
                try
                {
                    Dictionary<string, Posiciones_Jugadores> Diccionario_Posiciones_Jugadores = new Dictionary<string, Posiciones_Jugadores>();
                    if (!string.IsNullOrEmpty(Ruta) && (Directory.Exists(Ruta) || File.Exists(Ruta)))
                    {
                        string Ruta_Nivel = (!File.Exists(Ruta) ? Ruta : Path.GetDirectoryName(Ruta));
                        string Ruta_Temporal = Ruta_Nivel.ToLowerInvariant();
                        string Ruta_Playerdata = null;
                        string Ruta_Players = null;
                        if (!Ruta_Temporal.EndsWith("playerdata"))
                        {
                            if (Directory.Exists(Ruta_Nivel + "\\playerdata")) Ruta_Playerdata = Ruta_Nivel + "\\playerdata";
                        }
                        else Ruta_Playerdata = Ruta_Nivel;
                        if (!Ruta_Temporal.EndsWith("players"))
                        {
                            if (Directory.Exists(Ruta_Nivel + "\\players")) Ruta_Players = Ruta_Nivel + "\\players";
                        }
                        else Ruta_Players = Ruta_Nivel;
                        Ruta_Nivel = null;
                        Ruta_Temporal = null;
                        if (!string.IsNullOrEmpty(Ruta_Playerdata) && Directory.Exists(Ruta_Playerdata))
                        {
                            string[] Matriz_Rutas = Directory.GetFiles(Ruta_Playerdata, "*.dat", SearchOption.TopDirectoryOnly);
                            if (Matriz_Rutas != null && Matriz_Rutas.Length > 0)
                            {
                                foreach (string Ruta_Jugador in Matriz_Rutas)
                                {
                                    try
                                    {
                                        FileStream Lector = new FileStream(Ruta_Jugador, FileMode.OpenOrCreate, FileAccess.Read, FileShare.ReadWrite);
                                        if (Lector != null && Lector.Length > 0L)
                                        {
                                            NbtTree Árbol = null;
                                            try
                                            {
                                                Lector.Seek(0L, SeekOrigin.Begin);
                                                Árbol = new NbtTree();
                                                Árbol.ReadFrom(Lector);
                                            }
                                            catch { Árbol = null; }
                                            if (Árbol == null || Árbol.Root == null)
                                            {
                                                try
                                                {
                                                    Lector.Seek(0L, SeekOrigin.Begin);
                                                    Árbol = new NbtTree();
                                                    Árbol.ReadFrom(new GZipStream(Lector, CompressionMode.Decompress));
                                                }
                                                catch { Árbol = null; }
                                            }
                                            if (Árbol == null || Árbol.Root == null)
                                            {
                                                try
                                                {
                                                    Lector.Seek(0L, SeekOrigin.Begin);
                                                    Árbol = new NbtTree();
                                                    Árbol.ReadFrom(new ZlibStream(Lector, CompressionMode.Decompress));
                                                }
                                                catch { Árbol = null; }
                                            }
                                            if (Árbol == null || Árbol.Root == null)
                                            {
                                                try
                                                {
                                                    Lector.Seek(0L, SeekOrigin.Begin);
                                                    Árbol = new NbtTree();
                                                    Árbol.ReadFrom(new DeflateStream(Lector, CompressionMode.Decompress));
                                                }
                                                catch { Árbol = null; }
                                            }
                                            if (Árbol != null && Árbol.Root != null && Árbol.Root.Keys != null && Árbol.Root.Keys.Count > 0)
                                            {
                                                Posiciones_Jugadores Posición_Jugador = new Posiciones_Jugadores();
                                                string Nombre = Path.GetFileNameWithoutExtension(Ruta_Jugador);
                                                while (Diccionario_Posiciones_Jugadores.ContainsKey(Nombre)) Nombre += "_";
                                                foreach (string Clave in Árbol.Root.Keys)
                                                {
                                                    if (string.Compare(Clave, "Pos", true) == 0)
                                                    {
                                                        TagNodeList Nodo_Lista = Árbol.Root[Clave].ToTagList();
                                                        if (Nodo_Lista != null && Nodo_Lista != null && Nodo_Lista.Count >= 3)
                                                        {
                                                            Posición_Jugador.X = (double)Nodo_Lista[0].ToTagDouble();
                                                            Posición_Jugador.Y = (double)Nodo_Lista[1].ToTagDouble();
                                                            Posición_Jugador.Z = (double)Nodo_Lista[2].ToTagDouble();
                                                            Posición_Jugador.Chunk_X = (Math.Abs((int)Posición_Jugador.X) / 16) % 32;
                                                            Posición_Jugador.Chunk_Z = (Math.Abs((int)Posición_Jugador.Z) / 16) % 32;
                                                            Posición_Jugador.Región_X = (int)Posición_Jugador.X / 512;
                                                            Posición_Jugador.Región_Z = (int)Posición_Jugador.Z / 512;
                                                            if (Posición_Jugador.X < 0d)
                                                            {
                                                                Posición_Jugador.Chunk_X = 31 - Posición_Jugador.Chunk_X;
                                                                Posición_Jugador.Región_X--;
                                                            }
                                                            if (Posición_Jugador.Z < 0d)
                                                            {
                                                                Posición_Jugador.Chunk_Z = 31 - Posición_Jugador.Chunk_Z;
                                                                Posición_Jugador.Región_Z--;
                                                            }
                                                            Nodo_Lista = null;
                                                        }
                                                    }
                                                    if (string.Compare(Clave, "Dimension", true) == 0)
                                                    {
                                                        Posición_Jugador.Dimesión = Árbol.Root[Clave].ToTagInt();
                                                    }
                                                }
                                                Diccionario_Posiciones_Jugadores.Add(Nombre, Posición_Jugador);
                                                Árbol = null;
                                            }
                                            Lector.Close();
                                            Lector.Dispose();
                                            Lector = null;
                                        }
                                    }
                                    catch (Exception Excepción) { Depurador.Escribir_Excepción(Excepción != null ? Excepción.ToString() : null); }
                                }
                                Matriz_Rutas = null;
                            }
                        }
                        if (!string.IsNullOrEmpty(Ruta_Players) && Directory.Exists(Ruta_Players))
                        {
                            string[] Matriz_Rutas = Directory.GetFiles(Ruta_Players, "*.dat", SearchOption.TopDirectoryOnly);
                            if (Matriz_Rutas != null && Matriz_Rutas.Length > 0)
                            {
                                foreach (string Ruta_Jugador in Matriz_Rutas)
                                {
                                    try
                                    {
                                        FileStream Lector = new FileStream(Ruta_Jugador, FileMode.OpenOrCreate, FileAccess.Read, FileShare.ReadWrite);
                                        if (Lector != null && Lector.Length > 0L)
                                        {
                                            NbtTree Árbol = null;
                                            try
                                            {
                                                Lector.Seek(0L, SeekOrigin.Begin);
                                                Árbol = new NbtTree();
                                                Árbol.ReadFrom(Lector);
                                            }
                                            catch { Árbol = null; }
                                            if (Árbol == null || Árbol.Root == null)
                                            {
                                                try
                                                {
                                                    Lector.Seek(0L, SeekOrigin.Begin);
                                                    Árbol = new NbtTree();
                                                    Árbol.ReadFrom(new GZipStream(Lector, CompressionMode.Decompress));
                                                }
                                                catch { Árbol = null; }
                                            }
                                            if (Árbol == null || Árbol.Root == null)
                                            {
                                                try
                                                {
                                                    Lector.Seek(0L, SeekOrigin.Begin);
                                                    Árbol = new NbtTree();
                                                    Árbol.ReadFrom(new ZlibStream(Lector, CompressionMode.Decompress));
                                                }
                                                catch { Árbol = null; }
                                            }
                                            if (Árbol == null || Árbol.Root == null)
                                            {
                                                try
                                                {
                                                    Lector.Seek(0L, SeekOrigin.Begin);
                                                    Árbol = new NbtTree();
                                                    Árbol.ReadFrom(new DeflateStream(Lector, CompressionMode.Decompress));
                                                }
                                                catch { Árbol = null; }
                                            }
                                            if (Árbol != null && Árbol.Root != null && Árbol.Root.Keys != null && Árbol.Root.Keys.Count > 0)
                                            {
                                                foreach (string Clave in Árbol.Root.Keys)
                                                {
                                                    if (string.Compare(Clave, "Pos", true) == 0)
                                                    {
                                                        TagNodeList Nodo_Lista = Árbol.Root[Clave] as TagNodeList;
                                                        if (Nodo_Lista != null && Nodo_Lista != null && Nodo_Lista.Count >= 3)
                                                        {
                                                            string Nombre = Path.GetFileNameWithoutExtension(Ruta_Jugador);
                                                            while (Diccionario_Posiciones_Jugadores.ContainsKey(Nombre)) Nombre += "_";
                                                            Diccionario_Posiciones_Jugadores.Add(Nombre, new Posiciones_Jugadores((double)Nodo_Lista[0].ToTagDouble(), (double)Nodo_Lista[1].ToTagDouble(), (double)Nodo_Lista[2].ToTagDouble()));
                                                            break;
                                                        }
                                                    }
                                                }
                                            }
                                            Lector.Close();
                                            Lector.Dispose();
                                            Lector = null;
                                        }
                                    }
                                    catch (Exception Excepción) { Depurador.Escribir_Excepción(Excepción != null ? Excepción.ToString() : null); }
                                }
                                Matriz_Rutas = null;
                            }
                        }
                        if (Diccionario_Posiciones_Jugadores.Count > 0) return Diccionario_Posiciones_Jugadores;
                    }
                }
                catch (Exception Excepción) { Depurador.Escribir_Excepción(Excepción != null ? Excepción.ToString() : null); }
                return null;
            }
        }

        internal static readonly string Ruta_Texturas = Application.StartupPath + "\\Textures";
        internal static bool Pendiente_Subproceso_Abortar = false;

        internal class Comparador_KeyValuePair_Point_String : IComparer<KeyValuePair<Point, string>>
        {
            public int Compare(KeyValuePair<Point, string> X, KeyValuePair<Point, string> Y)
            {
                if (X.Key.Y != Y.Key.Y) return X.Key.Y < Y.Key.Y ? -1 : 1;
                else if (X.Key.Y != Y.Key.Y) return X.Key.X < Y.Key.X ? -1 : 1;
                else return string.Compare(X.Value, Y.Value);
            }
        }

        internal class Comparador_Bloques : IComparer<Bloques>
        {
            public int Compare(Bloques X, Bloques Y)
            {
                return string.Compare(X.Nombre_1_13, Y.Nombre_1_13);
            }
        }

        /*internal static Rectangle Obtener_Rectángulo_Dimensión(string Ruta_Regiones)
        {

        }*/

        /// <summary>
        /// Searches for subfolders in the current world path that contain region files.
        /// TODO: currently the latest Minecraft has a folder called "poi" which also contains region files.
        /// </summary>
        /// <param name="Ruta_Mundo">Any valid world save folder path.</param>
        /// <returns>Returns a new dictionary with the dimension names and their folder paths. Returns an empty dictionary on any error.</returns>
        internal static Dictionary<string, string> Obtener_Diccionario_Rutas_Dimensiones(string Ruta_Mundo)
        {
            Dictionary<string, string> Diccionario_Rutas_Dimensiones = new Dictionary<string, string>();
            try
            {
                if (!string.IsNullOrEmpty(Ruta_Mundo) && Directory.Exists(Ruta_Mundo))
                {
                    List<string> Lista_Rutas = new List<string>();
                    Lista_Rutas.Add(Ruta_Mundo);
                    Lista_Rutas.Add(Ruta_Mundo + "\\region");
                    string[] Matriz_Rutas = Directory.GetDirectories(Ruta_Mundo, "*", SearchOption.TopDirectoryOnly);
                    if (Matriz_Rutas != null && Matriz_Rutas.Length > 0)
                    {
                        foreach (string Ruta in Matriz_Rutas)
                        {
                            if (!Lista_Rutas.Contains(Ruta)) Lista_Rutas.Add(Ruta);
                            Lista_Rutas.Add(Ruta + "\\region");
                        }
                        Matriz_Rutas = null;
                    }
                    if (Lista_Rutas.Count > 0)
                    {
                        string Dimensión_Overworld = Path.GetFileName(Ruta_Mundo);
                        foreach (string Ruta in Lista_Rutas)
                        {
                            if (Directory.Exists(Ruta))
                            {
                                Matriz_Rutas = Directory.GetFiles(Ruta, "*.mc*", SearchOption.TopDirectoryOnly);
                                if (Matriz_Rutas != null && Matriz_Rutas.Length > 0)
                                {
                                    string Dimensión = Path.GetFileName(Ruta);
                                    if (string.Compare(Dimensión, "region", true) == 0) // Try to avoid a dimension named "region"
                                    {
                                        Dimensión = Path.GetFileName(Path.GetDirectoryName(Ruta)); // Go one directory up
                                    }
                                    if (string.Compare(Dimensión, Dimensión_Overworld, true) == 0) Dimensión = "Overworld";
                                    if (string.Compare(Dimensión, "DIM-1", true) == 0) Dimensión = "Nether";
                                    if (string.Compare(Dimensión, "DIM1", true) == 0) Dimensión = "The end";
                                    while (Diccionario_Rutas_Dimensiones.ContainsKey(Dimensión)) Dimensión += "_";
                                    Diccionario_Rutas_Dimensiones.Add(Dimensión, Ruta);
                                }
                                Matriz_Rutas = null;
                            }
                        }
                    }
                    return Diccionario_Rutas_Dimensiones;
                }
            }
            catch (Exception Excepción) { Depurador.Escribir_Excepción(Excepción != null ? Excepción.ToString() : null); }
            GC.Collect();
            GC.GetTotalMemory(true);
            return new Dictionary<string, string>();
        }

        /// <summary>
        /// Obtains the positions of the available regions from the specified dimension. This should never return a null list.
        /// </summary>
        /// <param name="Ruta_Regiones">A valid directory path that contains region files.</param>
        /// <param name="Rectángulo_Límites">The maximum square dimensions of that dimension.</param>
        /// <returns>Returns a list with the positions of all the found region files. This list should never be null, although it might be empty.</returns>
        internal static List<Point> Obtener_Rutas_Regiones(string Ruta_Regiones, out Rectangle Rectángulo_Límites)
        {
            Rectángulo_Límites = new Rectangle(int.MaxValue, int.MaxValue, int.MinValue, int.MinValue);
            try
            {
                if (!string.IsNullOrEmpty(Ruta_Regiones) && Directory.Exists(Ruta_Regiones))
                {
                    string[] Matriz_Rutas = Directory.GetFiles(Ruta_Regiones, "*.mc*", SearchOption.TopDirectoryOnly);
                    if (Matriz_Rutas != null && Matriz_Rutas.Length > 0)
                    {
                        if (Matriz_Rutas.Length > 1) Array.Sort(Matriz_Rutas, new Comparador_String());
                        List<Point> Lista_Posiciones = new List<Point>();
                        foreach (string Ruta_Región in Matriz_Rutas)
                        {
                            if (!string.IsNullOrEmpty(Ruta_Región))
                            {
                                string Nombre = Path.GetFileNameWithoutExtension(Ruta_Región);
                                if (!string.IsNullOrEmpty(Nombre) && Nombre.StartsWith("r.") && Nombre.Length >= 5)
                                {
                                    string Texto_X = null;
                                    string Texto_Z = null;
                                    bool Coordenada_Z = false;
                                    for (int Índice_Caracter = 2; Índice_Caracter < Nombre.Length; Índice_Caracter++)
                                    {
                                        if (Nombre[Índice_Caracter] == '-')
                                        {
                                            if (!Coordenada_Z)
                                            {
                                                if (string.IsNullOrEmpty(Texto_X)) Texto_X += Nombre[Índice_Caracter];
                                            }
                                            else if (string.IsNullOrEmpty(Texto_Z)) Texto_Z += Nombre[Índice_Caracter];
                                        }
                                        else if (char.IsDigit(Nombre[Índice_Caracter]))
                                        {
                                            if (!Coordenada_Z) Texto_X += Nombre[Índice_Caracter];
                                            else Texto_Z += Nombre[Índice_Caracter];
                                        }
                                        else if (Nombre[Índice_Caracter] == '.' && !Coordenada_Z) Coordenada_Z = true;
                                    }
                                    Point Posición = new Point(int.Parse(Texto_X), int.Parse(Texto_Z));
                                    if (!Lista_Posiciones.Contains(Posición)) Lista_Posiciones.Add(Posición);
                                    int X = Posición.X * 512;
                                    int Z = Posición.Y * 512;
                                    if (X < Rectángulo_Límites.X) Rectángulo_Límites.X = X;
                                    if (Z < Rectángulo_Límites.Y) Rectángulo_Límites.Y = Z;
                                    if (X > Rectángulo_Límites.Width) Rectángulo_Límites.Width = X;
                                    if (Z > Rectángulo_Límites.Height) Rectángulo_Límites.Height = Z;
                                }
                            }
                        }
                        Matriz_Rutas = null;
                        Rectángulo_Límites.Width += 511;
                        Rectángulo_Límites.Height += 511;
                        return Lista_Posiciones;
                    }
                    /*else // Assume Indev format.
                    {
                        Matriz_Rutas = Directory.GetFiles(Ruta_Regiones, "*.dat", SearchOption.TopDirectoryOnly);


                    }*/
                }
                if (Rectángulo_Límites.X <= int.MaxValue || Rectángulo_Límites.Y <= int.MaxValue || Rectángulo_Límites.Width >= int.MinValue || Rectángulo_Límites.Height >= int.MinValue)
                {
                    Rectángulo_Límites = new Rectangle(0, 0, 0, 0);
                }
                else
                {
                    Rectángulo_Límites.Width += 511;
                    Rectángulo_Límites.Height += 511;
                }
            }
            catch (Exception Excepción) { Depurador.Escribir_Excepción(Excepción != null ? Excepción.ToString() : null); }
            return new List<Point>();
        }

        internal static Dictionary<int, Color> Diccionario_Biomas_Colores = new Dictionary<int, Color>();
        //internal static Dictionary<int, Pen> Diccionario_Biomas_Lápices = new Dictionary<int, Pen>();
        internal static Dictionary<int, SolidBrush> Diccionario_Biomas_Pinceles = new Dictionary<int, SolidBrush>();

        internal static void Cargar_Biomas()
        {
            /*DateTime Fecha_Mínima = new DateTime(2017, 9, 1);
            DateTime Fecha_Máxima = new DateTime(2018, 1, 1);
            string[] mc = Directory.GetDirectories(@"C:\Users\Jupisoft\AppData\Roaming", "*", SearchOption.TopDirectoryOnly);
            //foreach (string c in mc)
            string Ruta_Destino = @"C:\Users\Jupisoft\AppData\Roaming\.minecraft";
            string c = @"C:\Users\Jupisoft\AppData\Roaming\_Minecraft 1.11.2 OK\.minecraft";
            {
                if (c.ToLowerInvariant().Contains("minecraft"))
                {
                    string[] ma = Directory.GetFiles(c, "*", SearchOption.AllDirectories);
                    foreach (string a in ma)
                    {
                        DateTime Fecha = File.GetCreationTime(a);
                        if (Fecha >= Fecha_Mínima/* && Fecha < Fecha_Máxima*//*)
                        {
                            string Ruta_Carpeta = Path.GetDirectoryName(a);
                            Ruta_Carpeta = Ruta_Carpeta.Replace(c, Ruta_Destino);
                            if (!Directory.Exists(Ruta_Carpeta)) Directory.CreateDirectory(Ruta_Carpeta);
                            File.Move(a, Ruta_Carpeta + "\\" + Path.GetFileName(a));
                            //MessageBox.Show(a);
                        }
                    }
                }
            }
            MessageBox.Show("OK");*/

            Diccionario_Biomas_Colores.Clear();
            //Diccionario_Biomas_Lápices.Clear();
            Diccionario_Biomas_Pinceles.Clear();
            Diccionario_Biomas_Colores.Add(0, Color.FromArgb(0, 0, 112)); // Ocean
            Diccionario_Biomas_Colores.Add(1, Color.FromArgb(141, 179, 96)); // Plains
            Diccionario_Biomas_Colores.Add(2, Color.FromArgb(250, 148, 24)); // Desert
            Diccionario_Biomas_Colores.Add(3, Color.FromArgb(96, 96, 96)); // Extreme Hills
            Diccionario_Biomas_Colores.Add(4, Color.FromArgb(5, 102, 33)); // Forest
            Diccionario_Biomas_Colores.Add(5, Color.FromArgb(11, 102, 89)); // Taiga
            Diccionario_Biomas_Colores.Add(6, Color.FromArgb(7, 249, 178)); // Swampland
            Diccionario_Biomas_Colores.Add(7, Color.FromArgb(0, 0, 255)); // River
            Diccionario_Biomas_Colores.Add(8, Color.FromArgb(255, 0, 0)); // Hell
            Diccionario_Biomas_Colores.Add(9, Color.FromArgb(128, 128, 255)); // The End
            Diccionario_Biomas_Colores.Add(10, Color.FromArgb(144, 144, 160)); // Frozen Ocean
            Diccionario_Biomas_Colores.Add(11, Color.FromArgb(160, 160, 255)); // Frozen River
            Diccionario_Biomas_Colores.Add(12, Color.FromArgb(255, 255, 255)); // Ice Plains
            Diccionario_Biomas_Colores.Add(13, Color.FromArgb(160, 160, 160)); // Ice Mountains
            Diccionario_Biomas_Colores.Add(14, Color.FromArgb(255, 0, 255)); // Mushroom Island
            Diccionario_Biomas_Colores.Add(15, Color.FromArgb(160, 0, 255)); // Mushroom Island Shore
            Diccionario_Biomas_Colores.Add(16, Color.FromArgb(250, 222, 85)); // Beach
            Diccionario_Biomas_Colores.Add(17, Color.FromArgb(210, 95, 18)); // Desert Hills
            Diccionario_Biomas_Colores.Add(18, Color.FromArgb(34, 85, 28)); // Forest Hills
            Diccionario_Biomas_Colores.Add(19, Color.FromArgb(22, 57, 51)); // Taiga Hills
            Diccionario_Biomas_Colores.Add(20, Color.FromArgb(114, 120, 154)); // Extreme Hills Edge
            Diccionario_Biomas_Colores.Add(21, Color.FromArgb(83, 123, 9)); // Jungle
            Diccionario_Biomas_Colores.Add(22, Color.FromArgb(44, 66, 5)); // Jungle Hills
            Diccionario_Biomas_Colores.Add(23, Color.FromArgb(98, 139, 23)); // Jungle Edge
            Diccionario_Biomas_Colores.Add(24, Color.FromArgb(0, 0, 48)); // Deep Ocean
            Diccionario_Biomas_Colores.Add(25, Color.FromArgb(162, 162, 132)); // Stone Beach
            Diccionario_Biomas_Colores.Add(26, Color.FromArgb(250, 240, 192)); // Cold Beach
            Diccionario_Biomas_Colores.Add(27, Color.FromArgb(48, 116, 68)); // Birch Forest
            Diccionario_Biomas_Colores.Add(28, Color.FromArgb(31, 95, 50)); // Birch Forest Hills
            Diccionario_Biomas_Colores.Add(29, Color.FromArgb(64, 81, 26)); // Roofed Forest
            Diccionario_Biomas_Colores.Add(30, Color.FromArgb(49, 85, 74)); // Cold Taiga
            Diccionario_Biomas_Colores.Add(31, Color.FromArgb(36, 63, 54)); // Cold Taiga Hills
            Diccionario_Biomas_Colores.Add(32, Color.FromArgb(89, 102, 81)); // Mega Taiga
            Diccionario_Biomas_Colores.Add(33, Color.FromArgb(69, 79, 62)); // Mega Taiga Hills
            Diccionario_Biomas_Colores.Add(34, Color.FromArgb(80, 112, 80)); // Extreme Hills+
            Diccionario_Biomas_Colores.Add(35, Color.FromArgb(189, 178, 95)); // Savanna
            Diccionario_Biomas_Colores.Add(36, Color.FromArgb(167, 157, 100)); // Savanna Plateau
            Diccionario_Biomas_Colores.Add(37, Color.FromArgb(217, 69, 21)); // Mesa
            Diccionario_Biomas_Colores.Add(38, Color.FromArgb(176, 151, 101)); // Mesa Plateau F
            Diccionario_Biomas_Colores.Add(39, Color.FromArgb(202, 140, 101)); // Mesa Plateau
            Diccionario_Biomas_Colores.Add(40, Color.FromArgb(128, 128, 255)); // The End - Floating islands
            Diccionario_Biomas_Colores.Add(41, Color.FromArgb(128, 128, 255)); // The End - Medium island
            Diccionario_Biomas_Colores.Add(42, Color.FromArgb(128, 128, 255)); // The End - High island
            Diccionario_Biomas_Colores.Add(43, Color.FromArgb(128, 128, 255)); // The End - Barren island
            Diccionario_Biomas_Colores.Add(44, Color.FromArgb(0, 0, 172)); // Warm Ocean
            Diccionario_Biomas_Colores.Add(45, Color.FromArgb(0, 0, 144)); // Lukewarm Ocean
            Diccionario_Biomas_Colores.Add(46, Color.FromArgb(32, 32, 112)); // Cold Ocean
            Diccionario_Biomas_Colores.Add(47, Color.FromArgb(0, 0, 80)); // Warm Deep Ocean
            Diccionario_Biomas_Colores.Add(48, Color.FromArgb(0, 0, 64)); // Deep Lukewarm Ocean
            Diccionario_Biomas_Colores.Add(49, Color.FromArgb(32, 32, 56)); // Deep Cold Ocean
            Diccionario_Biomas_Colores.Add(50, Color.FromArgb(64, 64, 144)); // Deep Frozen Ocean
            Diccionario_Biomas_Colores.Add(127, Color.FromArgb(0, 0, 0)); // The Void

            Diccionario_Biomas_Colores.Add(128, Color.FromArgb(0, 0, 112)); // Ocean M
            Diccionario_Biomas_Colores.Add(129, Color.FromArgb(141, 179, 96)); // Sunflower Plains
            Diccionario_Biomas_Colores.Add(130, Color.FromArgb(250, 148, 24)); // Desert M
            Diccionario_Biomas_Colores.Add(131, Color.FromArgb(96, 96, 96)); // Extreme Hills M
            Diccionario_Biomas_Colores.Add(132, Color.FromArgb(5, 102, 33)); // Flower Forest
            Diccionario_Biomas_Colores.Add(133, Color.FromArgb(11, 102, 89)); // Taiga M
            Diccionario_Biomas_Colores.Add(134, Color.FromArgb(7, 249, 178)); // Swampland M
            Diccionario_Biomas_Colores.Add(135, Color.FromArgb(0, 0, 255)); // River M
            Diccionario_Biomas_Colores.Add(136, Color.FromArgb(255, 0, 0)); // Hell M
            Diccionario_Biomas_Colores.Add(137, Color.FromArgb(128, 128, 255)); // Sky M
            Diccionario_Biomas_Colores.Add(138, Color.FromArgb(144, 144, 160)); // Frozen Ocean M
            Diccionario_Biomas_Colores.Add(139, Color.FromArgb(160, 160, 255)); // Frozen River M
            Diccionario_Biomas_Colores.Add(140, Color.FromArgb(140, 180, 180)); // Ice Plains Spikes
            Diccionario_Biomas_Colores.Add(141, Color.FromArgb(160, 160, 160)); // Ice Mountains M
            Diccionario_Biomas_Colores.Add(142, Color.FromArgb(255, 0, 255)); // Mushroom Island M
            Diccionario_Biomas_Colores.Add(143, Color.FromArgb(160, 0, 255)); // Mushroom Island Shore M
            Diccionario_Biomas_Colores.Add(144, Color.FromArgb(250, 222, 85)); // Beach M
            Diccionario_Biomas_Colores.Add(145, Color.FromArgb(210, 95, 18)); // Desert Hills M
            Diccionario_Biomas_Colores.Add(146, Color.FromArgb(34, 85, 28)); // Forest Hills M
            Diccionario_Biomas_Colores.Add(147, Color.FromArgb(22, 57, 51)); // Taiga Hills M
            Diccionario_Biomas_Colores.Add(148, Color.FromArgb(114, 120, 154)); // Extreme Hills Edge M
            Diccionario_Biomas_Colores.Add(149, Color.FromArgb(83, 123, 9)); // Jungle M
            Diccionario_Biomas_Colores.Add(150, Color.FromArgb(44, 66, 5)); // Jungle Hills M
            Diccionario_Biomas_Colores.Add(151, Color.FromArgb(98, 139, 23)); // Jungle Edge M
            Diccionario_Biomas_Colores.Add(152, Color.FromArgb(0, 0, 48)); // Deep Ocean M
            Diccionario_Biomas_Colores.Add(153, Color.FromArgb(162, 162, 132)); // Stone Beach M
            Diccionario_Biomas_Colores.Add(154, Color.FromArgb(250, 240, 192)); // Cold Beach M
            Diccionario_Biomas_Colores.Add(155, Color.FromArgb(48, 116, 68)); // Birch Forest M
            Diccionario_Biomas_Colores.Add(156, Color.FromArgb(31, 95, 50)); // Birch Forest Hills M
            Diccionario_Biomas_Colores.Add(157, Color.FromArgb(64, 81, 26)); // Roofed Forest M
            Diccionario_Biomas_Colores.Add(158, Color.FromArgb(49, 85, 74)); // Cold Taiga M
            Diccionario_Biomas_Colores.Add(159, Color.FromArgb(36, 63, 54)); // Cold Taiga Hills M
            Diccionario_Biomas_Colores.Add(160, Color.FromArgb(89, 102, 81)); // Mega Spruce Taiga
            Diccionario_Biomas_Colores.Add(161, Color.FromArgb(69, 79, 62)); // Mega Spruce Taiga (Hills)
            Diccionario_Biomas_Colores.Add(162, Color.FromArgb(80, 112, 80)); // Extreme Hills+ M
            Diccionario_Biomas_Colores.Add(163, Color.FromArgb(189, 178, 95)); // Savanna M
            Diccionario_Biomas_Colores.Add(164, Color.FromArgb(167, 157, 100)); // Savanna Plateau M
            Diccionario_Biomas_Colores.Add(165, Color.FromArgb(217, 69, 21)); // Mesa (Bryce)
            Diccionario_Biomas_Colores.Add(166, Color.FromArgb(176, 151, 101)); // Mesa Plateau F M
            Diccionario_Biomas_Colores.Add(167, Color.FromArgb(202, 140, 101)); // Mesa Plateau M
            Diccionario_Biomas_Colores.Add(168, Color.FromArgb(128, 128, 255)); // The End - Floating islands M
            Diccionario_Biomas_Colores.Add(169, Color.FromArgb(128, 128, 255)); // The End - Medium island M
            Diccionario_Biomas_Colores.Add(170, Color.FromArgb(128, 128, 255)); // The End - High island M
            Diccionario_Biomas_Colores.Add(171, Color.FromArgb(128, 128, 255)); // The End - Barren island M
            Diccionario_Biomas_Colores.Add(172, Color.FromArgb(0, 0, 172)); // Warm Ocean M
            Diccionario_Biomas_Colores.Add(173, Color.FromArgb(0, 0, 144)); // Lukewarm Ocean M
            Diccionario_Biomas_Colores.Add(174, Color.FromArgb(32, 32, 112)); // Cold Ocean M
            Diccionario_Biomas_Colores.Add(175, Color.FromArgb(0, 0, 80)); // Warm Deep Ocean M
            Diccionario_Biomas_Colores.Add(176, Color.FromArgb(0, 0, 64)); // Deep Lukewarm Ocean M
            Diccionario_Biomas_Colores.Add(177, Color.FromArgb(32, 32, 56)); // Deep Cold Ocean M
            Diccionario_Biomas_Colores.Add(178, Color.FromArgb(64, 64, 144)); // Deep Frozen Ocean M
            Diccionario_Biomas_Colores.Add(255, Color.FromArgb(0, 0, 0)); // The Void M

            // Subir el brillo en las variaciones de bioma como hace Amidst:
            int LIGHTEN_BRIGHTNESS = 40;
            for (int Índice = 0; Índice < 256; Índice++)
            {
                if (Índice >= 128 && Diccionario_Biomas_Colores.ContainsKey(Índice))
                {
                    Color Color_ARGB = Diccionario_Biomas_Colores[Índice];
                    Diccionario_Biomas_Colores[Índice] = Color.FromArgb(Math.Min(Color_ARGB.R + LIGHTEN_BRIGHTNESS, 255), Math.Min(Color_ARGB.G + LIGHTEN_BRIGHTNESS, 255), Math.Min(Color_ARGB.B + LIGHTEN_BRIGHTNESS, 255));
                }
            }

            foreach (KeyValuePair<int, Color> Entrada in Diccionario_Biomas_Colores)
            {
                //Diccionario_Biomas_Lápices.Add(Entrada.Key, new Pen(Entrada.Value));
                Diccionario_Biomas_Pinceles.Add(Entrada.Key, new SolidBrush(Entrada.Value));
            }
            return;

            string Texto = null;
            int Biomas = 0;
            //string[] Matriz_Líneas = File.ReadAllLines(@"C:\Users\Jupisoft\Documents\Visual Studio 2015\Projects\amidst-4.3-beta2\amidst-4.3-beta2\biome\default.json");
            string[] Matriz_Líneas = File.ReadAllLines(Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory) + "\\Biomas, 06-03-2018.txt");
            for (int Índice_Línea = 0; Índice_Línea < Matriz_Líneas.Length; Índice_Línea++)
            {
                if (!string.IsNullOrEmpty(Matriz_Líneas[Índice_Línea]))
                {
                    int Índice_Nombre_Inicio = Matriz_Líneas[Índice_Línea].IndexOf('\"');
                    if (Índice_Nombre_Inicio > -1)
                    {
                        int Índice_Nombre_Fin = Matriz_Líneas[Índice_Línea].IndexOf('\"', Índice_Nombre_Inicio + 1);
                        if (Índice_Nombre_Fin > -1)
                        {
                            string Nombre = Matriz_Líneas[Índice_Línea].Substring(Índice_Nombre_Inicio + 1, (Índice_Nombre_Fin - Índice_Nombre_Inicio) - 1);
                            List<int> Lista_RGB = new List<int>();
                            List<char> Lista_Caracteres = new List<char>();
                            int Índice_Último_Número = -1;
                            for (int Índice = Índice_Nombre_Fin + 1; Índice < Matriz_Líneas[Índice_Línea].Length; Índice++)
                            {
                                if (char.IsDigit(Matriz_Líneas[Índice_Línea][Índice]))
                                {
                                    Lista_Caracteres.Add(Matriz_Líneas[Índice_Línea][Índice]);
                                    Índice_Último_Número = Índice;
                                }
                                else if (Lista_Caracteres.Count > 0)
                                {
                                    Lista_RGB.Add(int.Parse(new string(Lista_Caracteres.ToArray())));
                                    Lista_Caracteres.Clear();
                                }
                            }
                            string Tipo = Matriz_Líneas[Índice_Línea].Substring(Índice_Último_Número + 1);

                            // Acabar la variación de color como en Amidst...

                            Texto += "Diccionario_Biomas_Colores.Add(" + Lista_RGB[0].ToString() + ", Color.FromArgb(" + Lista_RGB[1].ToString() + ", " + Lista_RGB[2].ToString() + ", " + Lista_RGB[3].ToString() + ")); // " + Nombre + "\r\n";
                            Biomas++;
                        }
                    }
                }
            }
            Clipboard.SetText(Texto);
        }

        /// <summary>
        /// Temporary dictionary just to find unique structures to know it's IDs and program the rest.
        /// </summary>
        //internal static Dictionary<string, object> Diccionario_Estructuras_Únicas = new Dictionary<string, object>();

        /// <summary>
        /// Enumeration that define a Minecraft structure.
        /// </summary>
        internal enum Estructuras : int
        {
            Aldea = 0,
            Barco,
            Barco_Mapa,
            Barco_Tesoro,
            Cabaña,
            Ciudad,
            Ciudad_Elytra,
            Fin,
            Fortaleza,
            Iglú,
            Iglú_Sótano,
            Mansión,
            Mina,
            Monumento,
            Pirámide,
            Puesto_Saqueadores,
            Ruinas,
            Ruinas_Terracotta,
            Templo,
            Tesoro,
            Tesoro_Vacío,
            Desconocida
        }

        internal static Bitmap Obtener_Imagen_Estructura(Estructuras Estructura)
        {
            try
            {
                if (Estructura == Estructuras.Aldea) return Resources.Estructura_Aldea;
                else if (Estructura == Estructuras.Barco) return Resources.Estructura_Barco;
                else if (Estructura == Estructuras.Barco_Mapa) return Resources.Estructura_Barco_Mapa;
                else if (Estructura == Estructuras.Barco_Tesoro) return Resources.Estructura_Barco_Tesoro;
                else if (Estructura == Estructuras.Cabaña) return Resources.Estructura_Cabaña;
                else if (Estructura == Estructuras.Ciudad) return Resources.Estructura_Ciudad;
                else if (Estructura == Estructuras.Ciudad_Elytra) return Resources.Estructura_Ciudad_Elytra;
                else if (Estructura == Estructuras.Fin) return Resources.Estructura_Fin;
                else if (Estructura == Estructuras.Fortaleza) return Resources.Estructura_Fortaleza;
                else if (Estructura == Estructuras.Iglú) return Resources.Estructura_Iglú;
                else if (Estructura == Estructuras.Iglú_Sótano) return Resources.Estructura_Iglú_Sótano;
                else if (Estructura == Estructuras.Mansión) return Resources.Estructura_Mansión;
                else if (Estructura == Estructuras.Mina) return Resources.Estructura_Mina;
                else if (Estructura == Estructuras.Monumento) return Resources.Estructura_Monumento;
                else if (Estructura == Estructuras.Pirámide) return Resources.Estructura_Pirámide;
                else if (Estructura == Estructuras.Puesto_Saqueadores) return Resources.Estructura_Puesto_Saqueadores;
                else if (Estructura == Estructuras.Ruinas) return Resources.Estructura_Ruinas;
                else if (Estructura == Estructuras.Ruinas_Terracotta) return Resources.Estructura_Ruinas_Terracotta;
                else if (Estructura == Estructuras.Templo) return Resources.Estructura_Templo;
                else if (Estructura == Estructuras.Tesoro) return Resources.Estructura_Tesoro;
                else if (Estructura == Estructuras.Tesoro_Vacío) return Resources.Estructura_Tesoro_Vacío;
            }
            catch (Exception Excepción) { Depurador.Escribir_Excepción(Excepción != null ? Excepción.ToString() : null); }
            return Resources.Estructura_Desconocida;
        }

        /// <summary>
        /// Estructuras reconvertidas donde un byte es igual a un bloque en todas las matrices.
        /// </summary>
        [StructLayout(LayoutKind.Sequential)]
        internal struct Chunks
        {
            internal short Y_Máximo;
            internal short LightPopulated;
            internal short TerrainPopulated;
            /// <summary>
            /// Only for chunks from Minecraft 1.13+.
            /// </summary>
            internal string Status;
            internal short[,,] Matriz_Bytes_IDs;
            internal byte[,,] Matriz_Bytes_Luz_Bloques;
            internal byte[,,] Matriz_Bytes_Luz_Cielo;
            internal bool Biomas_Minecraft_1_16;
            internal short[,] Matriz_Bytes_Biomas;
            internal short[,] Matriz_Bytes_Mapa_Altura;
            internal short[,] Matriz_Bytes_Heightmap_Ocean_Floor;
            internal short[,] Matriz_Bytes_Heightmap_Motion_Blocking_No_Leaves;
            internal short[,] Matriz_Bytes_Heightmap_Motion_Blocking;
            internal short[,] Matriz_Bytes_Heightmap_Light_Blocking;
            internal List<Substrate.SpawnPoint> Lista_Estructuras_Posiciones;
            internal List<Estructuras> Lista_Estructuras;

            internal Chunks(short[,,] Matriz_Bytes_ID, byte[,,] Matriz_Bytes_Luz_Bloques, byte[,,] Matriz_Bytes_Luz_Cielo, bool Biomas_Minecraft_1_16, short[,] Matriz_Bytes_Biomas, short[,] Matriz_Bytes_Mapa_Altura, short[,] Matriz_Bytes_Heightmap_Ocean_Floor, short[,] Matriz_Bytes_Heightmap_Motion_Blocking_No_Leaves, short[,] Matriz_Bytes_Heightmap_Motion_Blocking, short[,] Matriz_Bytes_Heightmap_Light_Blocking, List<Substrate.SpawnPoint> Lista_Estructuras_Posiciones, List<Estructuras> Lista_Estructuras)
            {
                this.Y_Máximo = 255;
                this.LightPopulated = short.MaxValue;
                this.TerrainPopulated = short.MaxValue;
                this.Status = null;
                this.Matriz_Bytes_IDs = Matriz_Bytes_ID;
                this.Matriz_Bytes_Luz_Bloques = Matriz_Bytes_Luz_Bloques;
                this.Matriz_Bytes_Luz_Cielo = Matriz_Bytes_Luz_Cielo;
                this.Biomas_Minecraft_1_16 = Biomas_Minecraft_1_16;
                this.Matriz_Bytes_Biomas = Matriz_Bytes_Biomas;
                this.Matriz_Bytes_Mapa_Altura = Matriz_Bytes_Mapa_Altura;
                this.Matriz_Bytes_Heightmap_Ocean_Floor = Matriz_Bytes_Heightmap_Ocean_Floor;
                this.Matriz_Bytes_Heightmap_Motion_Blocking_No_Leaves = Matriz_Bytes_Heightmap_Motion_Blocking_No_Leaves;
                this.Matriz_Bytes_Heightmap_Motion_Blocking = Matriz_Bytes_Heightmap_Motion_Blocking;
                this.Matriz_Bytes_Heightmap_Light_Blocking = Matriz_Bytes_Heightmap_Light_Blocking;
                this.Lista_Estructuras_Posiciones = Lista_Estructuras_Posiciones;
                this.Lista_Estructuras = Lista_Estructuras;
            }

            internal static Chunks Nuevo(bool Cargar_IDs, bool Cargar_Luz_Bloques, bool Cargar_Luz_Cielo, bool Cargar_Biomas, bool Cargar_Mapa_Altura)
            {
                Chunks Chunk = new Chunks();
                Chunk.Y_Máximo = 255;
                Chunk.LightPopulated = short.MaxValue;
                Chunk.TerrainPopulated = short.MaxValue;
                Chunk.Status = null;
                Chunk.Matriz_Bytes_IDs = Chunks.Matriz_Aire.Clone() as short[,,];
                Chunk.Matriz_Bytes_Luz_Bloques = Cargar_Luz_Bloques ? new byte[16, 256, 16] : null;
                Chunk.Matriz_Bytes_Luz_Cielo = Cargar_Luz_Cielo ? new byte[16, 256, 16] : null;
                Chunk.Biomas_Minecraft_1_16 = false;
                Chunk.Matriz_Bytes_Biomas = Cargar_Biomas ? new short[16, 16] : null;
                Chunk.Matriz_Bytes_Mapa_Altura = Cargar_Mapa_Altura ? new short[16, 16] : null;
                Chunk.Matriz_Bytes_Heightmap_Ocean_Floor = Cargar_Mapa_Altura ? new short[16, 16] : null;
                Chunk.Matriz_Bytes_Heightmap_Motion_Blocking_No_Leaves = Cargar_Mapa_Altura ? new short[16, 16] : null;
                Chunk.Matriz_Bytes_Heightmap_Motion_Blocking = Cargar_Mapa_Altura ? new short[16, 16] : null;
                Chunk.Matriz_Bytes_Heightmap_Light_Blocking = Cargar_Mapa_Altura ? new short[16, 16] : null;
                Chunk.Lista_Estructuras_Posiciones = new List<Substrate.SpawnPoint>();
                Chunk.Lista_Estructuras = new List<Estructuras>();
                return Chunk;
            }

            internal void Rellenar_Aire(int Índice_Paleta_Aire)
            {
                /*for (int Y = 0; Y < 256; Y++)
                {
                    for (int Z = 0; Z < 16; Z++)
                    {
                        for (int X = 0; X < 16; X++)
                        {
                            //this.Matriz_Bytes_ID[X, Y, Z] = Índice_Paleta_Aire;
                        }
                    }
                }*/
                this.Matriz_Bytes_IDs = Chunks.Matriz_Aire.Clone() as short[,,];
            }

            internal static short[,,] Matriz_Aire = null;

            internal static void Crear_Matriz_Aire()
            {
                Matriz_Aire = new short[16, 256, 16];
                for (int Y = 0; Y < 256; Y++)
                {
                    for (int Z = 0; Z < 16; Z++)
                    {
                        for (int X = 0; X < 16; X++)
                        {
                            Matriz_Aire[X, Y, Z] = Índice_Aire;
                        }
                    }
                }
            }
        }

        /// <summary>
        /// Estructuras reconvertidas donde un byte es igual a un bloque en todas las matrices.
        /// </summary>
        [StructLayout(LayoutKind.Sequential)]
        internal struct Regiones
        {
            internal bool Iniciada;
            internal bool Minecraft_1_13;
            internal Point Posición;
            internal Chunks[,] Matriz_Chunks;

            internal Regiones(Point Posición)
            {
                this.Iniciada = false;
                this.Minecraft_1_13 = false;
                this.Posición = Posición;
                this.Matriz_Chunks = null;
            }

            /*internal Regiones(Point Posición, Chunks[,] Matriz_Chunks)
            {
                this.Iniciada = false;
                this.Minecraft_1_13 = false;
                this.Posición = Posición;
                this.Matriz_Chunks = Matriz_Chunks;
            }*/
        }

        internal static int Máximo = -1;
        internal static string Texto_Names = null;

        internal static readonly int[] Matriz_Máscaras_Bits = new int[]
        {
            1, // 1 bit
            3,
            7,
            15,
            31,
            63,
            127,
            255,
            511,
            1023,
            2047,
            4095 // 12 bits
        };

        internal static readonly int[] Matriz_Potencias_Bits = new int[]
        {
            2, // 1 bit
            4,
            8,
            16,
            32,
            64,
            128,
            256,
            512,
            1024,
            2048,
            4096 // 12 bits
        };

        internal static Regiones Cargar_Región(string Ruta_Dimensión, Point Posición_Región, bool Cargar_IDs, bool Cargar_Luz_Bloques, bool Cargar_Luz_Cielo, bool Cargar_Biomas, bool Cargar_Mapa_Altura)
        {
            try
            {
                if (!string.IsNullOrEmpty(Ruta_Dimensión) && Directory.Exists(Ruta_Dimensión))
                {
                    string Ruta_Región = Ruta_Dimensión + "\\r." + Posición_Región.X.ToString() + "." + Posición_Región.Y.ToString() + "";
                    if (File.Exists(Ruta_Región + ".mca")) Ruta_Región += ".mca";
                    else if (File.Exists(Ruta_Región + ".mcr")) Ruta_Región += ".mcr";
                    else Ruta_Región = null;
                    if (!string.IsNullOrEmpty(Ruta_Región) && File.Exists(Ruta_Región))
                    {
                        RegionFile Archivo_Región = new RegionFile(Ruta_Región);
                        if (Archivo_Región != null)
                        {
                            Regiones Región = new Regiones(new Point(Posición_Región.X, Posición_Región.Y));
                            Rectangle Rectángulo_Chunk = Rectangle.Empty; // = new Rectangle(Posición_Región.X * 512, Posición_Región.Y * 512, 16, 16);

                            //int Bits_Mínimo = int.MaxValue;
                            //int Bits_Máximo = int.MinValue;

                            //Región.Matriz_Chunks = new Chunks[32, 32];
                            Chunks[,] Matriz_Chunks = new Chunks[32, 32];
                            for (int Chunk_Z = 0; Chunk_Z < 32; Chunk_Z++)
                            {
                                for (int Chunk_X = 0; Chunk_X < 32; Chunk_X++)
                                {
                                    if (Pendiente_Subproceso_Abortar)
                                    {
                                        Pendiente_Subproceso_Abortar = false;
                                        Archivo_Región.Close();
                                        Archivo_Región.Dispose();
                                        Archivo_Región = null;
                                        return new Regiones(Point.Empty);
                                    }
                                    //Matriz_Chunks[Chunk_X, Chunk_Z] = Chunk; // Establecer un chunk vacío...
                                    string Compresión;
                                    Stream Lector_Chunk = Archivo_Región.GetChunkDataInputStream(Chunk_X, Chunk_Z, out Compresión);
                                    if (Lector_Chunk != null)
                                    {
                                        NbtTree Árbol = new NbtTree(Lector_Chunk);
                                        if (Árbol != null && Árbol.Root != null)
                                        {
                                            //MessageBox.Show(Árbol.Root["Level"].ToTagCompound()["TerrainPopulated"].ToTagByte().ToString());
                                            //MessageBox.Show((dtree != null).ToString());
                                            //MessageBox.Show(Árbol.Name);
                                            TagNodeCompound Árbol_Compuesto = (Árbol.Root as TagNode) as TagNodeCompound;
                                            if (Árbol_Compuesto != null)
                                            {
                                                Chunks Chunk = Chunks.Nuevo(Cargar_IDs, Cargar_Luz_Bloques, Cargar_Luz_Cielo, Cargar_Biomas, Cargar_Mapa_Altura);
                                                Rectángulo_Chunk = new Rectangle((Posición_Región.X * 512) + (Chunk_X * 16), (Posición_Región.Y * 512) + (Chunk_Z * 16), 16, 16);
                                                Rectángulo_Chunk.Width = Rectángulo_Chunk.X + 15; // Use this as the chunk limit.
                                                Rectángulo_Chunk.Height = Rectángulo_Chunk.Y + 15; // Use this as the chunk limit.
                                                /*int[,,] Matriz_Índices_Bloques_XYZ = new int[16, 256, 16];
                                                for (int Índice_Y = 0; Índice_Y < 16; Índice_Y++)
                                                {
                                                    for (int Índice_Z = 0; Índice_Z < 16; Índice_Z++)
                                                    {
                                                        for (int Índice_X = 0; Índice_X < 16; Índice_X++)
                                                        {
                                                            Matriz_Índices_Bloques_XYZ[Índice_X, Índice_Y, Índice_Z] = Índice_Aire;
                                                        }
                                                    }
                                                }*/
                                                NbtTree _tree = new NbtTree(Árbol_Compuesto);
                                                int Versión_Data = -1; // -1 = Unknown. // 1631 = Minecraft 1.13.2. // 1952 = Minecraft 1.14.
                                                try
                                                {
                                                    if (_tree.Root.ContainsKey("DataVersion"))
                                                    {
                                                        Versión_Data = (_tree.Root["DataVersion"] as TagNodeInt).ToTagInt();
                                                    }
                                                }
                                                catch { Versión_Data = -1; }
                                                TagNodeCompound Nodo_Level = _tree.Root["Level"] as TagNodeCompound;
                                                if (!Nodo_Level.ContainsKey("Status")) // MC <= 1.12.2
                                                {
                                                    if (Nodo_Level.ContainsKey("LightPopulated"))
                                                    {
                                                        byte LightPopulated = Nodo_Level["LightPopulated"] as TagNodeByte;
                                                        Chunk.LightPopulated = LightPopulated;
                                                    }
                                                    if (Nodo_Level.ContainsKey("TerrainPopulated"))
                                                    {
                                                        byte TerrainPopulated = Nodo_Level["TerrainPopulated"] as TagNodeByte;
                                                        Chunk.TerrainPopulated = TerrainPopulated;
                                                    }
                                                    if (Cargar_Biomas && Nodo_Level.ContainsKey("Biomes"))
                                                    {
                                                        byte[] Matriz_Bytes_Biomas = Nodo_Level["Biomes"] as TagNodeByteArray;
                                                        if (Matriz_Bytes_Biomas != null && Matriz_Bytes_Biomas.Length == 256)
                                                        {
                                                            Chunk.Matriz_Bytes_Biomas = new short[16, 16];
                                                            for (int Índice_Z = 0, Índice = 0; Índice_Z < 16; Índice_Z++)
                                                            {
                                                                for (int Índice_X = 0; Índice_X < 16; Índice_X++, Índice++)
                                                                {
                                                                    if (Pendiente_Subproceso_Abortar)
                                                                    {
                                                                        Pendiente_Subproceso_Abortar = false;
                                                                        Archivo_Región.Close();
                                                                        Archivo_Región.Dispose();
                                                                        Archivo_Región = null;
                                                                        return new Regiones(Point.Empty);
                                                                    }
                                                                    Chunk.Matriz_Bytes_Biomas[Índice_X, Índice_Z] = Matriz_Bytes_Biomas[Índice];
                                                                }
                                                            }
                                                        }
                                                        Matriz_Bytes_Biomas = null;
                                                    }
                                                    if (Cargar_Mapa_Altura && Nodo_Level.ContainsKey("HeightMap"))
                                                    {
                                                        if (Nodo_Level["HeightMap"].GetTagType() == TagType.TAG_INT_ARRAY)
                                                        {
                                                            int[] Matriz_Bytes_Mapa_Altura = Nodo_Level["HeightMap"] as TagNodeIntArray;
                                                            if (Matriz_Bytes_Mapa_Altura != null && Matriz_Bytes_Mapa_Altura.Length >= 256)
                                                            {
                                                                Chunk.Matriz_Bytes_Mapa_Altura = new short[16, 16];
                                                                for (int Índice_Z = 0, Índice = 0; Índice_Z < 16; Índice_Z++)
                                                                {
                                                                    for (int Índice_X = 0; Índice_X < 16; Índice_X++, Índice++)
                                                                    {
                                                                        if (Pendiente_Subproceso_Abortar)
                                                                        {
                                                                            Pendiente_Subproceso_Abortar = false;
                                                                            Archivo_Región.Close();
                                                                            Archivo_Región.Dispose();
                                                                            Archivo_Región = null;
                                                                            return new Regiones(Point.Empty);
                                                                        }
                                                                        Chunk.Matriz_Bytes_Mapa_Altura[Índice_X, Índice_Z] = (short)Matriz_Bytes_Mapa_Altura[Índice];
                                                                    }
                                                                }
                                                            }
                                                            Matriz_Bytes_Mapa_Altura = null;
                                                        }
                                                        else // Assume a byte array.
                                                        {
                                                            byte[] Matriz_Bytes_Mapa_Altura = Nodo_Level["HeightMap"] as TagNodeByteArray;
                                                            if (Matriz_Bytes_Mapa_Altura != null && Matriz_Bytes_Mapa_Altura.Length >= 256)
                                                            {
                                                                Chunk.Matriz_Bytes_Mapa_Altura = new short[16, 16];
                                                                for (int Índice_Z = 0, Índice = 0; Índice_Z < 16; Índice_Z++)
                                                                {
                                                                    for (int Índice_X = 0; Índice_X < 16; Índice_X++, Índice++)
                                                                    {
                                                                        if (Pendiente_Subproceso_Abortar)
                                                                        {
                                                                            Pendiente_Subproceso_Abortar = false;
                                                                            Archivo_Región.Close();
                                                                            Archivo_Región.Dispose();
                                                                            Archivo_Región = null;
                                                                            return new Regiones(Point.Empty);
                                                                        }
                                                                        Chunk.Matriz_Bytes_Mapa_Altura[Índice_X, Índice_Z] = (short)Matriz_Bytes_Mapa_Altura[Índice];
                                                                    }
                                                                }
                                                            }
                                                            Matriz_Bytes_Mapa_Altura = null;
                                                        }
                                                    }

                                                    /*if (Matriz_Bytes_Biomas != null && Matriz_Bytes_Biomas.Length >= 256)
                                                    {
                                                        for (int Índice_Z = 0; Índice_Z < 16; Índice_Z++)
                                                        {
                                                            for (int Índice_X = 0; Índice_X < 16; Índice_X++)
                                                            {
                                                                int Índice = (Índice_Z * 16) + Índice_X;
                                                                //Pintar.FillRectangle(new SolidBrush(Color.FromArgb(Matriz_Bytes_Biomas[Índice], Matriz_Bytes_Biomas[Índice], Matriz_Bytes_Biomas[Índice])), (Chunk_X * 32) + Índice_X, (Chunk_Z * 32) + Índice_Z, 1, 1);
                                                                if (Diccionario_Biomas_Colores.ContainsKey(Matriz_Bytes_Biomas[Índice])) Pintar.FillRectangle(new SolidBrush(Diccionario_Biomas_Colores[Matriz_Bytes_Biomas[Índice]]), (Chunk_X * 16) + Índice_X, (Chunk_Z * 16) + Índice_Z, 1, 1);
                                                                else if (!Lista_Biomas_Desconocidos.Contains(Matriz_Bytes_Biomas[Índice])) Lista_Biomas_Desconocidos.Add(Matriz_Bytes_Biomas[Índice]);
                                                            }
                                                        }
                                                    }*/

                                                    // Cargar las 16 posibles subsecciones del chunk de 16 bloques de alto (16 ^ 3):
                                                    TagNodeList Nodo_Secciones = Nodo_Level["Sections"] as TagNodeList;
                                                    foreach (TagNodeCompound Nodo_Sección in Nodo_Secciones)
                                                    {
                                                        if (Pendiente_Subproceso_Abortar)
                                                        {
                                                            Pendiente_Subproceso_Abortar = false;
                                                            Archivo_Región.Close();
                                                            Archivo_Región.Dispose();
                                                            Archivo_Región = null;
                                                            return new Regiones(Point.Empty);
                                                        }
                                                        TagNodeCompound Árbol_Sección = Nodo_Sección as TagNodeCompound;
                                                        if (Árbol_Sección == null) continue; // Ignorar las seciones vacías
                                                        byte Sección_Y = Árbol_Sección["Y"] as TagNodeByte;
                                                        int Sección_Y_16 = Sección_Y * 16;
                                                        if (Sección_Y_16 > Chunk.Y_Máximo) Chunk.Y_Máximo = (short)Sección_Y_16;
                                                        if (Cargar_IDs && Árbol_Sección.ContainsKey("Blocks"))
                                                        {
                                                            byte[] Matriz_Bytes_ID = Árbol_Sección["Blocks"] as TagNodeByteArray;
                                                            byte[] Matriz_Bytes_Data = Árbol_Sección.ContainsKey("Data") ? Árbol_Sección["Data"] as TagNodeByteArray : null;
                                                            if (Matriz_Bytes_ID != null && Matriz_Bytes_ID.Length == 4096)
                                                            {
                                                                for (int Índice_Y = 0, Índice = 0; Índice_Y < 16; Índice_Y++)
                                                                {
                                                                    for (int Índice_Z = 0; Índice_Z < 16; Índice_Z++)
                                                                    {
                                                                        for (int Índice_X = 0; Índice_X < 16; Índice_X++, Índice++)
                                                                        {
                                                                            if (Pendiente_Subproceso_Abortar)
                                                                            {
                                                                                Pendiente_Subproceso_Abortar = false;
                                                                                Archivo_Región.Close();
                                                                                Archivo_Región.Dispose();
                                                                                Archivo_Región = null;
                                                                                return new Regiones(Point.Empty);
                                                                            }
                                                                            short Data = 0;
                                                                            if (Matriz_Bytes_Data != null && Matriz_Bytes_Data.Length == 2048)
                                                                            {
                                                                                if (Índice % 2 != 0) Data = (short)((Matriz_Bytes_Data[Índice / 2] >> 4) & 0xF);
                                                                                else Data = (short)(Matriz_Bytes_Data[Índice / 2] & 0xF);
                                                                            }
                                                                            short ID_Data = Obtener_Valor_ID_Data(Matriz_Bytes_ID[Índice], Data);
                                                                            if (Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.ContainsKey(ID_Data))
                                                                            {
                                                                                Chunk.Matriz_Bytes_IDs[Índice_X, Sección_Y_16 + Índice_Y, Índice_Z] = Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13[ID_Data];
                                                                            }
                                                                            else
                                                                            {
                                                                                Chunk.Matriz_Bytes_IDs[Índice_X, Sección_Y_16 + Índice_Y, Índice_Z] = Diccionario_Bloques_Nombres_Índices["minecraft:air"];
                                                                                //MessageBox.Show("Unknown block " + Program.Traducir_Número(ID_Data) + " found: ID = " + Matriz_Bytes_ID[Índice].ToString() + ", Data = " + Data.ToString() + ".", Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Count.ToString());
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            Matriz_Bytes_ID = null;
                                                            Matriz_Bytes_Data = null;
                                                        }
                                                        if (Cargar_Luz_Cielo && Árbol_Sección.ContainsKey("SkyLight"))
                                                        {
                                                            byte[] Matriz_Bytes_Luz_Cielo = Árbol_Sección["SkyLight"] as TagNodeByteArray;
                                                            if (Matriz_Bytes_Luz_Cielo != null && Matriz_Bytes_Luz_Cielo.Length >= 256)
                                                            {
                                                                for (int Índice_Y = 0, Índice = 0; Índice_Y < 16; Índice_Y++)
                                                                {
                                                                    for (int Índice_Z = 0; Índice_Z < 16; Índice_Z++)
                                                                    {
                                                                        for (int Índice_X = 0; Índice_X < 16; Índice_X += 2, Índice++)
                                                                        {
                                                                            if (Pendiente_Subproceso_Abortar)
                                                                            {
                                                                                Pendiente_Subproceso_Abortar = false;
                                                                                Archivo_Región.Close();
                                                                                Archivo_Región.Dispose();
                                                                                Archivo_Región = null;
                                                                                return new Regiones(Point.Empty);
                                                                            }
                                                                            Chunk.Matriz_Bytes_Luz_Cielo[Índice_X, Sección_Y_16 + Índice_Y, Índice_Z] = (byte)((Matriz_Bytes_Luz_Cielo[Índice] >> 4) & 0xF);
                                                                            Chunk.Matriz_Bytes_Luz_Cielo[Índice_X + 1, Sección_Y_16 + Índice_Y, Índice_Z] = (byte)(Matriz_Bytes_Luz_Cielo[Índice] & 0xF);
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            Matriz_Bytes_Luz_Cielo = null;
                                                        }
                                                        if (Cargar_Luz_Bloques && Árbol_Sección.ContainsKey("BlockLight"))
                                                        {
                                                            byte[] Matriz_Bytes_BlockLight = Árbol_Sección["BlockLight"] as TagNodeByteArray;
                                                            if (Matriz_Bytes_BlockLight != null && Matriz_Bytes_BlockLight.Length >= 256)
                                                            {
                                                                for (int Índice_Y = 0, Índice = 0; Índice_Y < 16; Índice_Y++)
                                                                {
                                                                    for (int Índice_Z = 0; Índice_Z < 16; Índice_Z++)
                                                                    {
                                                                        for (int Índice_X = 0; Índice_X < 16; Índice_X += 2, Índice++)
                                                                        {
                                                                            if (Pendiente_Subproceso_Abortar)
                                                                            {
                                                                                Pendiente_Subproceso_Abortar = false;
                                                                                Archivo_Región.Close();
                                                                                Archivo_Región.Dispose();
                                                                                Archivo_Región = null;
                                                                                return new Regiones(Point.Empty);
                                                                            }
                                                                            Chunk.Matriz_Bytes_Luz_Bloques[Índice_X, Sección_Y_16 + Índice_Y, Índice_Z] = (byte)((Matriz_Bytes_BlockLight[Índice] >> 4) & 0xF);
                                                                            Chunk.Matriz_Bytes_Luz_Bloques[Índice_X + 1, Sección_Y_16 + Índice_Y, Índice_Z] = (byte)(Matriz_Bytes_BlockLight[Índice] & 0xF);
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            Matriz_Bytes_BlockLight = null;
                                                        }
                                                    }
                                                }
                                                else // MC >= 1.13
                                                {
                                                    Región.Minecraft_1_13 = true;
                                                    //Chunk.Matriz_Bytes_IDs = Chunks.Matriz_Aire.Clone() as int[,,];
                                                    string Texto_Estado = Nodo_Level["Status"] as TagNodeString;
                                                    Chunk.Status = Texto_Estado;
                                                    if (!string.IsNullOrEmpty(Texto_Estado) && string.Compare(Texto_Estado, "empty", true) != 0) // El chunk no está vacío
                                                    {
                                                        if (Nodo_Level.ContainsKey("LightPopulated"))
                                                        {
                                                            byte LightPopulated = Nodo_Level["LightPopulated"] as TagNodeByte;
                                                            Chunk.LightPopulated = LightPopulated;
                                                        }
                                                        if (Nodo_Level.ContainsKey("TerrainPopulated"))
                                                        {
                                                            byte TerrainPopulated = Nodo_Level["TerrainPopulated"] as TagNodeByte;
                                                            Chunk.TerrainPopulated = TerrainPopulated;
                                                        }
                                                        if (Cargar_Biomas && Nodo_Level.ContainsKey("Biomes"))
                                                        {
                                                            TagNodeIntArray Nodo_Biomas = Nodo_Level["Biomes"] as TagNodeIntArray;
                                                            //if (Nodo_Biomas.Matriz_Bytes != null && Nodo_Biomas.Matriz_Bytes.Length >= 256)
                                                            if (Nodo_Biomas != null && Nodo_Biomas.Length >= 256)
                                                            {
                                                                if (Nodo_Biomas.Length < 1024) // Pre 1.16.
                                                                {
                                                                    int[] Matriz_Bytes_Biomas = Nodo_Biomas;
                                                                    Chunk.Matriz_Bytes_Biomas = new short[16, 16];
                                                                    for (int Índice_Z = 0, Índice = 0; Índice_Z < 16; Índice_Z++)
                                                                    {
                                                                        for (int Índice_X = 0; Índice_X < 16; Índice_X++, Índice++)
                                                                        {
                                                                            if (Pendiente_Subproceso_Abortar)
                                                                            {
                                                                                Pendiente_Subproceso_Abortar = false;
                                                                                Archivo_Región.Close();
                                                                                Archivo_Región.Dispose();
                                                                                Archivo_Región = null;
                                                                                return new Regiones(Point.Empty);
                                                                            }
                                                                            Chunk.Matriz_Bytes_Biomas[Índice_X, Índice_Z] = (short)Matriz_Bytes_Biomas[Índice];
                                                                        }
                                                                    }
                                                                    Matriz_Bytes_Biomas = null;
                                                                }
                                                                else // New Minecraft 1.16... 3D biomes?
                                                                {
                                                                    //int[] Matriz_Bytes_Biomas = Nodo_Biomas;
                                                                    Chunk.Matriz_Bytes_Biomas = new short[16, 16];
                                                                    int Índice = 0;
                                                                    for (int Índice_Y = 0; Índice_Y < 16; Índice_Y++)
                                                                    {
                                                                        for (int Índice_Z = 0; Índice_Z < 16; Índice_Z++)
                                                                        {
                                                                            for (int Índice_X = 0; Índice_X < 16; Índice_X++)
                                                                            {
                                                                                if (Pendiente_Subproceso_Abortar)
                                                                                {
                                                                                    Pendiente_Subproceso_Abortar = false;
                                                                                    Archivo_Región.Close();
                                                                                    Archivo_Región.Dispose();
                                                                                    Archivo_Región = null;
                                                                                    return new Regiones(Point.Empty);
                                                                                }
                                                                                //if (Índice_Y == 0 && Nodo_Biomas.Matriz_Bytes[Índice] > 0)
                                                                                if (Índice < Nodo_Biomas.Length)
                                                                                {
                                                                                    //Chunk.Matriz_Bytes_Biomas[Índice_X, Índice_Z] = (short)Nodo_Biomas.Matriz_Bytes[Índice];
                                                                                    Chunk.Matriz_Bytes_Biomas[Índice_X, Índice_Z] = (short)Nodo_Biomas[Índice];
                                                                                }
                                                                                Índice += 4;
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            Nodo_Biomas = null;

                                                            /*int[] Matriz_Bytes_Biomas = Nodo_Level["Biomes"] as TagNodeIntArray;
                                                            //MessageBox.Show(Matriz_Bytes_Biomas.Length.ToString(), "Bio");
                                                            if (Matriz_Bytes_Biomas != null && Matriz_Bytes_Biomas.Length >= 256)
                                                            {
                                                                if (Matriz_Bytes_Biomas.Length < 1024)
                                                                {
                                                                    Chunk.Matriz_Bytes_Biomas = new short[16, 16];
                                                                    for (int Índice_Z = 0, Índice = 0; Índice_Z < 16; Índice_Z++)
                                                                    {
                                                                        for (int Índice_X = 0; Índice_X < 16; Índice_X++, Índice++)
                                                                        {
                                                                            if (Pendiente_Subproceso_Abortar)
                                                                            {
                                                                                Pendiente_Subproceso_Abortar = false;
                                                                                Archivo_Región.Close();
                                                                                Archivo_Región.Dispose();
                                                                                Archivo_Región = null;
                                                                                return new Regiones(Point.Empty);
                                                                            }
                                                                            Chunk.Matriz_Bytes_Biomas[Índice_X, Índice_Z] = (short)Matriz_Bytes_Biomas[Índice];
                                                                        }
                                                                    }
                                                                }
                                                                else // Possibly the latest 1.16 biome format with 1.024 entries per chunk.
                                                                {
                                                                    Chunk.Biomas_Minecraft_1_16 = true;

                                                                    byte[] Matriz_Bytes_Biomas_4096 = Nodo_Level["Biomes"] as TagNodeByteArray;
                                                                    if (Matriz_Bytes_Biomas_4096 != null && Matriz_Bytes_Biomas_4096.Length >= 4096)
                                                                    {
                                                                        MessageBox.Show("4.096!");


                                                                    }


                                                                    Chunk.Matriz_Bytes_Biomas = new short[16, 16];
                                                                    for (int Índice_Z = 0, Índice = 0; Índice_Z < 16; Índice_Z++)
                                                                    {
                                                                        for (int Índice_X = 0; Índice_X < 16; Índice_X++, Índice++)
                                                                        {
                                                                            if (Pendiente_Subproceso_Abortar)
                                                                            {
                                                                                Pendiente_Subproceso_Abortar = false;
                                                                                Archivo_Región.Close();
                                                                                Archivo_Región.Dispose();
                                                                                Archivo_Región = null;
                                                                                return new Regiones(Point.Empty);
                                                                            }
                                                                            Chunk.Matriz_Bytes_Biomas[Índice_X, Índice_Z] = (short)Matriz_Bytes_Biomas[Índice];
                                                                        }
                                                                        Índice += 16 * 3;
                                                                    }
                                                                }
                                                            }*/
                                                        }
                                                        if (Nodo_Level.ContainsKey("Heightmaps"))
                                                        {
                                                            TagNodeCompound Nodo_Heightmaps = Nodo_Level["Heightmaps"] as TagNodeCompound;
                                                            if (Nodo_Heightmaps != null && Nodo_Heightmaps.Keys != null && Nodo_Heightmaps.Keys.Count > 0)
                                                            {
                                                                string Clave_Heightmap_Ocean_Floor = null; // Support several 1.13 snapshots at once.
                                                                if (Nodo_Heightmaps.ContainsKey("OCEAN_FLOOR")) Clave_Heightmap_Ocean_Floor = "OCEAN_FLOOR";
                                                                else if (Nodo_Heightmaps.ContainsKey("LIQUID")) Clave_Heightmap_Ocean_Floor = "LIQUID";
                                                                if (!string.IsNullOrEmpty(Clave_Heightmap_Ocean_Floor) && Chunk.Matriz_Bytes_Heightmap_Ocean_Floor != null)
                                                                {
                                                                    List<bool> Lista_Bits = new List<bool>((Nodo_Heightmaps[Clave_Heightmap_Ocean_Floor] as TagNodeLongArray).Matriz_Bits);
                                                                    if (Lista_Bits != null && Lista_Bits.Count > 0)
                                                                    {
                                                                        int Bits_Bloque = Lista_Bits.Count / 256;
                                                                        if (Bits_Bloque > 0) // Check just in case (for a world height of 256 it needs to be 8).
                                                                        {
                                                                            bool[] Matriz_Bits = new bool[32];
                                                                            int[] Matriz_Valor = new int[1];
                                                                            int Índice_Bit = 0;
                                                                            for (int Índice_Z = 0; Índice_Z < 16; Índice_Z++)
                                                                            {
                                                                                for (int Índice_X = 0; Índice_X < 16; Índice_X++)
                                                                                {
                                                                                    if (Pendiente_Subproceso_Abortar)
                                                                                    {
                                                                                        Pendiente_Subproceso_Abortar = false;
                                                                                        Archivo_Región.Close();
                                                                                        Archivo_Región.Dispose();
                                                                                        Archivo_Región = null;
                                                                                        return new Regiones(Point.Empty);
                                                                                    }
                                                                                    Array.Clear(Matriz_Bits, 0, Matriz_Bits.Length);
                                                                                    Lista_Bits.GetRange(Índice_Bit, Bits_Bloque).CopyTo(Matriz_Bits, 0);
                                                                                    Matriz_Valor[0] = 0;
                                                                                    new BitArray(Matriz_Bits).CopyTo(Matriz_Valor, 0);
                                                                                    Chunk.Matriz_Bytes_Heightmap_Ocean_Floor[Índice_X, Índice_Z] = (short)Matriz_Valor[0];
                                                                                    Índice_Bit += Bits_Bloque;
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                                else Chunk.Matriz_Bytes_Heightmap_Ocean_Floor = null;
                                                                string Clave_Heightmap_Motion_Blocking_No_Leaves = null; // Support several 1.13 snapshots at once.
                                                                if (Nodo_Heightmaps.ContainsKey("MOTION_BLOCKING_NO_LEAVES")) Clave_Heightmap_Motion_Blocking_No_Leaves = "MOTION_BLOCKING_NO_LEAVES";
                                                                else if (Nodo_Heightmaps.ContainsKey("RAIN")) Clave_Heightmap_Motion_Blocking_No_Leaves = "RAIN";
                                                                if (!string.IsNullOrEmpty(Clave_Heightmap_Motion_Blocking_No_Leaves) && Chunk.Matriz_Bytes_Heightmap_Motion_Blocking_No_Leaves != null)
                                                                {
                                                                    List<bool> Lista_Bits = new List<bool>((Nodo_Heightmaps[Clave_Heightmap_Motion_Blocking_No_Leaves] as TagNodeLongArray).Matriz_Bits);
                                                                    if (Lista_Bits != null && Lista_Bits.Count > 0)
                                                                    {
                                                                        int Bits_Bloque = Lista_Bits.Count / 256;
                                                                        if (Bits_Bloque > 0) // Check just in case (for a world height of 256 it needs to be 8).
                                                                        {
                                                                            bool[] Matriz_Bits = new bool[32];
                                                                            int[] Matriz_Valor = new int[1];
                                                                            int Índice_Bit = 0;
                                                                            for (int Índice_Z = 0; Índice_Z < 16; Índice_Z++)
                                                                            {
                                                                                for (int Índice_X = 0; Índice_X < 16; Índice_X++)
                                                                                {
                                                                                    if (Pendiente_Subproceso_Abortar)
                                                                                    {
                                                                                        Pendiente_Subproceso_Abortar = false;
                                                                                        Archivo_Región.Close();
                                                                                        Archivo_Región.Dispose();
                                                                                        Archivo_Región = null;
                                                                                        return new Regiones(Point.Empty);
                                                                                    }
                                                                                    Array.Clear(Matriz_Bits, 0, Matriz_Bits.Length);
                                                                                    Lista_Bits.GetRange(Índice_Bit, Bits_Bloque).CopyTo(Matriz_Bits, 0);
                                                                                    Matriz_Valor[0] = 0;
                                                                                    new BitArray(Matriz_Bits).CopyTo(Matriz_Valor, 0);
                                                                                    Chunk.Matriz_Bytes_Heightmap_Motion_Blocking_No_Leaves[Índice_X, Índice_Z] = (short)Matriz_Valor[0];
                                                                                    Índice_Bit += Bits_Bloque;
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                                else Chunk.Matriz_Bytes_Heightmap_Motion_Blocking_No_Leaves = null;
                                                                string Clave_Heightmap_Motion_Blocking = null; // Support several 1.13 snapshots at once.
                                                                if (Nodo_Heightmaps.ContainsKey("MOTION_BLOCKING")) Clave_Heightmap_Motion_Blocking = "MOTION_BLOCKING";
                                                                else if (Nodo_Heightmaps.ContainsKey("SOLID")) Clave_Heightmap_Motion_Blocking = "SOLID";
                                                                if (!string.IsNullOrEmpty(Clave_Heightmap_Motion_Blocking) && Chunk.Matriz_Bytes_Heightmap_Motion_Blocking != null)
                                                                {
                                                                    List<bool> Lista_Bits = new List<bool>((Nodo_Heightmaps[Clave_Heightmap_Motion_Blocking] as TagNodeLongArray).Matriz_Bits);
                                                                    if (Lista_Bits != null && Lista_Bits.Count > 0)
                                                                    {
                                                                        int Bits_Bloque = Lista_Bits.Count / 256;
                                                                        if (Bits_Bloque > 0) // Check just in case (for a world height of 256 it needs to be 8).
                                                                        {
                                                                            bool[] Matriz_Bits = new bool[32];
                                                                            int[] Matriz_Valor = new int[1];
                                                                            int Índice_Bit = 0;
                                                                            for (int Índice_Z = 0; Índice_Z < 16; Índice_Z++)
                                                                            {
                                                                                for (int Índice_X = 0; Índice_X < 16; Índice_X++)
                                                                                {
                                                                                    if (Pendiente_Subproceso_Abortar)
                                                                                    {
                                                                                        Pendiente_Subproceso_Abortar = false;
                                                                                        Archivo_Región.Close();
                                                                                        Archivo_Región.Dispose();
                                                                                        Archivo_Región = null;
                                                                                        return new Regiones(Point.Empty);
                                                                                    }
                                                                                    Array.Clear(Matriz_Bits, 0, Matriz_Bits.Length);
                                                                                    Lista_Bits.GetRange(Índice_Bit, Bits_Bloque).CopyTo(Matriz_Bits, 0);
                                                                                    Matriz_Valor[0] = 0;
                                                                                    new BitArray(Matriz_Bits).CopyTo(Matriz_Valor, 0);
                                                                                    Chunk.Matriz_Bytes_Heightmap_Motion_Blocking[Índice_X, Índice_Z] = (short)Matriz_Valor[0];
                                                                                    Índice_Bit += Bits_Bloque;
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                                else Chunk.Matriz_Bytes_Heightmap_Motion_Blocking = null;
                                                                string Clave_Heightmap_Light_Blocking = null; // Support several 1.13 snapshots at once.
                                                                if (Nodo_Heightmaps.ContainsKey("LIGHT_BLOCKING")) Clave_Heightmap_Light_Blocking = "LIGHT_BLOCKING";
                                                                else if (Nodo_Heightmaps.ContainsKey("LIGHT")) Clave_Heightmap_Light_Blocking = "LIGHT";
                                                                if (!string.IsNullOrEmpty(Clave_Heightmap_Light_Blocking) && Chunk.Matriz_Bytes_Heightmap_Light_Blocking != null)
                                                                {
                                                                    List<bool> Lista_Bits = new List<bool>((Nodo_Heightmaps[Clave_Heightmap_Light_Blocking] as TagNodeLongArray).Matriz_Bits);
                                                                    if (Lista_Bits != null && Lista_Bits.Count > 0)
                                                                    {
                                                                        int Bits_Bloque = Lista_Bits.Count / 256;
                                                                        if (Bits_Bloque > 0) // Check just in case (for a world height of 256 it needs to be 8).
                                                                        {
                                                                            bool[] Matriz_Bits = new bool[32];
                                                                            int[] Matriz_Valor = new int[1];
                                                                            int Índice_Bit = 0;
                                                                            for (int Índice_Z = 0; Índice_Z < 16; Índice_Z++)
                                                                            {
                                                                                for (int Índice_X = 0; Índice_X < 16; Índice_X++)
                                                                                {
                                                                                    if (Pendiente_Subproceso_Abortar)
                                                                                    {
                                                                                        Pendiente_Subproceso_Abortar = false;
                                                                                        Archivo_Región.Close();
                                                                                        Archivo_Región.Dispose();
                                                                                        Archivo_Región = null;
                                                                                        return new Regiones(Point.Empty);
                                                                                    }
                                                                                    Array.Clear(Matriz_Bits, 0, Matriz_Bits.Length);
                                                                                    Lista_Bits.GetRange(Índice_Bit, Bits_Bloque).CopyTo(Matriz_Bits, 0);
                                                                                    Matriz_Valor[0] = 0;
                                                                                    new BitArray(Matriz_Bits).CopyTo(Matriz_Valor, 0);
                                                                                    Chunk.Matriz_Bytes_Heightmap_Light_Blocking[Índice_X, Índice_Z] = (short)Matriz_Valor[0];
                                                                                    Índice_Bit += Bits_Bloque;
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                                else Chunk.Matriz_Bytes_Heightmap_Light_Blocking = null;
                                                            }
                                                        }
                                                        /*if (Cargar_Mapa_Altura && Nodo_Level.ContainsKey("Heightmaps"))
                                                        {
                                                            int[] Matriz_Bytes_Mapa_Altura = Nodo_Level["Heightmaps"] as TagNodeIntArray;
                                                            if (Matriz_Bytes_Mapa_Altura != null && Matriz_Bytes_Mapa_Altura.Length >= 256)
                                                            {
                                                                Chunk.Matriz_Bytes_Mapa_Altura = new int[16, 16];
                                                                for (int Índice_Z = 0, Índice = 0; Índice_Z < 16; Índice_Z++)
                                                                {
                                                                    for (int Índice_X = 0; Índice_X < 16; Índice_X++, Índice++)
                                                                    {
                                                                        Chunk.Matriz_Bytes_Mapa_Altura[Índice_X, Índice_Z] = Matriz_Bytes_Mapa_Altura[Índice];
                                                                    }
                                                                }
                                                            }
                                                        }*/

                                                        // Cargar las 16 posibles subsecciones del chunk de 16 bloques de alto (16 ^ 3):
                                                        TagNodeList Nodo_Secciones = Nodo_Level["Sections"] as TagNodeList;
                                                        foreach (TagNodeCompound Nodo_Sección in Nodo_Secciones)
                                                        {
                                                            if (Pendiente_Subproceso_Abortar)
                                                            {
                                                                Pendiente_Subproceso_Abortar = false;
                                                                Archivo_Región.Close();
                                                                Archivo_Región.Dispose();
                                                                Archivo_Región = null;
                                                                return new Regiones(Point.Empty);
                                                            }
                                                            TagNodeCompound Árbol_Sección = Nodo_Sección as TagNodeCompound;
                                                            if (Árbol_Sección == null) continue; // Ignorar las seciones vacías
                                                            byte Sección_Y = Árbol_Sección["Y"] as TagNodeByte;
                                                            //if (Sección_Y < 0 || Sección_Y >= 16) MessageBox.Show(Sección_Y.ToString(), "Sección_Y");
                                                            int Sección_Y_16 = Sección_Y * 16;
                                                            if (Sección_Y_16 > Chunk.Y_Máximo) Chunk.Y_Máximo = (short)Sección_Y_16;

                                                            short[] Matriz_Índices_Paleta = null;
                                                            int Índice_Paleta_Aire = -1;
                                                            if (Árbol_Sección.ContainsKey("Palette"))
                                                            {
                                                                TagNodeList Nodo_Paleta = Árbol_Sección["Palette"] as TagNodeList;
                                                                Matriz_Índices_Paleta = new short[Nodo_Paleta.Count];
                                                                int Índice_Paleta = 0;
                                                                foreach (TagNodeCompound Nodo_Nombre in Nodo_Paleta)
                                                                {
                                                                    if (Pendiente_Subproceso_Abortar)
                                                                    {
                                                                        Pendiente_Subproceso_Abortar = false;
                                                                        Archivo_Región.Close();
                                                                        Archivo_Región.Dispose();
                                                                        Archivo_Región = null;
                                                                        return new Regiones(Point.Empty);
                                                                    }
                                                                    if (Nodo_Nombre == null)
                                                                    {
                                                                        Índice_Paleta++;
                                                                        continue; // Ignorar las secciones vacías
                                                                    }
                                                                    else if (Nodo_Nombre.ContainsKey("Name"))
                                                                    {
                                                                        string Nombre = Nodo_Nombre["Name"].ToTagString();
                                                                        if (!string.IsNullOrEmpty(Nombre) && Diccionario_Bloques_Nombres_Índices.ContainsKey(Nombre))
                                                                        {
                                                                            Matriz_Índices_Paleta[Índice_Paleta] = Diccionario_Bloques_Nombres_Índices[Nombre];
                                                                            if (string.Compare(Nombre, "minecraft:air", true) == 0) Índice_Paleta_Aire = Índice_Paleta;
                                                                        }
                                                                        //else MessageBox.Show("=" + Nombre, "null...");
                                                                    }
                                                                    Índice_Paleta++;
                                                                }
                                                            }
                                                            int Bits_Bloque = 0; //Lista_Bits.Count / 4096; // Bits por bloque
                                                            if (Cargar_IDs && Árbol_Sección.ContainsKey("BlockStates"))
                                                            {
                                                                List<bool> Lista_Bits = new List<bool>((Árbol_Sección["BlockStates"] as TagNodeLongArray).Matriz_Bits);
                                                                if (Lista_Bits != null && Lista_Bits.Count > 0)
                                                                {
                                                                    /*for (int Índice = 0; Índice < Matriz_Potencias_Bits.Length; Índice++)
                                                                    {
                                                                        if (Matriz_Potencias_Bits[Índice] >= Matriz_Índices_Paleta.Length)
                                                                        {
                                                                            //if (Bits_Bloque != Índice + 1) MessageBox.Show(Bits_Bloque.ToString() + " to " + (Índice + 1).ToString() + " and " + Matriz_Índices_Paleta.Length.ToString() + " blocks (" + Lista_Bits.Count.ToString() + ").", "Bits_Bloque");
                                                                            Bits_Bloque = Índice + 1;
                                                                            break;
                                                                        }
                                                                    }
                                                                    //if (Bits_Bloque < Bits_Mínimo) Bits_Mínimo = Bits_Bloque;
                                                                    //if (Bits_Bloque > Bits_Máximo) Bits_Máximo = Bits_Bloque;
                                                                    if ((Lista_Bits.Count / 64) < Bits_Mínimo) Bits_Mínimo = (Lista_Bits.Count / 64);
                                                                    if ((Lista_Bits.Count / 64) > Bits_Máximo) Bits_Máximo = (Lista_Bits.Count / 64);
                                                                    if (Bits_Bloque < 4) Bits_Bloque = 4;*/

                                                                    /*if (Lista_Bits.Count <= 64 * 64) Bits_Bloque = 1;
                                                                    else if (Lista_Bits.Count <= 128 * 64) Bits_Bloque = 2;
                                                                    else if (Lista_Bits.Count <= 192 * 64) Bits_Bloque = 3;
                                                                    else */

                                                                    Bits_Bloque = Math.Max(Lista_Bits.Count / 4096, 4); // Minimum of 4 bits.
                                                                      
                                                                    // Thanks to PM_ME_YOUR_HOOMAN for this code (although I finally used the above one).
                                                                    //Bits_Bloque = Lista_Bits.Count / (64 * 64) + ((Lista_Bits.Count % (64 * 64) == 0) ? 1 : 0);

                                                                    /*if (Lista_Bits.Count <= 256 * 64) Bits_Bloque = 4; // Mínimo aparente
                                                                    else if (Lista_Bits.Count <= 320 * 64) Bits_Bloque = 5;
                                                                    else if (Lista_Bits.Count <= 384 * 64) Bits_Bloque = 6;
                                                                    else if (Lista_Bits.Count <= 448 * 64) Bits_Bloque = 7;
                                                                    else if (Lista_Bits.Count <= 512 * 64) Bits_Bloque = 8;
                                                                    else if (Lista_Bits.Count <= 576 * 64) Bits_Bloque = 9;
                                                                    else if (Lista_Bits.Count <= 640 * 64) Bits_Bloque = 10;
                                                                    else if (Lista_Bits.Count <= 704 * 64) Bits_Bloque = 11;
                                                                    else if (Lista_Bits.Count <= 768 * 64) Bits_Bloque = 12;*/

                                                                    //if (Bits_Bloque == 5) Bits_Bloque = 4;
                                                                    //if (Bits_Bloque == 7) Bits_Bloque = 6;
                                                                    //if (Índice_Máscara <= 2)
                                                                    /*if (Matriz_Índices_Paleta.Length <= 2)
                                                                    {
                                                                        MessageBox.Show(Lista_Bits.Count.ToString() + " bits of " + Matriz_Índices_Paleta.Length.ToString() + ".", "<= 2 bits");
                                                                    }*/
                                                                    /*if (Lista_Bits.Count >= Matriz_Índices_Paleta.Length * 2)
                                                                    {
                                                                        MessageBox.Show(Lista_Bits.Count.ToString() + " bits of " + Matriz_Índices_Paleta.Length.ToString() + ".", "¿Hay demasiados bits?...");
                                                                    }*/
                                                                    if (Matriz_Índices_Paleta.Length > Matriz_Máscaras_Bits[Bits_Bloque - 1] + 1)
                                                                    {
                                                                        //MessageBox.Show("¿La paleta es demasiado grande?...");
                                                                    }
                                                                    //if (Índice_Paleta_Aire > -1) Chunk.Rellenar_Aire(Índice_Paleta_Aire);
                                                                    bool[] Matriz_Bits = new bool[32];
                                                                    int[] Matriz_Valor = new int[1];
                                                                    //int Índice = 0;
                                                                    int Índice_Bit = 0;
                                                                    for (int Índice_Y = 0; Índice_Y < 16; Índice_Y++)
                                                                    {
                                                                        for (int Índice_Z = 0; Índice_Z < 16; Índice_Z++)
                                                                        {
                                                                            for (int Índice_X = 0; Índice_X < 16; Índice_X++)
                                                                            {
                                                                                if (Pendiente_Subproceso_Abortar)
                                                                                {
                                                                                    Pendiente_Subproceso_Abortar = false;
                                                                                    Archivo_Región.Close();
                                                                                    Archivo_Región.Dispose();
                                                                                    Archivo_Región = null;
                                                                                    return new Regiones(Point.Empty);
                                                                                }
                                                                                Array.Clear(Matriz_Bits, 0, Matriz_Bits.Length);
                                                                                //List<bool> Lista_Bits_Máscara = Lista_Bits.GetRange(Índice_Bit, Bits_Bloque);
                                                                                //Lista_Bits_Máscara.Reverse();
                                                                                Lista_Bits.GetRange(Índice_Bit, Bits_Bloque).CopyTo(Matriz_Bits, 0); // 32 - Índice_Máscara);
                                                                                                                                                     //Lista_Bits_Máscara.CopyTo(Matriz_Bits, 0); // 32 - Índice_Máscara);
                                                                                Matriz_Valor[0] = 0;
                                                                                new BitArray(Matriz_Bits).CopyTo(Matriz_Valor, 0);
                                                                                //Matriz_Valor[0] = Program.Rand.Next(0, Matriz_Índices_Paleta.Length);
                                                                                if (Matriz_Valor[0] < 0 || Matriz_Valor[0] >= Matriz_Índices_Paleta.Length)
                                                                                {
                                                                                    //Matriz_Valor[0] = Matriz_Índices_Paleta.Length - 1;
                                                                                    //MessageBox.Show((Matriz_Valor[0] + 1).ToString() + " of " + Matriz_Índices_Paleta.Length.ToString() + " block(s)", "Palette index out of bounds");
                                                                                }
                                                                                /*if (Región_X == 0 && Región_Z == 0 && Chunk_X == 0 && Chunk_Z == 0 && Sección_Y_16 == 224 && Índice_Y == 15)
                                                                                {
                                                                                    string Texto_Bloques = null;
                                                                                    foreach (int ID in Matriz_Índices_Paleta)
                                                                                    {
                                                                                        Texto_Bloques += Diccionario_Bloques_Índices_Nombres[ID] + "\r\n";
                                                                                    }
                                                                                    //MessageBox.Show(Texto_Bloques, "Paleta");
                                                                                    if (Índice_X == 12 && Índice_Z == 6) MessageBox.Show(Matriz_Valor[0].ToString() + "\r\n" + Diccionario_Bloques_Índices_Nombres[Matriz_Índices_Paleta[Matriz_Valor[0]]], "ID 0, 0");
                                                                                    //if (Matriz_Valor[0] != 0) MessageBox.Show(Matriz_Valor[0].ToString(), Matriz_Máscaras_Bits[Índice_Máscara - 1].ToString());
                                                                                }*/
                                                                                /*if (Sección_Y_16 + Índice_Y == 1) */
                                                                                Chunk.Matriz_Bytes_IDs[Índice_X, Sección_Y_16 + Índice_Y, Índice_Z] = Matriz_Índices_Paleta[Matriz_Valor[0]]; //(byte)((Matriz_Bytes_Data[Índice] >> 4) & 0xF);
                                                                                                                                                                                              //else Matriz_Índices_Bloques_XYZ[Índice_X, Sección_Y_16 + Índice_Y, Índice_Z] = Minecraft.Índice_Aire;
                                                                                                                                                                                              //Chunk.Matriz_Bytes_Data[Índice_X, Sección_Y_16 + Índice_Y, Índice_Z] = (byte)((Matriz_Bytes_Data[Índice] >> 4) & 0xF);
                                                                                                                                                                                              //Chunk.Matriz_Bytes_Data[Índice_X + 1, Sección_Y_16 + Índice_Y, Índice_Z] = (byte)(Matriz_Bytes_Data[Índice] & 0xF);
                                                                                                                                                                                              //Índice++;
                                                                                Índice_Bit += Bits_Bloque;
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            //if (Bits_Bloque >= 6) Chunk = Chunks.Nuevo(Cargar_ID, Cargar_Data, Cargar_Luz_Bloques, Cargar_Luz_Cielo, Cargar_Biomas, Cargar_Mapa_Altura);
                                                            /*if (Cargar_Luz_Cielo && Árbol_Sección.ContainsKey("SkyLight"))
                                                            {
                                                                byte[] Matriz_Bytes_Luz_Cielo = Árbol_Sección["SkyLight"] as TagNodeByteArray;
                                                                if (Matriz_Bytes_Luz_Cielo != null && Matriz_Bytes_Luz_Cielo.Length >= 256)
                                                                {
                                                                    for (int Índice_Y = 0, Índice = 0; Índice_Y < 16; Índice_Y++)
                                                                    {
                                                                        for (int Índice_Z = 0; Índice_Z < 16; Índice_Z++)
                                                                        {
                                                                            for (int Índice_X = 0; Índice_X < 16; Índice_X += 2, Índice++)
                                                                            {
                                                                                Chunk.Matriz_Bytes_Luz_Cielo[Índice_X, Sección_Y_16 + Índice_Y, Índice_Z] = (byte)((Matriz_Bytes_Luz_Cielo[Índice] >> 4) & 0xF);
                                                                                Chunk.Matriz_Bytes_Luz_Cielo[Índice_X + 1, Sección_Y_16 + Índice_Y, Índice_Z] = (byte)(Matriz_Bytes_Luz_Cielo[Índice] & 0xF);
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            if (Cargar_Luz_Bloques && Árbol_Sección.ContainsKey("BlockLight"))
                                                            {
                                                                byte[] Matriz_Bytes_BlockLight = Árbol_Sección["BlockLight"] as TagNodeByteArray;
                                                                if (Matriz_Bytes_BlockLight != null && Matriz_Bytes_BlockLight.Length >= 256)
                                                                {
                                                                    for (int Índice_Y = 0, Índice = 0; Índice_Y < 16; Índice_Y++)
                                                                    {
                                                                        for (int Índice_Z = 0; Índice_Z < 16; Índice_Z++)
                                                                        {
                                                                            for (int Índice_X = 0; Índice_X < 16; Índice_X += 2, Índice++)
                                                                            {
                                                                                Chunk.Matriz_Bytes_Luz_Bloques[Índice_X, Sección_Y_16 + Índice_Y, Índice_Z] = (byte)((Matriz_Bytes_BlockLight[Índice] >> 4) & 0xF);
                                                                                Chunk.Matriz_Bytes_Luz_Bloques[Índice_X + 1, Sección_Y_16 + Índice_Y, Índice_Z] = (byte)(Matriz_Bytes_BlockLight[Índice] & 0xF);
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }*/
                                                        }

                                                        // Look for the possible structures that might start on this chunk.
                                                        // But do it after loading the existing blocks to check them even more.
                                                        if (Nodo_Level.ContainsKey("Structures"))
                                                        {
                                                            TagNodeCompound Nodo_Estructuras = Nodo_Level["Structures"] as TagNodeCompound;
                                                            if (Nodo_Estructuras != null && Nodo_Estructuras.Keys != null && Nodo_Estructuras.Keys.Count > 0)
                                                            {
                                                                if (Nodo_Estructuras.ContainsKey("Starts"))
                                                                {
                                                                    TagNodeCompound Nodo_Inicios = Nodo_Estructuras["Starts"] as TagNodeCompound;
                                                                    if (Nodo_Inicios != null && Nodo_Inicios.Keys != null && Nodo_Inicios.Keys.Count > 0)
                                                                    {
                                                                        // On which Minecraft version did the structures were changed as opposed to Minecraft 1.13.2?
                                                                        if (Versión_Data < 1952) // Minecraft 1.13.2-. This might not work with middle 1.14- snapshots!
                                                                        {
                                                                            foreach (string Clave in Nodo_Inicios.Keys)
                                                                            {
                                                                                /*if (!Diccionario_Estructuras_Únicas.ContainsKey(Clave))
                                                                                {
                                                                                    Diccionario_Estructuras_Únicas.Add(Clave, null);
                                                                                }*/

                                                                                // Try to get the exact structure X and Z coordinates.
                                                                                int X = 0, Y = 0, Z = 0;
                                                                                TagNodeCompound Nodo_Estructura = Nodo_Inicios[Clave] as TagNodeCompound;
                                                                                if (Nodo_Estructura != null && Nodo_Estructura.Keys != null && Nodo_Estructura.Keys.Count > 0 && Nodo_Estructura.ContainsKey("BB"))
                                                                                {
                                                                                    TagNodeIntArray Nodo_Dimensiones = Nodo_Estructura["BB"] as TagNodeIntArray;
                                                                                    if (Nodo_Dimensiones != null && Nodo_Dimensiones.Length >= 3)
                                                                                    {
                                                                                        /*if (Rectángulo_Chunk.Contains(Nodo_Dimensiones[0], Nodo_Dimensiones[2]))
                                                                                        {
                                                                                            X = Math.Abs(Nodo_Dimensiones[0]) % 16; // Convert to chunk relative coordinates.
                                                                                            Y = Nodo_Dimensiones[1];
                                                                                            Z = Math.Abs(Nodo_Dimensiones[2]) % 16; // Convert to chunk relative coordinates.
                                                                                        }
                                                                                        else if (Nodo_Dimensiones.Length >= 6 && Rectángulo_Chunk.Contains(Nodo_Dimensiones[3], Nodo_Dimensiones[5]))
                                                                                        {
                                                                                            X = Math.Abs(Nodo_Dimensiones[3]) % 16; // Convert to chunk relative coordinates.
                                                                                            Y = Nodo_Dimensiones[4];
                                                                                            Z = Math.Abs(Nodo_Dimensiones[5]) % 16; // Convert to chunk relative coordinates.
                                                                                        }
                                                                                        else // The marker might be out of place up to 16 blocks in X and Z coordinates.*/
                                                                                        {
                                                                                            X = Math.Abs(Nodo_Dimensiones[0]) % 16; // Convert to chunk relative coordinates.
                                                                                            Y = Nodo_Dimensiones[1];
                                                                                            Z = Math.Abs(Nodo_Dimensiones[2]) % 16; // Convert to chunk relative coordinates.
                                                                                                                                    // Readapt the position to get as close as possible to the structure.
                                                                                            if (Nodo_Dimensiones[0] < Rectángulo_Chunk.X) X = 0; // Avoid out of bounds in this chunk.
                                                                                            else if (Nodo_Dimensiones[0] > Rectángulo_Chunk.Width) X = 15;
                                                                                            if (Nodo_Dimensiones[2] < Rectángulo_Chunk.Y) Z = 0;
                                                                                            else if (Nodo_Dimensiones[2] > Rectángulo_Chunk.Height) Z = 15;
                                                                                        }
                                                                                    }
                                                                                }
                                                                                Chunk.Lista_Estructuras_Posiciones.Add(new Substrate.SpawnPoint(X, Y, Z));
                                                                                // Find the type of structure included in this chunk.
                                                                                if (string.Compare(Clave, "Buried_Treasure", true) == 0)
                                                                                {
                                                                                    bool Tesoro = false; // The Y value seems wrong, so look manually for any chest.
                                                                                    if (Chunk.Matriz_Bytes_IDs != null && Chunk.Matriz_Bytes_IDs.Length >= 65536)
                                                                                    {
                                                                                        for (int Índice_Y = 63; Índice_Y >= 16; Índice_Y--)
                                                                                        {
                                                                                            if (Chunk.Matriz_Bytes_IDs[X, Índice_Y, Z] == Minecraft.Bloques.Diccionario_Nombre_Índice["minecraft:chest"])
                                                                                            {
                                                                                                Tesoro = true;
                                                                                                // Note: sometimes the chest gets moved a few blocks around, so it might be tricky to locate it.
                                                                                                break;
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    // Change the marker based on if the treasure chest still exists or not.
                                                                                    Chunk.Lista_Estructuras.Add(Tesoro ? Estructuras.Tesoro : Estructuras.Tesoro_Vacío);
                                                                                }
                                                                                else if (string.Compare(Clave, "Desert_Pyramid", true) == 0)
                                                                                {
                                                                                    Chunk.Lista_Estructuras.Add(Estructuras.Pirámide);
                                                                                }
                                                                                else if (string.Compare(Clave, "EndCity", true) == 0)
                                                                                {
                                                                                    bool Elytra = false; // Try to find if this end city has a ship with elytra.
                                                                                    if (Nodo_Estructura != null && Nodo_Estructura.Keys != null && Nodo_Estructura.Keys.Count > 0 && Nodo_Estructura.ContainsKey("Children"))
                                                                                    {
                                                                                        TagNodeList Nodo_Hijos = Nodo_Estructura["Children"] as TagNodeList;
                                                                                        if (Nodo_Hijos != null && Nodo_Hijos.Count > 0 && Nodo_Hijos.ValueType == TagType.TAG_COMPOUND)
                                                                                        {
                                                                                            for (int Índice_Sección = 0; Índice_Sección < Nodo_Hijos.Count; Índice_Sección++)
                                                                                            {
                                                                                                TagNodeCompound Nodo_Sección = Nodo_Hijos[Índice_Sección] as TagNodeCompound;
                                                                                                if (Nodo_Sección != null && Nodo_Sección.Keys != null && Nodo_Sección.Keys.Count > 0 && Nodo_Sección.ContainsKey("Template"))
                                                                                                {
                                                                                                    string Plantilla = Nodo_Sección["Template"].ToTagString();
                                                                                                    if (!string.IsNullOrEmpty(Plantilla) &&
                                                                                                        string.Compare(Plantilla, "minecraft:end_city/ship", true) == 0)
                                                                                                    {
                                                                                                        Elytra = true; // It's an end city with a ship with elytra.
                                                                                                        break;
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    Chunk.Lista_Estructuras.Add(!Elytra ? Estructuras.Ciudad : Estructuras.Ciudad_Elytra);
                                                                                }
                                                                                else if (string.Compare(Clave, "Fortress", true) == 0)
                                                                                {
                                                                                    Chunk.Lista_Estructuras.Add(Estructuras.Fortaleza);
                                                                                }
                                                                                else if (string.Compare(Clave, "Igloo", true) == 0)
                                                                                {
                                                                                    bool Sótano = false; // Try to find if this igloo has a secret basement.
                                                                                    if (Nodo_Estructura != null && Nodo_Estructura.Keys != null && Nodo_Estructura.Keys.Count > 0 && Nodo_Estructura.ContainsKey("Children"))
                                                                                    {
                                                                                        TagNodeList Nodo_Hijos = Nodo_Estructura["Children"] as TagNodeList;
                                                                                        if (Nodo_Hijos != null && Nodo_Hijos.Count > 0 && Nodo_Hijos.ValueType == TagType.TAG_COMPOUND)
                                                                                        {
                                                                                            for (int Índice_Sección = 0; Índice_Sección < Nodo_Hijos.Count; Índice_Sección++)
                                                                                            {
                                                                                                TagNodeCompound Nodo_Sección = Nodo_Hijos[Índice_Sección] as TagNodeCompound;
                                                                                                if (Nodo_Sección != null && Nodo_Sección.Keys != null && Nodo_Sección.Keys.Count > 0 && Nodo_Sección.ContainsKey("Template"))
                                                                                                {
                                                                                                    string Plantilla = Nodo_Sección["Template"].ToTagString();
                                                                                                    if (!string.IsNullOrEmpty(Plantilla) &&
                                                                                                        string.Compare(Plantilla, "minecraft:igloo/bottom", true) == 0)
                                                                                                    {
                                                                                                        Sótano = true; // It's an igloo with a secret basement.
                                                                                                        break;
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    Chunk.Lista_Estructuras.Add(!Sótano ? Estructuras.Iglú : Estructuras.Iglú_Sótano);
                                                                                }
                                                                                else if (string.Compare(Clave, "Jungle_Pyramid", true) == 0)
                                                                                {
                                                                                    Chunk.Lista_Estructuras.Add(Estructuras.Templo);
                                                                                }
                                                                                else if (string.Compare(Clave, "Mansion", true) == 0)
                                                                                {
                                                                                    Chunk.Lista_Estructuras.Add(Estructuras.Mansión);
                                                                                }
                                                                                else if (string.Compare(Clave, "Mineshaft", true) == 0)
                                                                                {
                                                                                    Chunk.Lista_Estructuras.Add(Estructuras.Mina);
                                                                                }
                                                                                else if (string.Compare(Clave, "Monument", true) == 0)
                                                                                {
                                                                                    Chunk.Lista_Estructuras.Add(Estructuras.Monumento);
                                                                                }
                                                                                else if (string.Compare(Clave, "Ocean_Ruin", true) == 0)
                                                                                {
                                                                                    bool Terracotta = false; // Try to find if this ruin has purple terracotta in it.
                                                                                    if (Nodo_Estructura != null && Nodo_Estructura.Keys != null && Nodo_Estructura.Keys.Count > 0 && Nodo_Estructura.ContainsKey("Children"))
                                                                                    {
                                                                                        TagNodeList Nodo_Hijos = Nodo_Estructura["Children"] as TagNodeList;
                                                                                        if (Nodo_Hijos != null && Nodo_Hijos.Count > 0 && Nodo_Hijos.ValueType == TagType.TAG_COMPOUND)
                                                                                        {
                                                                                            for (int Índice_Sección = 0; Índice_Sección < Nodo_Hijos.Count; Índice_Sección++)
                                                                                            {
                                                                                                TagNodeCompound Nodo_Sección = Nodo_Hijos[Índice_Sección] as TagNodeCompound;
                                                                                                if (Nodo_Sección != null && Nodo_Sección.Keys != null && Nodo_Sección.Keys.Count > 0 && Nodo_Sección.ContainsKey("Template"))
                                                                                                {
                                                                                                    string Plantilla = Nodo_Sección["Template"].ToTagString();
                                                                                                    if (!string.IsNullOrEmpty(Plantilla) &&
                                                                                                        (string.Compare(Plantilla, "minecraft:underwater_ruin/big_brick_2", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:underwater_ruin/big_cracked_2", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:underwater_ruin/big_mossy_2", true) == 0))
                                                                                                    {
                                                                                                        Terracotta = true; // It should have purple terracotta.
                                                                                                        break;
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    Chunk.Lista_Estructuras.Add(!Terracotta ? Estructuras.Ruinas : Estructuras.Ruinas_Terracotta);
                                                                                }
                                                                                else if (string.Compare(Clave, "Pillager_Outpost", true) == 0)
                                                                                {
                                                                                    Chunk.Lista_Estructuras.Add(Estructuras.Puesto_Saqueadores);
                                                                                }
                                                                                else if (string.Compare(Clave, "Shipwreck", true) == 0)
                                                                                {
                                                                                    bool Mapa = false; // Try to find if this ship has a treasure map in a chest.
                                                                                    bool Tesoro = false; // Try to find if this ship has a treasure chest.
                                                                                    if (Nodo_Estructura != null && Nodo_Estructura.Keys != null && Nodo_Estructura.Keys.Count > 0 && Nodo_Estructura.ContainsKey("Children"))
                                                                                    {
                                                                                        TagNodeList Nodo_Hijos = Nodo_Estructura["Children"] as TagNodeList;
                                                                                        if (Nodo_Hijos != null && Nodo_Hijos.Count > 0 && Nodo_Hijos.ValueType == TagType.TAG_COMPOUND)
                                                                                        {
                                                                                            for (int Índice_Sección = 0; Índice_Sección < Nodo_Hijos.Count; Índice_Sección++)
                                                                                            {
                                                                                                TagNodeCompound Nodo_Sección = Nodo_Hijos[Índice_Sección] as TagNodeCompound;
                                                                                                if (Nodo_Sección != null && Nodo_Sección.Keys != null && Nodo_Sección.Keys.Count > 0 && Nodo_Sección.ContainsKey("Template"))
                                                                                                {
                                                                                                    string Plantilla = Nodo_Sección["Template"].ToTagString();
                                                                                                    if (!string.IsNullOrEmpty(Plantilla) &&
                                                                                                        (string.Compare(Plantilla, "minecraft:shipwreck/rightsideup_backhalf", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/rightsideup_backhalf_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/rightsideup_full", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/rightsideup_full_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/sideways_backhalf", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/sideways_backhalf_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/sideways_full", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/sideways_full_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/upsidedown_backhalf", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/upsidedown_backhalf_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/upsidedown_fronthalf", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/upsidedown_fronthalf_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/upsidedown_full", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/upsidedown_full_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/with_mast", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/with_mast_degraded", true) == 0))
                                                                                                    {
                                                                                                        Mapa = true; // It should have a treasure map in a chest.
                                                                                                                     //break;
                                                                                                    }
                                                                                                    else if (string.Compare(Plantilla, "minecraft:shipwreck/rightsideup_backhalf", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/rightsideup_backhalf_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/rightsideup_full", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/rightsideup_full_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/sideways_backhalf", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/sideways_backhalf_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/sideways_full", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/sideways_full_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/upsidedown_backhalf", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/upsidedown_backhalf_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/upsidedown_full", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/upsidedown_full_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/with_mast", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/with_mast_degraded", true) == 0)
                                                                                                    {
                                                                                                        Tesoro = true; // It should have a treasure chest.
                                                                                                                       //break;
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    Chunk.Lista_Estructuras.Add(Mapa ? Estructuras.Barco_Mapa : Tesoro ? Estructuras.Barco_Tesoro : Estructuras.Barco);
                                                                                }
                                                                                else if (string.Compare(Clave, "Stronghold", true) == 0)
                                                                                {
                                                                                    Chunk.Lista_Estructuras.Add(Estructuras.Fin);
                                                                                }
                                                                                else if (string.Compare(Clave, "Swamp_Hut", true) == 0)
                                                                                {
                                                                                    Chunk.Lista_Estructuras.Add(Estructuras.Cabaña);
                                                                                }
                                                                                else if (string.Compare(Clave, "Village", true) == 0)
                                                                                {
                                                                                    Chunk.Lista_Estructuras.Add(Estructuras.Aldea);
                                                                                }
                                                                                else // Add partial support for future structures.
                                                                                {
                                                                                    Chunk.Lista_Estructuras.Add(Estructuras.Desconocida);
                                                                                }
                                                                            }
                                                                        }
                                                                        /*else // Minecraft 1.14+. Could this code be reunified for 1.13.2- and 1.14+?
                                                                        {
                                                                            foreach (string Clave in Nodo_Inicios.Keys)
                                                                            {
                                                                                // Try to get the exact structure X and Z coordinates.
                                                                                int X = 0, Y = 0, Z = 0;
                                                                                TagNodeCompound Nodo_Estructura = Nodo_Inicios[Clave] as TagNodeCompound;
                                                                                if (Nodo_Estructura != null && Nodo_Estructura.Keys != null && Nodo_Estructura.Keys.Count > 0 && Nodo_Estructura.ContainsKey("BB"))
                                                                                {
                                                                                    TagNodeIntArray Nodo_Dimensiones = Nodo_Estructura["BB"] as TagNodeIntArray;
                                                                                    if (Nodo_Dimensiones != null && Nodo_Dimensiones.Length >= 3)
                                                                                    {
                                                                                        // The marker might be out of place up to 16 blocks in X and Z coordinates.
                                                                                        {
                                                                                            X = Math.Abs(Nodo_Dimensiones[0]) % 16; // Convert to chunk relative coordinates.
                                                                                            Y = Nodo_Dimensiones[1];
                                                                                            Z = Math.Abs(Nodo_Dimensiones[2]) % 16; // Convert to chunk relative coordinates.
                                                                                                                                    // Readapt the position to get as close as possible to the structure.
                                                                                            if (Nodo_Dimensiones[0] < Rectángulo_Chunk.X) X = 0; // Avoid out of bounds in this chunk.
                                                                                            else if (Nodo_Dimensiones[0] > Rectángulo_Chunk.Width) X = 15;
                                                                                            if (Nodo_Dimensiones[2] < Rectángulo_Chunk.Y) Z = 0;
                                                                                            else if (Nodo_Dimensiones[2] > Rectángulo_Chunk.Height) Z = 15;
                                                                                        }
                                                                                    }
                                                                                }
                                                                                Chunk.Lista_Estructuras_Posiciones.Add(new Substrate.SpawnPoint(X, Y, Z));
                                                                                // Find the type of structure included in this chunk.
                                                                                if (string.Compare(Clave, "Buried_Treasure", true) == 0)
                                                                                {
                                                                                    bool Estructura_Válida = false;
                                                                                    try
                                                                                    {
                                                                                        if (Nodo_Estructura.ContainsKey())
                                                                                        TagNodeString Nodo_Hijos = Nodo_Estructura["Children"] as TagNodeList;
                                                                                    }
                                                                                    catch { Estructura_Válida = false; }

                                                                                    bool Tesoro = false; // The Y value seems wrong, so look manually for any chest.
                                                                                    if (Chunk.Matriz_Bytes_IDs != null && Chunk.Matriz_Bytes_IDs.Length >= 65536)
                                                                                    {
                                                                                        for (int Índice_Y = 63; Índice_Y >= 16; Índice_Y--)
                                                                                        {
                                                                                            if (Chunk.Matriz_Bytes_IDs[X, Índice_Y, Z] == Minecraft.Bloques.Diccionario_Nombre_Índice["minecraft:chest"])
                                                                                            {
                                                                                                Tesoro = true;
                                                                                                // Note: sometimes the chest gets moved a few blocks around, so it might be tricky to locate it.
                                                                                                break;
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    // Change the marker based on if the treasure chest still exists or not.
                                                                                    Chunk.Lista_Estructuras.Add(Tesoro ? Estructuras.Tesoro : Estructuras.Tesoro_Vacío);
                                                                                }
                                                                                else if (string.Compare(Clave, "Desert_Pyramid", true) == 0)
                                                                                {
                                                                                    Chunk.Lista_Estructuras.Add(Estructuras.Pirámide);
                                                                                }
                                                                                else if (string.Compare(Clave, "EndCity", true) == 0)
                                                                                {
                                                                                    bool Elytra = false; // Try to find if this end city has a ship with elytra.
                                                                                    if (Nodo_Estructura != null && Nodo_Estructura.Keys != null && Nodo_Estructura.Keys.Count > 0 && Nodo_Estructura.ContainsKey("Children"))
                                                                                    {
                                                                                        TagNodeList Nodo_Hijos = Nodo_Estructura["Children"] as TagNodeList;
                                                                                        if (Nodo_Hijos != null && Nodo_Hijos.Count > 0 && Nodo_Hijos.ValueType == TagType.TAG_COMPOUND)
                                                                                        {
                                                                                            for (int Índice_Sección = 0; Índice_Sección < Nodo_Hijos.Count; Índice_Sección++)
                                                                                            {
                                                                                                TagNodeCompound Nodo_Sección = Nodo_Hijos[Índice_Sección] as TagNodeCompound;
                                                                                                if (Nodo_Sección != null && Nodo_Sección.Keys != null && Nodo_Sección.Keys.Count > 0 && Nodo_Sección.ContainsKey("Template"))
                                                                                                {
                                                                                                    string Plantilla = Nodo_Sección["Template"].ToTagString();
                                                                                                    if (!string.IsNullOrEmpty(Plantilla) &&
                                                                                                        string.Compare(Plantilla, "minecraft:end_city/ship", true) == 0)
                                                                                                    {
                                                                                                        Elytra = true; // It's an end city with a ship with elytra.
                                                                                                        break;
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    Chunk.Lista_Estructuras.Add(!Elytra ? Estructuras.Ciudad : Estructuras.Ciudad_Elytra);
                                                                                }
                                                                                else if (string.Compare(Clave, "Fortress", true) == 0)
                                                                                {
                                                                                    Chunk.Lista_Estructuras.Add(Estructuras.Fortaleza);
                                                                                }
                                                                                else if (string.Compare(Clave, "Igloo", true) == 0)
                                                                                {
                                                                                    bool Sótano = false; // Try to find if this igloo has a secret basement.
                                                                                    if (Nodo_Estructura != null && Nodo_Estructura.Keys != null && Nodo_Estructura.Keys.Count > 0 && Nodo_Estructura.ContainsKey("Children"))
                                                                                    {
                                                                                        TagNodeList Nodo_Hijos = Nodo_Estructura["Children"] as TagNodeList;
                                                                                        if (Nodo_Hijos != null && Nodo_Hijos.Count > 0 && Nodo_Hijos.ValueType == TagType.TAG_COMPOUND)
                                                                                        {
                                                                                            for (int Índice_Sección = 0; Índice_Sección < Nodo_Hijos.Count; Índice_Sección++)
                                                                                            {
                                                                                                TagNodeCompound Nodo_Sección = Nodo_Hijos[Índice_Sección] as TagNodeCompound;
                                                                                                if (Nodo_Sección != null && Nodo_Sección.Keys != null && Nodo_Sección.Keys.Count > 0 && Nodo_Sección.ContainsKey("Template"))
                                                                                                {
                                                                                                    string Plantilla = Nodo_Sección["Template"].ToTagString();
                                                                                                    if (!string.IsNullOrEmpty(Plantilla) &&
                                                                                                        string.Compare(Plantilla, "minecraft:igloo/bottom", true) == 0)
                                                                                                    {
                                                                                                        Sótano = true; // It's an igloo with a secret basement.
                                                                                                        break;
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    Chunk.Lista_Estructuras.Add(!Sótano ? Estructuras.Iglú : Estructuras.Iglú_Sótano);
                                                                                }
                                                                                else if (string.Compare(Clave, "Jungle_Pyramid", true) == 0)
                                                                                {
                                                                                    Chunk.Lista_Estructuras.Add(Estructuras.Templo);
                                                                                }
                                                                                else if (string.Compare(Clave, "Mansion", true) == 0)
                                                                                {
                                                                                    Chunk.Lista_Estructuras.Add(Estructuras.Mansión);
                                                                                }
                                                                                else if (string.Compare(Clave, "Mineshaft", true) == 0)
                                                                                {
                                                                                    Chunk.Lista_Estructuras.Add(Estructuras.Mina);
                                                                                }
                                                                                else if (string.Compare(Clave, "Monument", true) == 0)
                                                                                {
                                                                                    Chunk.Lista_Estructuras.Add(Estructuras.Monumento);
                                                                                }
                                                                                else if (string.Compare(Clave, "Ocean_Ruin", true) == 0)
                                                                                {
                                                                                    bool Terracotta = false; // Try to find if this ruin has purple terracotta in it.
                                                                                    if (Nodo_Estructura != null && Nodo_Estructura.Keys != null && Nodo_Estructura.Keys.Count > 0 && Nodo_Estructura.ContainsKey("Children"))
                                                                                    {
                                                                                        TagNodeList Nodo_Hijos = Nodo_Estructura["Children"] as TagNodeList;
                                                                                        if (Nodo_Hijos != null && Nodo_Hijos.Count > 0 && Nodo_Hijos.ValueType == TagType.TAG_COMPOUND)
                                                                                        {
                                                                                            for (int Índice_Sección = 0; Índice_Sección < Nodo_Hijos.Count; Índice_Sección++)
                                                                                            {
                                                                                                TagNodeCompound Nodo_Sección = Nodo_Hijos[Índice_Sección] as TagNodeCompound;
                                                                                                if (Nodo_Sección != null && Nodo_Sección.Keys != null && Nodo_Sección.Keys.Count > 0 && Nodo_Sección.ContainsKey("Template"))
                                                                                                {
                                                                                                    string Plantilla = Nodo_Sección["Template"].ToTagString();
                                                                                                    if (!string.IsNullOrEmpty(Plantilla) &&
                                                                                                        (string.Compare(Plantilla, "minecraft:underwater_ruin/big_brick_2", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:underwater_ruin/big_cracked_2", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:underwater_ruin/big_mossy_2", true) == 0))
                                                                                                    {
                                                                                                        Terracotta = true; // It should have purple terracotta.
                                                                                                        break;
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    Chunk.Lista_Estructuras.Add(!Terracotta ? Estructuras.Ruinas : Estructuras.Ruinas_Terracotta);
                                                                                }
                                                                                else if (string.Compare(Clave, "Pillager_Outpost", true) == 0)
                                                                                {
                                                                                    Chunk.Lista_Estructuras.Add(Estructuras.Puesto_Saqueadores);
                                                                                }
                                                                                else if (string.Compare(Clave, "Shipwreck", true) == 0)
                                                                                {
                                                                                    bool Mapa = false; // Try to find if this ship has a treasure map in a chest.
                                                                                    bool Tesoro = false; // Try to find if this ship has a treasure chest.
                                                                                    if (Nodo_Estructura != null && Nodo_Estructura.Keys != null && Nodo_Estructura.Keys.Count > 0 && Nodo_Estructura.ContainsKey("Children"))
                                                                                    {
                                                                                        TagNodeList Nodo_Hijos = Nodo_Estructura["Children"] as TagNodeList;
                                                                                        if (Nodo_Hijos != null && Nodo_Hijos.Count > 0 && Nodo_Hijos.ValueType == TagType.TAG_COMPOUND)
                                                                                        {
                                                                                            for (int Índice_Sección = 0; Índice_Sección < Nodo_Hijos.Count; Índice_Sección++)
                                                                                            {
                                                                                                TagNodeCompound Nodo_Sección = Nodo_Hijos[Índice_Sección] as TagNodeCompound;
                                                                                                if (Nodo_Sección != null && Nodo_Sección.Keys != null && Nodo_Sección.Keys.Count > 0 && Nodo_Sección.ContainsKey("Template"))
                                                                                                {
                                                                                                    string Plantilla = Nodo_Sección["Template"].ToTagString();
                                                                                                    if (!string.IsNullOrEmpty(Plantilla) &&
                                                                                                        (string.Compare(Plantilla, "minecraft:shipwreck/rightsideup_backhalf", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/rightsideup_backhalf_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/rightsideup_full", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/rightsideup_full_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/sideways_backhalf", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/sideways_backhalf_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/sideways_full", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/sideways_full_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/upsidedown_backhalf", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/upsidedown_backhalf_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/upsidedown_fronthalf", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/upsidedown_fronthalf_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/upsidedown_full", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/upsidedown_full_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/with_mast", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/with_mast_degraded", true) == 0))
                                                                                                    {
                                                                                                        Mapa = true; // It should have a treasure map in a chest.
                                                                                                        //break;
                                                                                                    }
                                                                                                    else if (string.Compare(Plantilla, "minecraft:shipwreck/rightsideup_backhalf", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/rightsideup_backhalf_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/rightsideup_full", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/rightsideup_full_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/sideways_backhalf", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/sideways_backhalf_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/sideways_full", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/sideways_full_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/upsidedown_backhalf", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/upsidedown_backhalf_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/upsidedown_full", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/upsidedown_full_degraded", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/with_mast", true) == 0 ||
                                                                                                        string.Compare(Plantilla, "minecraft:shipwreck/with_mast_degraded", true) == 0)
                                                                                                    {
                                                                                                        Tesoro = true; // It should have a treasure chest.
                                                                                                        //break;
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    Chunk.Lista_Estructuras.Add(Mapa ? Estructuras.Barco_Mapa : Tesoro ? Estructuras.Barco_Tesoro : Estructuras.Barco);
                                                                                }
                                                                                else if (string.Compare(Clave, "Stronghold", true) == 0)
                                                                                {
                                                                                    Chunk.Lista_Estructuras.Add(Estructuras.Fin);
                                                                                }
                                                                                else if (string.Compare(Clave, "Swamp_Hut", true) == 0)
                                                                                {
                                                                                    Chunk.Lista_Estructuras.Add(Estructuras.Cabaña);
                                                                                }
                                                                                else if (string.Compare(Clave, "Village", true) == 0)
                                                                                {
                                                                                    Chunk.Lista_Estructuras.Add(Estructuras.Aldea);
                                                                                }
                                                                                else // Add partial support for future structures.
                                                                                {
                                                                                    Chunk.Lista_Estructuras.Add(Estructuras.Desconocida);
                                                                                }
                                                                            }
                                                                        }*/
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                //Chunk.Matriz_Bytes_ID = Matriz_Índices_Bloques_XYZ.Clone() as int[,,];
                                                Matriz_Chunks[Chunk_X, Chunk_Z] = Chunk;
                                            }
                                        }
                                        //else MessageBox.Show("Fallo al descodificar...");
                                    }
                                }
                            }
                            //MessageBox.Show("Mín = " + Bits_Mínimo.ToString() + ", Máx = " + Bits_Máximo.ToString());
                            Región.Matriz_Chunks = Matriz_Chunks;
                            Región.Iniciada = true;
                            Archivo_Región.Close();
                            Archivo_Región.Dispose();
                            Archivo_Región = null;
                            return Región;
                        }
                    }
                }
            }
            catch (Exception Excepción) { Depurador.Escribir_Excepción(Excepción != null ? Excepción.ToString() : null); }
            return new Regiones(Point.Empty);
        }

        internal static string[] Matriz_Nombres_Bloques = new string[]
        {

        };

        /// <summary>
        /// Ordenado por nombre alfabético real, 09-03-2018.
        /// </summary>
        internal class Comparador_String : IComparer<string>
        {
            public int Compare(string X, string Y)
            {
                try { return string.Compare(X + "_", Y + "_", true); }
                catch { }
                return string.Compare(X, Y, true);
            }
        }

        internal static readonly Color Color_Transparente = Color.FromArgb(0, 0, 0, 0);
        internal static readonly Color Color_Vacío = Color.FromArgb(255, 0, 0, 0);

        internal static Bitmap Cargar_Imagen(string Ruta, bool Alfa)
        {
            try
            {
                if (!string.IsNullOrEmpty(Ruta) && File.Exists(Ruta))
                {
                    Image Imagen_Original = null;
                    FileStream Lector = new FileStream(Ruta, FileMode.OpenOrCreate, FileAccess.Read, FileShare.ReadWrite);
                    if (Lector.Length > 0L)
                    {
                        try { Imagen_Original = Image.FromStream(Lector); }
                        catch { Imagen_Original = null; }
                        if (Imagen_Original != null)
                        {
                            int Ancho = Imagen_Original.Width;
                            int Alto = Imagen_Original.Height;
                            //Bitmap Imagen = new Bitmap(Ancho, Alto, Image.IsAlphaPixelFormat(Imagen_Original.PixelFormat) ? PixelFormat.Format32bppArgb : PixelFormat.Format24bppRgb);
                            Bitmap Imagen = new Bitmap(Ancho, Alto, Alfa ? PixelFormat.Format32bppArgb : PixelFormat.Format24bppRgb);
                            Graphics Pintar = Graphics.FromImage(Imagen);
                            Pintar.CompositingMode = CompositingMode.SourceCopy;
                            Pintar.DrawImage(Imagen_Original, new Rectangle(0, 0, Ancho, Alto), new Rectangle(0, 0, Ancho, Alto), GraphicsUnit.Pixel);
                            Pintar.Dispose();
                            Pintar = null;
                            Lector.Close();
                            Lector.Dispose();
                            Lector = null;
                            return Imagen;
                        }
                    }
                    Lector.Close();
                    Lector.Dispose();
                    Lector = null;
                }
            }
            catch (Exception Excepción) { Depurador.Escribir_Excepción(Excepción != null ? Excepción.ToString() : null); }
            return null;
        }

        internal static Color Obtener_Color_Único_Imagen(Bitmap Imagen_Original/*, bool Devolver_Alfa, bool Píxeles_Alfa*/)
        {
            try
            {
                int Ancho = Imagen_Original.Width;
                int Alto = Imagen_Original.Height;
                //int Píxeles = Ancho * Alto;
                //Byte Alfa_Mínimo;
                byte Alfa_Máximo = 0;
                BitmapData Bitmap_Data = Imagen_Original.LockBits(new Rectangle(0, 0, Ancho, Alto), ImageLockMode.ReadOnly, Imagen_Original.PixelFormat);
                byte[] Matriz_Bytes = new byte[Math.Abs(Bitmap_Data.Stride) * Alto];
                int Bytes_Diferencia = Math.Abs(Bitmap_Data.Stride) - ((Ancho * Image.GetPixelFormatSize(Imagen_Original.PixelFormat)) / 8);
                Marshal.Copy(Bitmap_Data.Scan0, Matriz_Bytes, 0, Matriz_Bytes.Length);
                Imagen_Original.UnlockBits(Bitmap_Data);
                for (int Índice_Y = 0, Índice_Bytes = 3; Índice_Y < Alto; Índice_Y++, Índice_Bytes += Bytes_Diferencia)
                {
                    for (int Índice_X = 0; Índice_X < Ancho; Índice_X++, Índice_Bytes += 4)
                    {
                        if (Matriz_Bytes[Índice_Bytes] > Alfa_Máximo) Alfa_Máximo = Matriz_Bytes[Índice_Bytes];
                    }
                }
                //int Píxeles_Alfa_Mínimo;
                //int Píxeles_Alfa_Máximo;
                //Obtener_Alfa_Mínimo_Máximo(Imagen_Original, out Alfa_Mínimo, out Alfa_Máximo, out Píxeles_Alfa_Mínimo, out Píxeles_Alfa_Máximo);
                //if (Alfa_Máximo <= 0) return Color_Transparente;
                //if (!Píxeles_Alfa && Alfa_Máximo > 0 && Píxeles_Alfa_Máximo < Píxeles) return Color_Transparente;
                //if (!Píxeles_Alfa && Alfa_Mínimo <= 0) return Color_Transparente;
                int Ancho_Triple = Ancho * 3;
                int Alto_Triple = Alto * 3;
                Bitmap Imagen_Triple = new Bitmap(Ancho_Triple, Alto_Triple, PixelFormat.Format32bppArgb);
                Graphics Pintar_Triple = Graphics.FromImage(Imagen_Triple);
                Pintar_Triple.CompositingMode = CompositingMode.SourceCopy;
                Pintar_Triple.DrawImage(Imagen_Original, new Rectangle(Ancho, Alto, Ancho, Alto), new Rectangle(0, 0, Ancho, Alto), GraphicsUnit.Pixel);
                Pintar_Triple.Dispose();
                Pintar_Triple = null;
                QuantizeSettings Ajustes_Cuantización = new QuantizeSettings();
                Ajustes_Cuantización.Colors = 2;
                //Ajustes_Cuantización.ColorSpace = ColorSpace.RGB;
                //Ajustes_Cuantización.DitherMethod = !FloydSteinbergDitherMethod.FloydSteinberg;
                //Ajustes_Cuantización.MeasureErrors = false;
                //Ajustes_Cuantización.TreeDepth = 8;
                MagickImage Imagen_Cuantizada = new MagickImage(Imagen_Triple);
                Imagen_Cuantizada.Quantize(Ajustes_Cuantización);
                Imagen_Triple = Imagen_Cuantizada.ToBitmap(ImageFormat.Png);
                Imagen_Cuantizada.Dispose();
                Imagen_Cuantizada = null;
                Bitmap Imagen = new Bitmap(Ancho_Triple, Alto_Triple, PixelFormat.Format32bppArgb);
                Graphics Pintar = Graphics.FromImage(Imagen);
                Pintar.CompositingMode = CompositingMode.SourceCopy;
                Pintar.DrawImage(Imagen_Triple, new Rectangle(0, 0, Ancho_Triple, Alto_Triple), new Rectangle(0, 0, Ancho_Triple, Alto_Triple), GraphicsUnit.Pixel);
                Pintar.Dispose();
                Pintar = null;
                Imagen_Triple.Dispose();
                Imagen_Triple = null;
                /*Bitmap Imagen = new Bitmap(Ancho * 3, Alto * 3, PixelFormat.Format32bppArgb);
                Graphics Pintar = Graphics.FromImage(Imagen);
                Pintar.CompositingMode = CompositingMode.SourceCopy;
                Pintar.DrawImage(Imagen_Magick.ToBitmap(ImageFormat.Png), new Rectangle(0, 0, Imagen.Width, Imagen.Height), new Rectangle(0, 0, Imagen.Width, Imagen.Height), GraphicsUnit.Pixel);
                Pintar.Dispose();
                Pintar = null;*/
                //Imagen.Save(Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory) + "\\abc\\" + Índice_XY.ToString() + ".png", ImageFormat.Png);
                Bitmap_Data = Imagen.LockBits(new Rectangle(0, 0, Ancho_Triple, Alto_Triple), ImageLockMode.ReadOnly, Imagen.PixelFormat);
                Matriz_Bytes = new byte[Math.Abs(Bitmap_Data.Stride) * Imagen.Height];
                Bytes_Diferencia = Math.Abs(Bitmap_Data.Stride) - ((Imagen.Width * Image.GetPixelFormatSize(Imagen.PixelFormat)) / 8);
                Marshal.Copy(Bitmap_Data.Scan0, Matriz_Bytes, 0, Matriz_Bytes.Length);
                Imagen.UnlockBits(Bitmap_Data);
                Imagen.Dispose();
                Imagen = null;
                Dictionary<int, Color> Diccionario_Colores = new Dictionary<int, Color>();
                //Dictionary<int, int> Diccionario_Píxeles = new Dictionary<int, int>();
                int Código_Hash = 0;
                for (int Índice_Y = 0, Índice_Bytes = 0; Índice_Y < Alto_Triple; Índice_Y++, Índice_Bytes += Bytes_Diferencia)
                {
                    for (int Índice_X = 0; Índice_X < Ancho_Triple; Índice_X++, Índice_Bytes += 4)
                    {
                        Color Color_ARGB = Color.FromArgb(Matriz_Bytes[Índice_Bytes + 3], Matriz_Bytes[Índice_Bytes + 2], Matriz_Bytes[Índice_Bytes + 1], Matriz_Bytes[Índice_Bytes]);
                        Código_Hash = Color_ARGB.GetHashCode();
                        if (!Diccionario_Colores.ContainsKey(Código_Hash))
                        {
                            Diccionario_Colores.Add(Código_Hash, Color_ARGB);
                            //Diccionario_Píxeles.Add(Código_Hash, 1);
                        }
                        //else Diccionario_Píxeles[Código_Hash]++;
                    }
                }
                Color Color_ARGB_Opaco = Color_Transparente;
                foreach (KeyValuePair<int, Color> Entrada in Diccionario_Colores)
                {
                    if (Entrada.Value.A > Color_ARGB_Opaco.A)
                    {
                        Código_Hash = Entrada.Key;
                        Color_ARGB_Opaco = Entrada.Value;
                    }
                }
                Diccionario_Colores = null;
                if (Color_ARGB_Opaco.A != Alfa_Máximo) Color_ARGB_Opaco = Color.FromArgb(Alfa_Máximo, Color_ARGB_Opaco.R, Color_ARGB_Opaco.G, Color_ARGB_Opaco.B);
                //if (Alfa_Máximo < 255 && !Devolver_Alfa) Color_ARGB_Opaco = Color.FromArgb(255, Color_ARGB_Opaco.R, Color_ARGB_Opaco.G, Color_ARGB_Opaco.B);
                //if (!Píxeles_Alfa && Color_ARGB_Opaco.A > 0 && Diccionario_Píxeles[Código_Hash] < Píxeles) Color_ARGB_Opaco = Color_Transparente;
                //Diccionario_Píxeles = null;
                /*if (Math.Abs(Alfa_Máximo - Color_ARGB_Opaco.A) >= 128)
                {
                    MessageBox.Show(Alfa_Máximo.ToString(), Color_ARGB_Opaco.A.ToString());
                }*/
                return Color_ARGB_Opaco;
            }
            catch (Exception Excepción) { Depurador.Escribir_Excepción(Excepción != null ? Excepción.ToString() : null); }
            return Color.Transparent;
        }

        //internal static List<string> Lista_Bloques_Nombres = new List<string>();
        //internal static Dictionary<string, string> Diccionario_Bloques_Nombres_Texturas = new Dictionary<string, string>(); // El nombre original de cada textura
        internal static Dictionary<short, Color> Diccionario_Bloques_Índices_Colores = new Dictionary<short, Color>(); // El color medio de cada textura
        internal static Dictionary<string, short> Diccionario_Bloques_Nombres_Índices = new Dictionary<string, short>(); // Índices de uso exclusivo de este programa
        internal static Dictionary<short, string> Diccionario_Bloques_Índices_Nombres = new Dictionary<short, string>(); // Conversión inversa, que varía en tiempo de ejecución
        internal static Dictionary<short, short> Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13 = new Dictionary<short, short>();
        internal static Dictionary<short, string> Diccionario_Bloques_Aire = new Dictionary<short, string>();
        internal static Dictionary<short, string> Diccionario_Bloques_Aire_Hojas = new Dictionary<short, string>();
        internal static Dictionary<short, string> Diccionario_Bloques_Transparentes = new Dictionary<short, string>(); // Bloques "transparentes" ignorados en la altura
        internal static Dictionary<short, Color> Diccionario_Bloques_Minerales = new Dictionary<short, Color>(); // Bloques "valiosos"
        internal static Dictionary<short, short> Diccionario_Bloques_Minerales_1_12_2_a_1_13 = new Dictionary<short, short>(); // Bloques "valiosos"
        internal static Dictionary<short, Color> Diccionario_Bloques_Tesoros = new Dictionary<short, Color>();
        internal static Dictionary<short, short> Diccionario_Bloques_Tesoros_1_12_2_a_1_13 = new Dictionary<short, short>();
        internal static Dictionary<short, string> Diccionario_Texturas_Transparentes = new Dictionary<short, string>();
        internal static Dictionary<short, string> Diccionario_Texturas_Píxeles_Parcialmente_Transparentes = new Dictionary<short, string>();
        internal static Dictionary<short, string> Diccionario_Texturas_Píxeles_Completamente_Transparentes = new Dictionary<short, string>();
        internal static Dictionary<short, string> Diccionario_Bloques_Minecraft_1_13 = new Dictionary<short, string>();
        internal static Dictionary<short, string> Diccionario_Bloques_Altura_Diferente = new Dictionary<short, string>();
        internal static Dictionary<short, string> Diccionario_Bloques_Altura_Doble = new Dictionary<short, string>();
        internal static Dictionary<short, Bitmap> Diccionario_Texturas = new Dictionary<short, Bitmap>();
        internal static short Índice_Aire = -1;
        internal static short Índice_Aire_Cueva = -1;
        internal static short Índice_Aire_Vacío = -1;

        /// <summary>
        /// 2018_03_11_13_31_33_231.
        /// </summary>
        internal static short Obtener_Valor_ID_Data(short ID, short Data)
        {
            return (short)((Data << 8) | (byte)ID);
        }

        /// <summary>
        /// 2018_05_16_21_07_53_567.
        /// </summary>
        internal static short Obtener_Valor_ID_Data(byte ID, byte Data)
        {
            return (short)(((short)Data << 8) | ID);
        }

        internal static byte Obtener_Valores_ID_Data(short ID_Data, out byte Data)
        {
            Data = (byte)((ID_Data >> 8) & 0xFF);
            return (byte)(ID_Data & 0xFF);
        }

        internal static byte Buscar_ID_Data_Minecraft_1_12_2(short ID_Minecraft_1_13, out byte Data)
        {
            Data = 0;
            try
            {
                foreach (KeyValuePair<short, short> Entrada in Minecraft.Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13)
                {
                    if (Entrada.Value == ID_Minecraft_1_13)
                    {
                        byte ID = Obtener_Valores_ID_Data(Entrada.Key, out Data);
                        if (ID != 43 && ID != 44 && ID != 125 && ID != 126 && ID != 181 && ID != 182) // Ignore all the slabs
                        {
                            return ID;
                        }
                    }
                }
            }
            catch (Exception Excepción)
            {
                Depurador.Escribir_Excepción(Excepción != null ? Excepción.ToString() : null);
                Data = 0;
            }
            return 0;
        }

        internal static void Reiniciar_Diccionario_Nombres_Bloques()
        {
            //Lista_Bloques_Nombres.Clear();
            //Diccionario_Bloques_Nombres_Texturas.Clear();
            Diccionario_Bloques_Índices_Colores.Clear();
            Diccionario_Bloques_Nombres_Índices.Clear();
            Diccionario_Bloques_Índices_Nombres.Clear();
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Clear();
            Diccionario_Bloques_Aire.Clear();
            Diccionario_Bloques_Aire_Hojas.Clear();
            Diccionario_Bloques_Transparentes.Clear();
            Diccionario_Bloques_Minerales.Clear();
            Diccionario_Bloques_Minerales_1_12_2_a_1_13.Clear();
            Diccionario_Bloques_Tesoros.Clear();
            Diccionario_Bloques_Tesoros_1_12_2_a_1_13.Clear();
            Diccionario_Texturas_Transparentes.Clear();
            Diccionario_Texturas_Píxeles_Parcialmente_Transparentes.Clear();
            Diccionario_Texturas_Píxeles_Completamente_Transparentes.Clear();
            Diccionario_Bloques_Minecraft_1_13.Clear();
            Diccionario_Bloques_Altura_Diferente.Clear();
            Diccionario_Bloques_Altura_Doble.Clear();
            Diccionario_Texturas.Clear();

            short Índice_Nombre = 0;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:acacia_bark", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:acacia_button", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:acacia_door", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:acacia_fence", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:acacia_fence_gate", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:acacia_leaves", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:acacia_log", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:acacia_planks", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:acacia_pressure_plate", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:acacia_sapling", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:acacia_slab", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:acacia_stairs", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:acacia_trapdoor", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:activator_rail", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:air", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:allium", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:andesite", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:anvil", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:attached_melon_stem", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:attached_pumpkin_stem", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:azure_bluet", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:banner", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:barrier", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:beacon", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:bed", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:bedrock", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:beetroots", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:birch_bark", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:birch_button", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:birch_door", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:birch_fence", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:birch_fence_gate", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:birch_leaves", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:birch_log", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:birch_planks", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:birch_pressure_plate", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:birch_sapling", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:birch_slab", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:birch_stairs", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:birch_trapdoor", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:black_banner", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:black_bed", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:black_carpet", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:black_concrete", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:black_concrete_powder", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:black_glazed_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:black_shulker_box", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:black_stained_glass", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:black_stained_glass_pane", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:black_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:black_wool", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:blue_banner", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:blue_bed", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:blue_carpet", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:blue_concrete", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:blue_concrete_powder", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:blue_coral", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:blue_coral_fan", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:blue_coral_plant", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:blue_dead_coral", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:blue_glazed_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:blue_orchid", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:blue_shulker_box", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:blue_stained_glass", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:blue_stained_glass_pane", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:blue_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:blue_wool", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:bone_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:bookshelf", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:brain_coral", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:brain_coral_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:brain_coral_fan", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:brewing_stand", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:brick_slab", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:brick_stairs", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:bricks", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:brown_banner", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:brown_bed", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:brown_carpet", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:brown_concrete", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:brown_concrete_powder", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:brown_glazed_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:brown_mushroom", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:brown_mushroom_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:brown_shulker_box", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:brown_stained_glass", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:brown_stained_glass_pane", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:brown_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:brown_wool", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:bubble_column", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:bubble_coral", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:bubble_coral_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:bubble_coral_fan", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cactus", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cake", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:carrots", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:carved_pumpkin", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cauldron", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cave_air", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:chain_command_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:chest", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:chipped_anvil", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:chiseled_quartz_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:chiseled_red_sandstone", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:chiseled_sandstone", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:chiseled_stone_bricks", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:chorus_flower", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:chorus_plant", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:clay", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:coal_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:coal_ore", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:coarse_dirt", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cobblestone", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cobblestone_slab", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cobblestone_stairs", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cobblestone_wall", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cobweb", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cocoa", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:command_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:comparator", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cracked_stone_bricks", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:crafting_table", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:creeper_head", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:creeper_wall_head", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cut_red_sandstone", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cut_sandstone", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cyan_banner", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cyan_bed", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cyan_carpet", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cyan_concrete", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cyan_concrete_powder", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cyan_glazed_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cyan_shulker_box", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cyan_stained_glass", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cyan_stained_glass_pane", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cyan_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:cyan_wool", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:damaged_anvil", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dandelion", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dark_oak_bark", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dark_oak_button", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dark_oak_door", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dark_oak_fence", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dark_oak_fence_gate", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dark_oak_leaves", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dark_oak_log", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dark_oak_planks", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dark_oak_pressure_plate", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dark_oak_sapling", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dark_oak_slab", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dark_oak_stairs", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dark_oak_trapdoor", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dark_prismarine", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dark_prismarine_slab", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dark_prismarine_stairs", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:daylight_detector", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dead_brain_coral_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dead_bubble_coral_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dead_bush", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dead_fire_coral_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dead_horn_coral_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dead_tube_coral_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:detector_rail", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:diamond_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:diamond_ore", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:diorite", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dirt", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dispenser", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dragon_egg", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dragon_head", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dragon_wall_head", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dried_kelp_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:dropper", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:emerald_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:emerald_ore", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:enchanting_table", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:end_gateway", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:end_portal", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:end_portal_frame", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:end_rod", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:end_stone", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:end_stone_bricks", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:ender_chest", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:farmland", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:fern", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:fire", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:fire_coral", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:fire_coral_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:fire_coral_fan", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:flower_pot", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:flowing_lava", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:flowing_water", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:four_turtle_eggs", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:frosted_ice", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:furnace", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:glass", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:glass_pane", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:glowstone", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:gold_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:gold_ore", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:granite", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:grass", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:grass_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:grass_path", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:gravel", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:gray_banner", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:gray_bed", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:gray_carpet", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:gray_concrete", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:gray_concrete_powder", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:gray_glazed_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:gray_shulker_box", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:gray_stained_glass", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:gray_stained_glass_pane", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:gray_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:gray_wool", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:green_banner", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:green_bed", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:green_carpet", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:green_concrete", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:green_concrete_powder", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:green_glazed_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:green_shulker_box", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:green_stained_glass", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:green_stained_glass_pane", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:green_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:green_wool", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:hay_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:heavy_weighted_pressure_plate", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:hopper", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:horn_coral", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:horn_coral_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:horn_coral_fan", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:ice", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:infested_chiseled_stone_bricks", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:infested_cobblestone", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:infested_cracked_stone_bricks", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:infested_mossy_stone_bricks", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:infested_stone", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:infested_stone_bricks", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:iron_bars", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:iron_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:iron_door", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:iron_ore", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:iron_trapdoor", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:jack_o_lantern", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:jukebox", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:jungle_bark", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:jungle_button", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:jungle_door", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:jungle_fence", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:jungle_fence_gate", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:jungle_leaves", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:jungle_log", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:jungle_planks", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:jungle_pressure_plate", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:jungle_sapling", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:jungle_slab", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:jungle_stairs", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:jungle_trapdoor", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:kelp", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:kelp_top", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:ladder", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:lapis_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:lapis_ore", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:large_fern", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:lava", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:lever", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:light_blue_banner", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:light_blue_bed", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:light_blue_carpet", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:light_blue_concrete", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:light_blue_concrete_powder", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:light_blue_glazed_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:light_blue_shulker_box", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:light_blue_stained_glass", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:light_blue_stained_glass_pane", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:light_blue_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:light_blue_wool", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:light_gray_banner", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:light_gray_bed", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:light_gray_carpet", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:light_gray_concrete", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:light_gray_concrete_powder", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:light_gray_glazed_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:light_gray_shulker_box", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:light_gray_stained_glass", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:light_gray_stained_glass_pane", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:light_gray_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:light_gray_wool", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:light_weighted_pressure_plate", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:lilac", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:lily_pad", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:lime_banner", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:lime_bed", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:lime_carpet", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:lime_concrete", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:lime_concrete_powder", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:lime_glazed_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:lime_shulker_box", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:lime_stained_glass", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:lime_stained_glass_pane", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:lime_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:lime_wool", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:magenta_banner", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:magenta_bed", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:magenta_carpet", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:magenta_concrete", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:magenta_concrete_powder", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:magenta_glazed_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:magenta_shulker_box", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:magenta_stained_glass", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:magenta_stained_glass_pane", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:magenta_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:magenta_wool", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:magma_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:melon_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:melon_stem", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:mob_spawner", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:mossy_cobblestone", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:mossy_cobblestone_wall", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:mossy_stone_bricks", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:moving_piston", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:mushroom_stem", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:mycelium", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:nether_brick_fence", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:nether_brick_slab", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:nether_brick_stairs", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:nether_bricks", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:nether_quartz_ore", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:nether_wart", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:nether_wart_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:netherrack", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:note_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:oak_bark", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:oak_button", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:oak_door", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:oak_fence", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:oak_fence_gate", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:oak_leaves", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:oak_log", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:oak_planks", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:oak_pressure_plate", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:oak_sapling", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:oak_slab", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:oak_stairs", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:oak_trapdoor", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:observer", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:obsidian", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:orange_banner", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:orange_bed", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:orange_carpet", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:orange_concrete", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:orange_concrete_powder", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:orange_glazed_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:orange_shulker_box", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:orange_stained_glass", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:orange_stained_glass_pane", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:orange_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:orange_tulip", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:orange_wool", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:oxeye_daisy", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:packed_ice", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:peony", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:petrified_oak_slab", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:pink_banner", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:pink_bed", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:pink_carpet", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:pink_concrete", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:pink_concrete_powder", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:pink_coral", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:pink_coral_fan", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:pink_coral_plant", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:pink_dead_coral", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:pink_glazed_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:pink_shulker_box", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:pink_stained_glass", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:pink_stained_glass_pane", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:pink_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:pink_tulip", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:pink_wool", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:piston", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:piston_head", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:player_head", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:player_wall_head", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:podzol", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:polished_andesite", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:polished_diorite", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:polished_granite", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:poppy", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:portal", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:potatoes", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:potted_red_mushroom", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:powered_rail", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:prismarine", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:prismarine_bricks", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:prismarine_bricks_slab", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:prismarine_bricks_stairs", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:prismarine_slab", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:prismarine_stairs", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:pumpkin", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:pumpkin_stem", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:purple_banner", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:purple_bed", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:purple_carpet", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:purple_concrete", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:purple_concrete_powder", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:purple_coral", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:purple_coral_fan", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:purple_coral_plant", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:purple_dead_coral", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:purple_glazed_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:purple_shulker_box", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:purple_stained_glass", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:purple_stained_glass_pane", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:purple_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:purple_wool", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:purpur_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:purpur_pillar", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:purpur_slab", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:purpur_stairs", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:quartz_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:quartz_pillar", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:quartz_slab", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:quartz_stairs", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:rail", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:red_banner", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:red_bed", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:red_carpet", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:red_concrete", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:red_concrete_powder", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:red_coral", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:red_coral_fan", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:red_coral_plant", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:red_dead_coral", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:red_glazed_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:red_mushroom", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:red_mushroom_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:red_nether_bricks", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:red_sand", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:red_sandstone", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:red_sandstone_slab", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:red_sandstone_stairs", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:red_shulker_box", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:red_stained_glass", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:red_stained_glass_pane", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:red_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:red_tulip", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:red_wool", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:redstone_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:redstone_lamp", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:redstone_ore", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:redstone_torch", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:redstone_wall_torch", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:redstone_wire", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:repeater", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:repeating_command_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:rose_bush", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:sand", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:sandstone", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:sandstone_slab", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:sandstone_stairs", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:sea_grass", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:sea_lantern", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:sea_pickle", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:shulker_box", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:sign", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:skeleton_skull", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:skeleton_wall_skull", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:slime_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:smooth_quartz", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:smooth_red_sandstone", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:smooth_sandstone", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:smooth_stone", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:snow", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:snow_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:soul_sand", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:sponge", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:spruce_bark", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:spruce_button", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:spruce_door", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:spruce_fence", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:spruce_fence_gate", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:spruce_leaves", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:spruce_log", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:spruce_planks", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:spruce_pressure_plate", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:spruce_sapling", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:spruce_slab", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:spruce_stairs", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:spruce_trapdoor", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:sticky_piston", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:stone", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:stone_brick_slab", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:stone_brick_stairs", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:stone_bricks", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:stone_button", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:stone_pressure_plate", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:stone_slab", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:stripped_acacia_log", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:stripped_birch_log", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:stripped_dark_oak_log", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:stripped_jungle_log", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:stripped_oak_log", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:stripped_spruce_log", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:structure_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:structure_void", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:sugar_cane", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:sunflower", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:tall_grass", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:tall_sea_grass", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:three_turtle_eggs", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:tnt", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:torch", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:trapped_chest", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:tripwire", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:tripwire_hook", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:tube_coral", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:tube_coral_block", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:tube_coral_fan", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:turtle_egg", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:two_turtle_eggs", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:vine", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:void_air", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:wall_banner", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:wall_sign", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:wall_torch", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:water", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:wet_sponge", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:wheat", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:white_banner", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:white_bed", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:white_carpet", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:white_concrete", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:white_concrete_powder", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:white_glazed_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:white_shulker_box", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:white_stained_glass", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:white_stained_glass_pane", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:white_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:white_tulip", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:white_wool", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:wither_skeleton_skull", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:wither_skeleton_wall_skull", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:yellow_banner", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:yellow_bed", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:yellow_carpet", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:yellow_concrete", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:yellow_concrete_powder", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:yellow_coral", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:yellow_coral_fan", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:yellow_coral_plant", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:yellow_dead_coral", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:yellow_glazed_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:yellow_shulker_box", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:yellow_stained_glass", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:yellow_stained_glass_pane", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:yellow_terracotta", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:yellow_wool", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:zombie_head", Índice_Nombre); Índice_Nombre++;
            Diccionario_Bloques_Nombres_Índices.Add("minecraft:zombie_wall_head", Índice_Nombre); Índice_Nombre++;

            Índice_Nombre = 0;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:acacia_bark"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:acacia_button"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:acacia_door"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:acacia_fence"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:acacia_fence_gate"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:acacia_leaves"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:acacia_log"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:acacia_planks"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:acacia_pressure_plate"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:acacia_sapling"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:acacia_slab"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:acacia_stairs"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:acacia_trapdoor"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:activator_rail"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:air"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:allium"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:andesite"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:anvil"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:attached_melon_stem"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:attached_pumpkin_stem"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:azure_bluet"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:banner"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:barrier"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:beacon"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:bed"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:bedrock"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:beetroots"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:birch_bark"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:birch_button"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:birch_door"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:birch_fence"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:birch_fence_gate"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:birch_leaves"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:birch_log"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:birch_planks"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:birch_pressure_plate"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:birch_sapling"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:birch_slab"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:birch_stairs"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:birch_trapdoor"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:black_banner"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:black_bed"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:black_carpet"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:black_concrete"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:black_concrete_powder"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:black_glazed_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:black_shulker_box"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:black_stained_glass"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:black_stained_glass_pane"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:black_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:black_wool"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:blue_banner"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:blue_bed"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:blue_carpet"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:blue_concrete"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:blue_concrete_powder"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:blue_coral"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:blue_coral_fan"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:blue_coral_plant"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:blue_dead_coral"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:blue_glazed_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:blue_orchid"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:blue_shulker_box"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:blue_stained_glass"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:blue_stained_glass_pane"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:blue_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:blue_wool"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:bone_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:bookshelf"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:brain_coral"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:brain_coral_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:brain_coral_fan"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:brewing_stand"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:brick_slab"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:brick_stairs"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:bricks"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:brown_banner"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:brown_bed"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:brown_carpet"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:brown_concrete"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:brown_concrete_powder"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:brown_glazed_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:brown_mushroom"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:brown_mushroom_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:brown_shulker_box"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:brown_stained_glass"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:brown_stained_glass_pane"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:brown_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:brown_wool"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:bubble_column"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:bubble_coral"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:bubble_coral_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:bubble_coral_fan"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cactus"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cake"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:carrots"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:carved_pumpkin"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cauldron"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cave_air"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:chain_command_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:chest"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:chipped_anvil"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:chiseled_quartz_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:chiseled_red_sandstone"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:chiseled_sandstone"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:chiseled_stone_bricks"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:chorus_flower"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:chorus_plant"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:clay"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:coal_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:coal_ore"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:coarse_dirt"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cobblestone"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cobblestone_slab"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cobblestone_stairs"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cobblestone_wall"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cobweb"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cocoa"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:command_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:comparator"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cracked_stone_bricks"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:crafting_table"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:creeper_head"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:creeper_wall_head"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cut_red_sandstone"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cut_sandstone"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cyan_banner"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cyan_bed"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cyan_carpet"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cyan_concrete"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cyan_concrete_powder"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cyan_glazed_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cyan_shulker_box"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cyan_stained_glass"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cyan_stained_glass_pane"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cyan_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:cyan_wool"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:damaged_anvil"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dandelion"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dark_oak_bark"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dark_oak_button"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dark_oak_door"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dark_oak_fence"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dark_oak_fence_gate"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dark_oak_leaves"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dark_oak_log"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dark_oak_planks"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dark_oak_pressure_plate"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dark_oak_sapling"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dark_oak_slab"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dark_oak_stairs"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dark_oak_trapdoor"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dark_prismarine"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dark_prismarine_slab"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dark_prismarine_stairs"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:daylight_detector"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dead_brain_coral_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dead_bubble_coral_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dead_bush"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dead_fire_coral_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dead_horn_coral_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dead_tube_coral_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:detector_rail"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:diamond_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:diamond_ore"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:diorite"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dirt"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dispenser"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dragon_egg"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dragon_head"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dragon_wall_head"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dried_kelp_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:dropper"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:emerald_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:emerald_ore"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:enchanting_table"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:end_gateway"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:end_portal"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:end_portal_frame"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:end_rod"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:end_stone"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:end_stone_bricks"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:ender_chest"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:farmland"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:fern"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:fire"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:fire_coral"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:fire_coral_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:fire_coral_fan"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:flower_pot"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:flowing_lava"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:flowing_water"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:four_turtle_eggs"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:frosted_ice"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:furnace"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:glass"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:glass_pane"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:glowstone"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:gold_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:gold_ore"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:granite"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:grass"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:grass_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:grass_path"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:gravel"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:gray_banner"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:gray_bed"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:gray_carpet"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:gray_concrete"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:gray_concrete_powder"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:gray_glazed_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:gray_shulker_box"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:gray_stained_glass"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:gray_stained_glass_pane"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:gray_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:gray_wool"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:green_banner"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:green_bed"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:green_carpet"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:green_concrete"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:green_concrete_powder"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:green_glazed_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:green_shulker_box"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:green_stained_glass"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:green_stained_glass_pane"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:green_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:green_wool"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:hay_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:heavy_weighted_pressure_plate"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:hopper"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:horn_coral"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:horn_coral_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:horn_coral_fan"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:ice"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:infested_chiseled_stone_bricks"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:infested_cobblestone"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:infested_cracked_stone_bricks"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:infested_mossy_stone_bricks"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:infested_stone"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:infested_stone_bricks"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:iron_bars"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:iron_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:iron_door"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:iron_ore"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:iron_trapdoor"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:jack_o_lantern"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:jukebox"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:jungle_bark"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:jungle_button"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:jungle_door"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:jungle_fence"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:jungle_fence_gate"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:jungle_leaves"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:jungle_log"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:jungle_planks"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:jungle_pressure_plate"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:jungle_sapling"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:jungle_slab"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:jungle_stairs"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:jungle_trapdoor"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:kelp"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:kelp_top"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:ladder"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:lapis_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:lapis_ore"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:large_fern"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:lava"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:lever"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:light_blue_banner"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:light_blue_bed"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:light_blue_carpet"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:light_blue_concrete"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:light_blue_concrete_powder"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:light_blue_glazed_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:light_blue_shulker_box"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:light_blue_stained_glass"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:light_blue_stained_glass_pane"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:light_blue_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:light_blue_wool"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:light_gray_banner"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:light_gray_bed"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:light_gray_carpet"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:light_gray_concrete"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:light_gray_concrete_powder"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:light_gray_glazed_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:light_gray_shulker_box"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:light_gray_stained_glass"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:light_gray_stained_glass_pane"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:light_gray_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:light_gray_wool"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:light_weighted_pressure_plate"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:lilac"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:lily_pad"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:lime_banner"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:lime_bed"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:lime_carpet"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:lime_concrete"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:lime_concrete_powder"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:lime_glazed_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:lime_shulker_box"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:lime_stained_glass"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:lime_stained_glass_pane"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:lime_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:lime_wool"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:magenta_banner"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:magenta_bed"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:magenta_carpet"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:magenta_concrete"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:magenta_concrete_powder"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:magenta_glazed_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:magenta_shulker_box"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:magenta_stained_glass"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:magenta_stained_glass_pane"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:magenta_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:magenta_wool"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:magma_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:melon_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:melon_stem"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:mob_spawner"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:mossy_cobblestone"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:mossy_cobblestone_wall"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:mossy_stone_bricks"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:moving_piston"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:mushroom_stem"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:mycelium"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:nether_brick_fence"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:nether_brick_slab"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:nether_brick_stairs"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:nether_bricks"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:nether_quartz_ore"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:nether_wart"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:nether_wart_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:netherrack"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:note_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:oak_bark"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:oak_button"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:oak_door"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:oak_fence"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:oak_fence_gate"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:oak_leaves"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:oak_log"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:oak_planks"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:oak_pressure_plate"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:oak_sapling"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:oak_slab"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:oak_stairs"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:oak_trapdoor"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:observer"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:obsidian"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:orange_banner"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:orange_bed"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:orange_carpet"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:orange_concrete"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:orange_concrete_powder"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:orange_glazed_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:orange_shulker_box"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:orange_stained_glass"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:orange_stained_glass_pane"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:orange_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:orange_tulip"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:orange_wool"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:oxeye_daisy"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:packed_ice"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:peony"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:petrified_oak_slab"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:pink_banner"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:pink_bed"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:pink_carpet"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:pink_concrete"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:pink_concrete_powder"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:pink_coral"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:pink_coral_fan"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:pink_coral_plant"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:pink_dead_coral"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:pink_glazed_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:pink_shulker_box"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:pink_stained_glass"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:pink_stained_glass_pane"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:pink_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:pink_tulip"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:pink_wool"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:piston"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:piston_head"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:player_head"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:player_wall_head"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:podzol"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:polished_andesite"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:polished_diorite"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:polished_granite"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:poppy"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:portal"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:potatoes"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:potted_red_mushroom"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:powered_rail"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:prismarine"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:prismarine_bricks"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:prismarine_bricks_slab"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:prismarine_bricks_stairs"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:prismarine_slab"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:prismarine_stairs"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:pumpkin"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:pumpkin_stem"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:purple_banner"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:purple_bed"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:purple_carpet"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:purple_concrete"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:purple_concrete_powder"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:purple_coral"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:purple_coral_fan"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:purple_coral_plant"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:purple_dead_coral"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:purple_glazed_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:purple_shulker_box"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:purple_stained_glass"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:purple_stained_glass_pane"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:purple_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:purple_wool"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:purpur_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:purpur_pillar"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:purpur_slab"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:purpur_stairs"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:quartz_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:quartz_pillar"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:quartz_slab"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:quartz_stairs"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:rail"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:red_banner"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:red_bed"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:red_carpet"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:red_concrete"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:red_concrete_powder"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:red_coral"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:red_coral_fan"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:red_coral_plant"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:red_dead_coral"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:red_glazed_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:red_mushroom"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:red_mushroom_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:red_nether_bricks"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:red_sand"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:red_sandstone"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:red_sandstone_slab"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:red_sandstone_stairs"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:red_shulker_box"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:red_stained_glass"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:red_stained_glass_pane"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:red_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:red_tulip"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:red_wool"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:redstone_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:redstone_lamp"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:redstone_ore"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:redstone_torch"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:redstone_wall_torch"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:redstone_wire"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:repeater"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:repeating_command_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:rose_bush"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:sand"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:sandstone"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:sandstone_slab"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:sandstone_stairs"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:sea_grass"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:sea_lantern"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:sea_pickle"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:shulker_box"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:sign"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:skeleton_skull"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:skeleton_wall_skull"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:slime_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:smooth_quartz"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:smooth_red_sandstone"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:smooth_sandstone"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:smooth_stone"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:snow"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:snow_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:soul_sand"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:sponge"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:spruce_bark"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:spruce_button"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:spruce_door"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:spruce_fence"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:spruce_fence_gate"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:spruce_leaves"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:spruce_log"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:spruce_planks"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:spruce_pressure_plate"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:spruce_sapling"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:spruce_slab"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:spruce_stairs"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:spruce_trapdoor"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:sticky_piston"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:stone"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:stone_brick_slab"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:stone_brick_stairs"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:stone_bricks"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:stone_button"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:stone_pressure_plate"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:stone_slab"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:stripped_acacia_log"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:stripped_birch_log"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:stripped_dark_oak_log"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:stripped_jungle_log"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:stripped_oak_log"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:stripped_spruce_log"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:structure_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:structure_void"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:sugar_cane"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:sunflower"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:tall_grass"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:tall_sea_grass"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:three_turtle_eggs"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:tnt"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:torch"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:trapped_chest"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:tripwire"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:tripwire_hook"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:tube_coral"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:tube_coral_block"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:tube_coral_fan"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:turtle_egg"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:two_turtle_eggs"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:vine"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:void_air"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:wall_banner"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:wall_sign"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:wall_torch"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:water"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:wet_sponge"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:wheat"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:white_banner"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:white_bed"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:white_carpet"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:white_concrete"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:white_concrete_powder"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:white_glazed_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:white_shulker_box"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:white_stained_glass"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:white_stained_glass_pane"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:white_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:white_tulip"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:white_wool"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:wither_skeleton_skull"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:wither_skeleton_wall_skull"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:yellow_banner"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:yellow_bed"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:yellow_carpet"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:yellow_concrete"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:yellow_concrete_powder"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:yellow_coral"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:yellow_coral_fan"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:yellow_coral_plant"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:yellow_dead_coral"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:yellow_glazed_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:yellow_shulker_box"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:yellow_stained_glass"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:yellow_stained_glass_pane"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:yellow_terracotta"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:yellow_wool"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:zombie_head"); Índice_Nombre++;
            Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, "minecraft:zombie_wall_head"); Índice_Nombre++;

            // ...

            /*Diccionario_Bloques_Nombres_Texturas.Add("minecraft:acacia_bark", "acacia_log");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:acacia_button", "acacia_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:acacia_door", "acacia_door");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:acacia_fence", "acacia_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:acacia_fence_gate", "acacia_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:acacia_leaves", "acacia_leaves");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:acacia_log", "acacia_log");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:acacia_planks", "acacia_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:acacia_pressure_plate", "acacia_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:acacia_sapling", "acacia_sapling");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:acacia_slab", "acacia_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:acacia_stairs", "acacia_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:acacia_trapdoor", "acacia_trapdoor");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:activator_rail", "activator_rail");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:air", "");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:allium", "allium");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:andesite", "andesite");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:anvil", "anvil");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:attached_melon_stem", "attached_melon_stem");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:attached_pumpkin_stem", "attached_pumpkin_stem");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:azure_bluet", "azure_bluet");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:banner", "");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:barrier", "barrier");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:beacon", "beacon");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:bed", "bed");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:bedrock", "bedrock");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:beetroots", "beetroots_stage3");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:birch_bark", "birch_log");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:birch_button", "birch_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:birch_door", "birch_door");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:birch_fence", "birch_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:birch_fence_gate", "birch_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:birch_leaves", "birch_leaves");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:birch_log", "birch_log");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:birch_planks", "birch_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:birch_pressure_plate", "birch_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:birch_sapling", "birch_sapling");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:birch_slab", "birch_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:birch_stairs", "birch_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:birch_trapdoor", "birch_trapdoor");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:black_banner", "");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:black_bed", "black_bed");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:black_carpet", "black_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:black_concrete", "black_concrete");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:black_concrete_powder", "black_concrete_powder");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:black_glazed_terracotta", "black_glazed_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:black_shulker_box", "shulker_top_black");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:black_stained_glass", "black_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:black_stained_glass_pane", "black_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:black_terracotta", "black_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:black_wool", "black_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:blue_banner", "");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:blue_bed", "blue_bed");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:blue_carpet", "blue_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:blue_concrete", "blue_concrete");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:blue_concrete_powder", "blue_concrete_powder");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:blue_coral", "blue_coral");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:blue_coral_fan", "blue_coral_fan");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:blue_coral_plant", "blue_coral_plant");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:blue_dead_coral", "blue_dead_coral");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:blue_glazed_terracotta", "blue_glazed_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:blue_orchid", "blue_orchid");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:blue_shulker_box", "shulker_top_blue");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:blue_stained_glass", "blue_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:blue_stained_glass_pane", "blue_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:blue_terracotta", "blue_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:blue_wool", "blue_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:bone_block", "bone_block_side");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:bookshelf", "bookshelf");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:brewing_stand", "brewing_stand");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:brick_slab", "brick");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:brick_stairs", "brick");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:bricks", "brick");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:brown_banner", "");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:brown_bed", "brown_bed");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:brown_carpet", "brown_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:brown_concrete", "brown_concrete");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:brown_concrete_powder", "brown_concrete_powder");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:brown_glazed_terracotta", "brown_glazed_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:brown_mushroom", "brown_mushroom");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:brown_mushroom_block", "brown_mushroom_block");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:brown_shulker_box", "shulker_top_brown");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:brown_stained_glass", "brown_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:brown_stained_glass_pane", "brown_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:brown_terracotta", "brown_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:brown_wool", "brown_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:bubble_column", "water_flow");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cactus", "cactus_side");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cake", "cake_top");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:carrots", "carrots_stage3");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:carved_pumpkin", "pumpkin_face");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cauldron", "cauldron_side");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cave_air", "");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:chain_command_block", "chain_command_block_front");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:chest", "chest");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:chipped_anvil", "chipped_anvil_top");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:chiseled_quartz_block", "chiseled_quartz_block");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:chiseled_red_sandstone", "chiseled_red_sandstone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:chiseled_sandstone", "chiseled_sandstone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:chiseled_stone_bricks", "chiseled_stone_bricks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:chorus_flower", "chorus_flower");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:chorus_plant", "chorus_plant");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:clay", "clay");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:coal_block", "coal_block");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:coal_ore", "coal_ore");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:coarse_dirt", "coarse_dirt");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cobblestone", "cobblestone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cobblestone_slab", "cobblestone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cobblestone_stairs", "cobblestone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cobblestone_wall", "cobblestone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cobweb", "cobweb");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cocoa", "cocoa_stage2");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:command_block", "command_block_front");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:comparator", "comparator");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cracked_stone_bricks", "cracked_stone_bricks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:crafting_table", "crafting_table_front");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:creeper_head", "creeper_head");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:creeper_wall_head", "creeper_head");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cut_red_sandstone", "cut_red_sandstone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cut_sandstone", "cut_sandstone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cyan_banner", "");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cyan_bed", "cyan_bed");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cyan_carpet", "cyan_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cyan_concrete", "cyan_concrete");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cyan_concrete_powder", "cyan_concrete_powder");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cyan_glazed_terracotta", "cyan_glazed_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cyan_shulker_box", "shulker_top_cyan");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cyan_stained_glass", "cyan_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cyan_stained_glass_pane", "cyan_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cyan_terracotta", "cyan_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:cyan_wool", "cyan_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:damaged_anvil", "damaged_anvil_top");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dandelion", "dandelion");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dark_oak_bark", "dark_oak_log");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dark_oak_button", "dark_oak_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dark_oak_door", "dark_oak_door");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dark_oak_fence", "dark_oak_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dark_oak_fence_gate", "dark_oak_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dark_oak_leaves", "dark_oak_leaves");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dark_oak_log", "dark_oak_log");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dark_oak_planks", "dark_oak_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dark_oak_pressure_plate", "dark_oak_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dark_oak_sapling", "dark_oak_sapling");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dark_oak_slab", "dark_oak_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dark_oak_stairs", "dark_oak_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dark_oak_trapdoor", "dark_oak_trapdoor");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dark_prismarine", "dark_prismarine");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dark_prismarine_slab", "dark_prismarine");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dark_prismarine_stairs", "dark_prismarine");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:daylight_detector", "daylight_detector_top");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dead_bush", "dead_bush");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:detector_rail", "detector_rail");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:diamond_block", "diamond_block");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:diamond_ore", "diamond_ore");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:diorite", "diorite");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dirt", "dirt");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dispenser", "dispenser_front");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dragon_egg", "dragon_egg");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dragon_head", "dragon_head");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dragon_wall_head", "dragon_head");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dried_kelp_block", "dried_kelp_side");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:dropper", "dropper_front");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:emerald_block", "emerald_block");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:emerald_ore", "emerald_ore");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:enchanting_table", "enchanting_table_side");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:end_gateway", "");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:end_portal", ""); // end_portal_frame_top
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:end_portal_frame", "end_portal_frame_side");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:end_rod", "end_rod");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:end_stone", "end_stone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:end_stone_bricks", "end_stone_bricks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:ender_chest", "ender_chest");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:farmland", "farmland");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:fern", "fern");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:fire", "fire_layer_0");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:flower_pot", "flower_pot");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:flowing_lava", "lava_flow");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:flowing_water", "water_flow");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:four_turtle_eggs", "turtle_egg_not_cracked");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:frosted_ice", "frosted_ice_3");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:furnace", "furnace_front_on");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:glass", "glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:glass_pane", "glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:glowstone", "glowstone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:gold_block", "gold_block");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:gold_ore", "gold_ore");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:granite", "stone_granite");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:grass", "grass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:grass_block", "grass_block_top");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:grass_path", "grass_path_top");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:gravel", "gravel");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:gray_banner", "");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:gray_bed", "gray_bed");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:gray_carpet", "gray_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:gray_concrete", "gray_concrete");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:gray_concrete_powder", "gray_concrete_powder");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:gray_glazed_terracotta", "gray_glazed_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:gray_shulker_box", "shulker_top_gray");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:gray_stained_glass", "gray_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:gray_stained_glass_pane", "gray_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:gray_terracotta", "gray_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:gray_wool", "gray_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:green_banner", "");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:green_bed", "green_bed");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:green_carpet", "green_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:green_concrete", "green_concrete");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:green_concrete_powder", "green_concrete_powder");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:green_glazed_terracotta", "green_glazed_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:green_shulker_box", "shulker_top_green");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:green_stained_glass", "green_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:green_stained_glass_pane", "green_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:green_terracotta", "green_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:green_wool", "green_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:hay_block", "hay_block_side");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:heavy_weighted_pressure_plate", "iron_block");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:hopper", "hopper_outside");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:ice", "ice");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:infested_chiseled_stone_bricks", "chiseled_stone_bricks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:infested_cobblestone", "cobblestone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:infested_cracked_stone_bricks", "cracked_stone_bricks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:infested_mossy_stone_bricks", "mossy_stone_bricks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:infested_stone", "stone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:infested_stone_bricks", "stone_bricks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:iron_bars", "iron_bars");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:iron_block", "iron_block");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:iron_door", "iron_door");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:iron_ore", "iron_ore");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:iron_trapdoor", "iron_trapdoor");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:jack_o_lantern", "pumpkin_face_on");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:jukebox", "jukebox_top");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:jungle_bark", "jungle_log");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:jungle_button", "jungle_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:jungle_door", "jungle_door");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:jungle_fence", "jungle_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:jungle_fence_gate", "jungle_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:jungle_leaves", "jungle_leaves");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:jungle_log", "jungle_log");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:jungle_planks", "jungle_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:jungle_pressure_plate", "jungle_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:jungle_sapling", "jungle_sapling");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:jungle_slab", "jungle_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:jungle_stairs", "jungle_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:jungle_trapdoor", "jungle_trapdoor");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:kelp", "kelp_plant");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:kelp_top", "kelp_top");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:ladder", "ladder");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:lapis_block", "lapis_block");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:lapis_ore", "lapis_ore");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:large_fern", "large_fern");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:lava", "lava_still");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:lever", "lever");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:light_blue_banner", "");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:light_blue_bed", "light_blue_bed");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:light_blue_carpet", "light_blue_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:light_blue_concrete", "light_blue_concrete");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:light_blue_concrete_powder", "light_blue_concrete_powder");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:light_blue_glazed_terracotta", "light_blue_glazed_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:light_blue_shulker_box", "shulker_top_light_blue");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:light_blue_stained_glass", "light_blue_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:light_blue_stained_glass_pane", "light_blue_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:light_blue_terracotta", "light_blue_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:light_blue_wool", "light_blue_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:light_gray_banner", "");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:light_gray_bed", "light_gray_bed");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:light_gray_carpet", "light_gray_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:light_gray_concrete", "light_gray_concrete");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:light_gray_concrete_powder", "light_gray_concrete_powder");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:light_gray_glazed_terracotta", "light_gray_glazed_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:light_gray_shulker_box", "shulker_top_light_gray");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:light_gray_stained_glass", "light_gray_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:light_gray_stained_glass_pane", "light_gray_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:light_gray_terracotta", "light_gray_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:light_gray_wool", "light_gray_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:light_weighted_pressure_plate", "gold_block");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:lilac", "lilac");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:lily_pad", "lily_pad");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:lime_banner", "");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:lime_bed", "lime_bed");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:lime_carpet", "lime_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:lime_concrete", "lime_concrete");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:lime_concrete_powder", "lime_concrete_powder");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:lime_glazed_terracotta", "lime_glazed_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:lime_shulker_box", "shulker_top_lime");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:lime_stained_glass", "lime_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:lime_stained_glass_pane", "lime_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:lime_terracotta", "lime_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:lime_wool", "lime_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:magenta_banner", "");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:magenta_bed", "magenta_bed");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:magenta_carpet", "magenta_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:magenta_concrete", "magenta_concrete");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:magenta_concrete_powder", "magenta_concrete_powder");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:magenta_glazed_terracotta", "magenta_glazed_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:magenta_shulker_box", "shulker_top_magenta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:magenta_stained_glass", "magenta_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:magenta_stained_glass_pane", "magenta_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:magenta_terracotta", "magenta_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:magenta_wool", "magenta_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:magma_block", "magma");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:melon_block", "melon_side");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:melon_stem", "melon_stem");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:mob_spawner", "mob_spawner");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:mossy_cobblestone", "mossy_cobblestone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:mossy_cobblestone_wall", "mossy_cobblestone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:mossy_stone_bricks", "mossy_stone_bricks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:moving_piston", "piston_top");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:mushroom_stem", "mushroom_stem");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:mycelium", "mycelium_top");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:nether_brick_fence", "nether_brick");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:nether_brick_slab", "nether_brick");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:nether_brick_stairs", "nether_brick");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:nether_bricks", "nether_brick");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:nether_quartz_ore", "quartz_ore");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:nether_wart", "nether_wart_stage2");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:nether_wart_block", "nether_wart_block");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:netherrack", "netherrack");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:note_block", "note_block");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:oak_bark", "oak_log");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:oak_button", "oak_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:oak_door", "oak_door");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:oak_fence", "oak_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:oak_fence_gate", "oak_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:oak_leaves", "oak_leaves");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:oak_log", "oak_log");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:oak_planks", "oak_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:oak_pressure_plate", "oak_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:oak_sapling", "oak_sapling");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:oak_slab", "oak_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:oak_stairs", "oak_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:oak_trapdoor", "oak_trapdoor");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:observer", "observer_front");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:obsidian", "obsidian");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:orange_banner", "");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:orange_bed", "orange_bed");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:orange_carpet", "orange_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:orange_concrete", "orange_concrete");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:orange_concrete_powder", "orange_concrete_powder");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:orange_glazed_terracotta", "orange_glazed_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:orange_shulker_box", "shulker_top_orange");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:orange_stained_glass", "orange_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:orange_stained_glass_pane", "orange_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:orange_terracotta", "orange_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:orange_tulip", "orange_tulip");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:orange_wool", "orange_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:oxeye_daisy", "oxeye_daisy");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:packed_ice", "packed_ice");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:peony", "peony");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:petrified_oak_slab", "oak_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:pink_banner", "");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:pink_bed", "pink_bed");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:pink_carpet", "pink_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:pink_concrete", "pink_concrete");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:pink_concrete_powder", "pink_concrete_powder");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:pink_coral", "pink_coral");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:pink_coral_fan", "pink_coral_fan");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:pink_coral_plant", "pink_coral_plant");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:pink_dead_coral", "pink_dead_coral");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:pink_glazed_terracotta", "pink_glazed_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:pink_shulker_box", "shulker_top_pink");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:pink_stained_glass", "pink_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:pink_stained_glass_pane", "pink_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:pink_terracotta", "pink_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:pink_tulip", "pink_tulip");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:pink_wool", "pink_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:piston", "piston_top");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:piston_head", "piston_top");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:player_head", "player_head");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:player_wall_head", "player_head");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:podzol", "podzol_top");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:polished_andesite", "polished_andesite");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:polished_diorite", "polished_diorite");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:polished_granite", "polished_granite");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:poppy", "poppy");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:portal", "portal");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:potatoes", "potatoes_stage3");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:potted_red_mushroom", "red_mushroom");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:powered_rail", "powered_rail");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:prismarine", "prismarine");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:prismarine_bricks", "prismarine_bricks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:prismarine_bricks_slab", "prismarine_bricks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:prismarine_bricks_stairs", "prismarine_bricks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:prismarine_slab", "prismarine");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:prismarine_stairs", "prismarine");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:pumpkin", "pumpkin_side");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:pumpkin_stem", "pumpkin_stem");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:purple_banner", "");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:purple_bed", "purple_bed");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:purple_carpet", "purple_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:purple_concrete", "purple_concrete");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:purple_concrete_powder", "purple_concrete_powder");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:purple_coral", "purple_coral");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:purple_coral_fan", "purple_coral_fan");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:purple_coral_plant", "purple_coral_plant");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:purple_dead_coral", "purple_dead_coral");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:purple_glazed_terracotta", "purple_glazed_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:purple_shulker_box", "shulker_top_purple");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:purple_stained_glass", "purple_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:purple_stained_glass_pane", "purple_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:purple_terracotta", "purple_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:purple_wool", "purple_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:purpur_block", "purpur_block");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:purpur_pillar", "purpur_pillar");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:purpur_slab", "purpur_block");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:purpur_stairs", "purpur_block");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:quartz_block", "quartz_block_side");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:quartz_pillar", "quartz_pillar");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:quartz_slab", "quartz_block_side");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:quartz_stairs", "quartz_block_side");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:rail", "rail");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:red_banner", "");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:red_bed", "red_bed");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:red_carpet", "red_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:red_concrete", "red_concrete");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:red_concrete_powder", "red_concrete_powder");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:red_coral", "red_coral");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:red_coral_fan", "red_coral_fan");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:red_coral_plant", "red_coral_plant");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:red_dead_coral", "red_dead_coral");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:red_glazed_terracotta", "red_glazed_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:red_mushroom", "red_mushroom");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:red_mushroom_block", "red_mushroom_block");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:red_nether_bricks", "red_nether_brick");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:red_sand", "red_sand");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:red_sandstone", "red_sandstone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:red_sandstone_slab", "red_sandstone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:red_sandstone_stairs", "red_sandstone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:red_shulker_box", "shulker_top_red");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:red_stained_glass", "red_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:red_stained_glass_pane", "red_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:red_terracotta", "red_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:red_tulip", "red_tulip");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:red_wool", "red_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:redstone_block", "redstone_block");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:redstone_lamp", "redstone_lamp_on");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:redstone_ore", "redstone_ore");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:redstone_torch", "redstone_torch");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:redstone_wall_torch", "redstone_torch");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:redstone_wire", "redstone_dust_dot");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:repeater", "repeater");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:repeating_command_block", "repeating_command_block_front");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:rose_bush", "rose_bush");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:sand", "sand");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:sandstone", "sandstone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:sandstone_slab", "sandstone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:sandstone_stairs", "sandstone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:sea_grass", "sea_grass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:sea_lantern", "sea_lantern");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:sea_pickle", "sea_pickle");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:shulker_box", "shulker_top");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:sign", "sign");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:skeleton_skull", "skeleton_skull");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:skeleton_wall_skull", "skeleton_skull");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:slime_block", "slime_block");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:smooth_quartz", "quartz_block_top");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:smooth_red_sandstone", "cut_red_sandstone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:smooth_sandstone", "sandstone_top");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:smooth_stone", "stone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:snow", "snow");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:snow_block", "snow");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:soul_sand", "soul_sand");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:sponge", "sponge");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:spruce_bark", "spruce_log");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:spruce_button", "spruce_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:spruce_door", "spruce_door");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:spruce_fence", "spruce_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:spruce_fence_gate", "spruce_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:spruce_leaves", "spruce_leaves");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:spruce_log", "spruce_log");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:spruce_planks", "spruce_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:spruce_pressure_plate", "spruce_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:spruce_sapling", "spruce_sapling");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:spruce_slab", "spruce_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:spruce_stairs", "spruce_planks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:spruce_trapdoor", "spruce_trapdoor");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:sticky_piston", "piston_top_sticky");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:stone", "stone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:stone_brick_slab", "stone_bricks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:stone_brick_stairs", "stone_bricks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:stone_bricks", "stone_bricks");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:stone_button", "stone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:stone_pressure_plate", "stone");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:stone_slab", "stone_slab_side");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:stripped_acacia_log", "stripped_acacia_log");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:stripped_birch_log", "stripped_birch_log");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:stripped_dark_oak_log", "stripped_dark_oak_log");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:stripped_jungle_log", "stripped_jungle_log");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:stripped_oak_log", "stripped_oak_log");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:stripped_spruce_log", "stripped_spruce_log");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:structure_block", "structure_block");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:structure_void", "structure_void");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:sugar_cane", "sugar_cane");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:sunflower", "sunflower");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:tall_grass", "tall_grass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:tall_sea_grass", "tall_sea_grass_bottom");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:terracotta", "terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:three_turtle_eggs", "turtle_egg_not_cracked");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:tnt", "tnt_side");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:torch", "torch");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:trapped_chest", "trapped_chest");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:tripwire", "trip_wire");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:tripwire_hook", "trip_wire_hook");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:turtle_egg", "turtle_egg_not_cracked");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:two_turtle_eggs", "turtle_egg_not_cracked");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:vine", "vine");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:void_air", "");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:wall_banner", "");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:wall_sign", "sign");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:wall_torch", "torch");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:water", "water_still");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:wet_sponge", "wet_sponge");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:wheat", "wheat_stage7");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:white_banner", "");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:white_bed", "white_bed");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:white_carpet", "white_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:white_concrete", "white_concrete");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:white_concrete_powder", "white_concrete_powder");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:white_glazed_terracotta", "white_glazed_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:white_shulker_box", "shulker_top_white");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:white_stained_glass", "white_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:white_stained_glass_pane", "white_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:white_terracotta", "white_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:white_tulip", "white_tulip");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:white_wool", "white_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:wither_skeleton_skull", "wither_skeleton_skull");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:wither_skeleton_wall_skull", "wither_skeleton_skull");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:yellow_banner", "");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:yellow_bed", "yellow_bed");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:yellow_carpet", "yellow_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:yellow_concrete", "yellow_concrete");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:yellow_concrete_powder", "yellow_concrete_powder");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:yellow_coral", "yellow_coral");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:yellow_coral_fan", "yellow_coral_fan");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:yellow_coral_plant", "yellow_coral_plant");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:yellow_dead_coral", "yellow_dead_coral");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:yellow_glazed_terracotta", "yellow_glazed_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:yellow_shulker_box", "shulker_top_yellow");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:yellow_stained_glass", "yellow_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:yellow_stained_glass_pane", "yellow_stained_glass");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:yellow_terracotta", "yellow_terracotta");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:yellow_wool", "yellow_wool");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:zombie_head", "zombie_head");
            Diccionario_Bloques_Nombres_Texturas.Add("minecraft:zombie_wall_head", "zombie_head");*/ // Obsolete

            // 2018_04_09_01_19_34_841:
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_bark"], Color.FromArgb(255, 104, 99, 89));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_button"], Color.FromArgb(255, 168, 91, 50));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_door"], Color.FromArgb(255, 161, 93, 58));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_fence"], Color.FromArgb(255, 167, 90, 50));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_fence_gate"], Color.FromArgb(255, 169, 91, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_leaves"], Color.FromArgb(255, 169, 103, 76));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_log"], Color.FromArgb(255, 105, 99, 89));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_planks"], Color.FromArgb(255, 169, 92, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_pressure_plate"], Color.FromArgb(255, 171, 92, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_sapling"], Color.FromArgb(255, 115, 115, 20));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_slab"], Color.FromArgb(255, 168, 92, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_stairs"], Color.FromArgb(255, 170, 92, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_trapdoor"], Color.FromArgb(255, 157, 87, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:activator_rail"], Color.FromArgb(255, 104, 83, 71));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:air"], Color.FromArgb(0, 0, 0, 0));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:allium"], Color.FromArgb(255, 178, 141, 211));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:andesite"], Color.FromArgb(255, 131, 131, 131));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:anvil"], Color.FromArgb(255, 65, 65, 65));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:attached_melon_stem"], Color.FromArgb(255, 178, 159, 22));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:attached_pumpkin_stem"], Color.FromArgb(255, 179, 159, 22));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:azure_bluet"], Color.FromArgb(255, 162, 192, 139));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:banner"], Color.FromArgb(255, 237, 236, 236));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:barrier"], Color.FromArgb(255, 211, 25, 26));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:beacon"], Color.FromArgb(255, 117, 221, 216));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:bed"], Color.FromArgb(255, 177, 122, 122));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:bedrock"], Color.FromArgb(255, 84, 84, 84));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:beetroots"], Color.FromArgb(255, 81, 113, 54));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_bark"], Color.FromArgb(255, 206, 206, 201));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_button"], Color.FromArgb(255, 194, 177, 122));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_door"], Color.FromArgb(255, 218, 210, 176));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_fence"], Color.FromArgb(255, 193, 176, 121));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_fence_gate"], Color.FromArgb(255, 195, 179, 123));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_leaves"], Color.FromArgb(255, 132, 166, 95));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_log"], Color.FromArgb(255, 207, 206, 201));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_planks"], Color.FromArgb(255, 196, 179, 123));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_pressure_plate"], Color.FromArgb(255, 197, 181, 124));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_sapling"], Color.FromArgb(255, 119, 151, 85));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_slab"], Color.FromArgb(255, 196, 180, 124));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_stairs"], Color.FromArgb(255, 196, 180, 123));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_trapdoor"], Color.FromArgb(255, 207, 194, 157));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_banner"], Color.FromArgb(255, 8, 10, 14));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_bed"], Color.FromArgb(255, 118, 118, 121));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_carpet"], Color.FromArgb(255, 20, 21, 25));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_concrete"], Color.FromArgb(255, 8, 10, 15));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_concrete_powder"], Color.FromArgb(255, 25, 27, 32));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_glazed_terracotta"], Color.FromArgb(255, 68, 30, 32));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_shulker_box"], Color.FromArgb(255, 25, 25, 30));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_stained_glass"], Color.FromArgb(194, 25, 25, 25));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_stained_glass_pane"], Color.FromArgb(163, 25, 25, 25));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_terracotta"], Color.FromArgb(255, 37, 23, 16));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_wool"], Color.FromArgb(255, 21, 21, 26));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_banner"], Color.FromArgb(255, 45, 47, 142));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_bed"], Color.FromArgb(255, 128, 130, 177));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_carpet"], Color.FromArgb(255, 53, 57, 156));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_concrete"], Color.FromArgb(255, 45, 47, 143));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_concrete_powder"], Color.FromArgb(255, 70, 73, 167));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_coral"], Color.FromArgb(255, 49, 87, 207));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_coral_fan"], Color.FromArgb(255, 43, 79, 186));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_coral_plant"], Color.FromArgb(255, 48, 83, 197));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_dead_coral"], Color.FromArgb(255, 130, 123, 120));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_glazed_terracotta"], Color.FromArgb(255, 47, 65, 139));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_orchid"], Color.FromArgb(255, 38, 152, 138));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_shulker_box"], Color.FromArgb(255, 44, 46, 140));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_stained_glass"], Color.FromArgb(194, 50, 76, 178));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_stained_glass_pane"], Color.FromArgb(163, 51, 76, 178));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_terracotta"], Color.FromArgb(255, 74, 60, 91));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_wool"], Color.FromArgb(255, 53, 57, 157));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:bone_block"], Color.FromArgb(255, 225, 221, 201));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:bookshelf"], Color.FromArgb(255, 108, 88, 58));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brain_coral"], Color.FromArgb(255, 198, 85, 152));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brain_coral_block"], Color.FromArgb(255, 207, 91, 159));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brain_coral_fan"], Color.FromArgb(255, 203, 84, 154));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brewing_stand"], Color.FromArgb(255, 125, 103, 82));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brick_slab"], Color.FromArgb(255, 146, 99, 87));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brick_stairs"], Color.FromArgb(255, 146, 100, 87));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:bricks"], Color.FromArgb(255, 147, 100, 87));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_banner"], Color.FromArgb(255, 95, 60, 32));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_bed"], Color.FromArgb(255, 160, 139, 125));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_carpet"], Color.FromArgb(255, 113, 72, 41));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_concrete"], Color.FromArgb(255, 96, 60, 32));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_concrete_powder"], Color.FromArgb(255, 126, 85, 54));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_glazed_terracotta"], Color.FromArgb(255, 120, 106, 86));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_mushroom"], Color.FromArgb(255, 138, 106, 84));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_mushroom_block"], Color.FromArgb(255, 142, 107, 83));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_shulker_box"], Color.FromArgb(255, 106, 66, 36));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_stained_glass"], Color.FromArgb(194, 101, 76, 50));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_stained_glass_pane"], Color.FromArgb(163, 101, 76, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_terracotta"], Color.FromArgb(255, 77, 51, 36));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_wool"], Color.FromArgb(255, 114, 72, 41));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:bubble_column"], Color.FromArgb(206, 49, 72, 243));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:bubble_coral"], Color.FromArgb(255, 161, 24, 160));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:bubble_coral_block"], Color.FromArgb(255, 165, 26, 162));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:bubble_coral_fan"], Color.FromArgb(255, 160, 33, 159));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cactus"], Color.FromArgb(255, 14, 102, 25));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cake"], Color.FromArgb(255, 229, 206, 207));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:carrots"], Color.FromArgb(255, 21, 128, 2));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:carved_pumpkin"], Color.FromArgb(255, 142, 77, 13));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cauldron"], Color.FromArgb(255, 63, 63, 63));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cave_air"], Color.FromArgb(0, 2, 2, 2));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chain_command_block"], Color.FromArgb(255, 130, 159, 147));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chest"], Color.FromArgb(255, 118, 88, 42));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chipped_anvil"], Color.FromArgb(255, 64, 61, 61));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chiseled_quartz_block"], Color.FromArgb(255, 232, 228, 220));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chiseled_red_sandstone"], Color.FromArgb(255, 162, 83, 28));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chiseled_sandstone"], Color.FromArgb(255, 216, 208, 155));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chiseled_stone_bricks"], Color.FromArgb(255, 119, 119, 119));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chorus_flower"], Color.FromArgb(255, 134, 104, 134));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chorus_plant"], Color.FromArgb(255, 96, 60, 96));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:clay"], Color.FromArgb(255, 159, 164, 177));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:coal_block"], Color.FromArgb(255, 19, 19, 19));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:coal_ore"], Color.FromArgb(255, 115, 115, 115));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:coarse_dirt"], Color.FromArgb(255, 119, 86, 59));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cobblestone"], Color.FromArgb(255, 123, 123, 123));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cobblestone_slab"], Color.FromArgb(255, 122, 122, 123));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cobblestone_stairs"], Color.FromArgb(255, 122, 123, 123));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cobblestone_wall"], Color.FromArgb(255, 121, 121, 122));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cobweb"], Color.FromArgb(255, 220, 220, 220));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cocoa"], Color.FromArgb(255, 146, 81, 31));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:command_block"], Color.FromArgb(255, 172, 132, 109));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:comparator"], Color.FromArgb(255, 156, 151, 150));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cracked_stone_bricks"], Color.FromArgb(255, 118, 119, 119));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:crafting_table"], Color.FromArgb(255, 115, 95, 64));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:creeper_head"], Color.FromArgb(255, 87, 147, 79));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:creeper_wall_head"], Color.FromArgb(255, 87, 146, 79));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cut_red_sandstone"], Color.FromArgb(255, 168, 86, 30));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cut_sandstone"], Color.FromArgb(255, 220, 212, 162));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_banner"], Color.FromArgb(255, 21, 119, 135));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_bed"], Color.FromArgb(255, 115, 168, 174));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_carpet"], Color.FromArgb(255, 21, 138, 144));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_concrete"], Color.FromArgb(255, 21, 119, 136));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_concrete_powder"], Color.FromArgb(255, 37, 148, 157));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_glazed_terracotta"], Color.FromArgb(255, 52, 119, 125));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_shulker_box"], Color.FromArgb(255, 20, 121, 135));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_stained_glass"], Color.FromArgb(194, 76, 127, 152));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_stained_glass_pane"], Color.FromArgb(163, 76, 126, 153));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_terracotta"], Color.FromArgb(255, 87, 91, 91));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_wool"], Color.FromArgb(255, 21, 138, 145));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:damaged_anvil"], Color.FromArgb(255, 63, 61, 61));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dandelion"], Color.FromArgb(255, 108, 162, 1));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_bark"], Color.FromArgb(255, 51, 41, 23));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_button"], Color.FromArgb(255, 59, 39, 18));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_door"], Color.FromArgb(255, 70, 48, 25));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_fence"], Color.FromArgb(255, 60, 39, 18));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_fence_gate"], Color.FromArgb(255, 61, 39, 18));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_leaves"], Color.FromArgb(255, 85, 168, 48));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_log"], Color.FromArgb(255, 52, 41, 23));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_planks"], Color.FromArgb(255, 61, 40, 18));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_pressure_plate"], Color.FromArgb(255, 62, 40, 19));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_sapling"], Color.FromArgb(255, 57, 86, 28));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_slab"], Color.FromArgb(255, 60, 40, 17));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_stairs"], Color.FromArgb(255, 60, 40, 18));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_trapdoor"], Color.FromArgb(255, 75, 50, 23));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_prismarine"], Color.FromArgb(255, 60, 88, 75));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_prismarine_slab"], Color.FromArgb(255, 60, 88, 76));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_prismarine_stairs"], Color.FromArgb(255, 60, 87, 75));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:daylight_detector"], Color.FromArgb(255, 131, 116, 95));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dead_brain_coral_block"], Color.FromArgb(255, 124, 118, 114));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dead_bubble_coral_block"], Color.FromArgb(255, 132, 124, 119));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dead_bush"], Color.FromArgb(255, 124, 80, 25));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dead_fire_coral_block"], Color.FromArgb(255, 132, 124, 120));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dead_horn_coral_block"], Color.FromArgb(255, 134, 126, 122));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dead_tube_coral_block"], Color.FromArgb(255, 130, 123, 120));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:detector_rail"], Color.FromArgb(255, 120, 101, 89));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:diamond_block"], Color.FromArgb(255, 98, 219, 214));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:diamond_ore"], Color.FromArgb(255, 129, 140, 143));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:diorite"], Color.FromArgb(255, 180, 180, 183));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dirt"], Color.FromArgb(255, 134, 96, 67));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dispenser"], Color.FromArgb(255, 117, 117, 117));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dragon_egg"], Color.FromArgb(255, 13, 9, 16));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dragon_head"], Color.FromArgb(255, 53, 33, 57));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dragon_wall_head"], Color.FromArgb(255, 53, 33, 56));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dried_kelp_block"], Color.FromArgb(255, 38, 49, 30));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dropper"], Color.FromArgb(255, 116, 117, 117));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:emerald_block"], Color.FromArgb(255, 81, 217, 117));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:emerald_ore"], Color.FromArgb(255, 110, 129, 116));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:enchanting_table"], Color.FromArgb(255, 42, 44, 46));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:end_gateway"], Color.FromArgb(255, 0, 64, 32));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:end_portal"], Color.FromArgb(255, 6, 15, 24));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:end_portal_frame"], Color.FromArgb(255, 148, 160, 124));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:end_rod"], Color.FromArgb(255, 220, 198, 206));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:end_stone"], Color.FromArgb(255, 221, 224, 165));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:end_stone_bricks"], Color.FromArgb(255, 226, 231, 171));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:ender_chest"], Color.FromArgb(255, 34, 49, 44));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:farmland"], Color.FromArgb(255, 115, 76, 45));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:fern"], Color.FromArgb(255, 79, 194, 29));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:fire"], Color.FromArgb(255, 213, 142, 53));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:fire_coral"], Color.FromArgb(255, 167, 38, 47));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:fire_coral_block"], Color.FromArgb(255, 164, 35, 47));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:fire_coral_fan"], Color.FromArgb(255, 159, 35, 46));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:flower_pot"], Color.FromArgb(255, 119, 66, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:flowing_lava"], Color.FromArgb(255, 207, 92, 21));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:flowing_water"], Color.FromArgb(206, 49, 72, 244));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:four_turtle_eggs"], Color.FromArgb(255, 226, 226, 190));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:frosted_ice"], Color.FromArgb(159, 147, 187, 254));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:furnace"], Color.FromArgb(255, 78, 78, 78));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:glass"], Color.FromArgb(255, 218, 241, 244));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:glass_pane"], Color.FromArgb(255, 229, 247, 250));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:glowstone"], Color.FromArgb(255, 144, 118, 70));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gold_block"], Color.FromArgb(255, 249, 236, 79));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gold_ore"], Color.FromArgb(255, 143, 140, 125));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:granite"], Color.FromArgb(255, 153, 114, 99));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:grass"], Color.FromArgb(255, 84, 209, 29));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:grass_block"], Color.FromArgb(255, 112, 179, 79));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:grass_path"], Color.FromArgb(255, 150, 125, 71));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gravel"], Color.FromArgb(255, 127, 124, 123));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_banner"], Color.FromArgb(255, 55, 58, 61));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_bed"], Color.FromArgb(255, 134, 136, 138));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_carpet"], Color.FromArgb(255, 63, 68, 71));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_concrete"], Color.FromArgb(255, 55, 58, 62));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_concrete_powder"], Color.FromArgb(255, 77, 81, 85));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_glazed_terracotta"], Color.FromArgb(255, 83, 90, 94));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_shulker_box"], Color.FromArgb(255, 55, 59, 62));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_stained_glass"], Color.FromArgb(194, 76, 76, 76));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_stained_glass_pane"], Color.FromArgb(163, 76, 76, 76));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_terracotta"], Color.FromArgb(255, 58, 42, 36));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_wool"], Color.FromArgb(255, 63, 68, 72));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_banner"], Color.FromArgb(255, 73, 90, 36));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_bed"], Color.FromArgb(255, 146, 157, 121));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_carpet"], Color.FromArgb(255, 84, 109, 27));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_concrete"], Color.FromArgb(255, 73, 91, 36));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_concrete_powder"], Color.FromArgb(255, 97, 119, 45));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_glazed_terracotta"], Color.FromArgb(255, 117, 142, 67));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_shulker_box"], Color.FromArgb(255, 79, 101, 32));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_stained_glass"], Color.FromArgb(194, 101, 127, 50));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_stained_glass_pane"], Color.FromArgb(163, 101, 126, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_terracotta"], Color.FromArgb(255, 76, 83, 42));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_wool"], Color.FromArgb(255, 85, 110, 28));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:hay_block"], Color.FromArgb(255, 158, 117, 18));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:heavy_weighted_pressure_plate"], Color.FromArgb(255, 229, 229, 229));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:hopper"], Color.FromArgb(255, 62, 63, 63));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:horn_coral"], Color.FromArgb(255, 209, 186, 63));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:horn_coral_block"], Color.FromArgb(255, 216, 200, 66));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:horn_coral_fan"], Color.FromArgb(255, 206, 183, 61));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:ice"], Color.FromArgb(159, 125, 172, 254));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_chiseled_stone_bricks"], Color.FromArgb(255, 119, 119, 118));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_cobblestone"], Color.FromArgb(255, 123, 123, 122));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_cracked_stone_bricks"], Color.FromArgb(255, 119, 118, 118));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_mossy_stone_bricks"], Color.FromArgb(255, 115, 118, 106));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_stone"], Color.FromArgb(255, 124, 125, 125));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_stone_bricks"], Color.FromArgb(255, 122, 122, 121));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:iron_bars"], Color.FromArgb(255, 110, 108, 106));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:iron_block"], Color.FromArgb(255, 219, 219, 219));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:iron_door"], Color.FromArgb(255, 187, 187, 187));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:iron_ore"], Color.FromArgb(255, 136, 130, 127));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:iron_trapdoor"], Color.FromArgb(255, 200, 200, 200));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jack_o_lantern"], Color.FromArgb(255, 185, 133, 28));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jukebox"], Color.FromArgb(255, 107, 73, 55));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_bark"], Color.FromArgb(255, 86, 68, 27));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_button"], Color.FromArgb(255, 149, 107, 74));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_door"], Color.FromArgb(255, 157, 115, 85));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_fence"], Color.FromArgb(255, 150, 107, 74));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_fence_gate"], Color.FromArgb(255, 153, 110, 76));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_leaves"], Color.FromArgb(255, 84, 169, 79));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_log"], Color.FromArgb(255, 87, 68, 27));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_planks"], Color.FromArgb(255, 154, 110, 77));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_pressure_plate"], Color.FromArgb(255, 156, 112, 78));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_sapling"], Color.FromArgb(255, 49, 86, 19));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_slab"], Color.FromArgb(255, 155, 111, 78));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_stairs"], Color.FromArgb(255, 154, 111, 77));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_trapdoor"], Color.FromArgb(255, 153, 110, 77));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:kelp"], Color.FromArgb(255, 87, 131, 43));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:kelp_top"], Color.FromArgb(255, 88, 142, 45));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:ladder"], Color.FromArgb(255, 121, 95, 53));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lapis_block"], Color.FromArgb(255, 39, 67, 138));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lapis_ore"], Color.FromArgb(255, 102, 112, 135));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:large_fern"], Color.FromArgb(255, 81, 199, 29));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lava"], Color.FromArgb(255, 217, 105, 26));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lever"], Color.FromArgb(255, 106, 89, 64));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_banner"], Color.FromArgb(255, 36, 137, 198));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_bed"], Color.FromArgb(255, 132, 187, 212));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_carpet"], Color.FromArgb(255, 58, 175, 218));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_concrete"], Color.FromArgb(255, 36, 137, 199));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_concrete_powder"], Color.FromArgb(255, 74, 181, 213));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_glazed_terracotta"], Color.FromArgb(255, 95, 165, 209));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_shulker_box"], Color.FromArgb(255, 49, 164, 212));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_stained_glass"], Color.FromArgb(194, 101, 152, 215));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_stained_glass_pane"], Color.FromArgb(163, 101, 153, 215));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_terracotta"], Color.FromArgb(255, 113, 109, 138));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_wool"], Color.FromArgb(255, 58, 175, 217));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_banner"], Color.FromArgb(255, 124, 125, 115));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_bed"], Color.FromArgb(255, 169, 168, 164));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_carpet"], Color.FromArgb(255, 141, 142, 135));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_concrete"], Color.FromArgb(255, 125, 125, 115));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_concrete_powder"], Color.FromArgb(255, 155, 155, 148));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_glazed_terracotta"], Color.FromArgb(255, 144, 166, 168));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_shulker_box"], Color.FromArgb(255, 124, 124, 115));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_stained_glass"], Color.FromArgb(194, 152, 152, 152));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_stained_glass_pane"], Color.FromArgb(163, 153, 153, 153));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_terracotta"], Color.FromArgb(255, 135, 107, 97));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_wool"], Color.FromArgb(255, 142, 142, 135));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_weighted_pressure_plate"], Color.FromArgb(255, 254, 246, 85));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lilac"], Color.FromArgb(255, 148, 148, 140));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lily_pad"], Color.FromArgb(255, 40, 159, 60));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_banner"], Color.FromArgb(255, 94, 168, 24));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_bed"], Color.FromArgb(255, 157, 192, 120));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_carpet"], Color.FromArgb(255, 112, 185, 25));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_concrete"], Color.FromArgb(255, 94, 169, 24));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_concrete_powder"], Color.FromArgb(255, 125, 189, 42));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_glazed_terracotta"], Color.FromArgb(255, 163, 198, 55));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_shulker_box"], Color.FromArgb(255, 100, 173, 23));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_stained_glass"], Color.FromArgb(194, 127, 203, 25));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_stained_glass_pane"], Color.FromArgb(163, 126, 203, 25));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_terracotta"], Color.FromArgb(255, 104, 118, 53));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_wool"], Color.FromArgb(255, 112, 185, 26));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_banner"], Color.FromArgb(255, 168, 48, 159));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_bed"], Color.FromArgb(255, 193, 134, 189));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_carpet"], Color.FromArgb(255, 189, 68, 179));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_concrete"], Color.FromArgb(255, 169, 48, 159));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_concrete_powder"], Color.FromArgb(255, 193, 84, 185));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_glazed_terracotta"], Color.FromArgb(255, 208, 100, 192));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_shulker_box"], Color.FromArgb(255, 174, 54, 164));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_stained_glass"], Color.FromArgb(194, 178, 76, 215));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_stained_glass_pane"], Color.FromArgb(163, 178, 76, 215));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_terracotta"], Color.FromArgb(255, 150, 88, 109));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_wool"], Color.FromArgb(255, 190, 69, 180));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magma_block"], Color.FromArgb(255, 135, 65, 25));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:melon_block"], Color.FromArgb(255, 141, 146, 36));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:melon_stem"], Color.FromArgb(255, 154, 154, 154));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:mob_spawner"], Color.FromArgb(255, 26, 40, 49));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:mossy_cobblestone"], Color.FromArgb(255, 104, 121, 104));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:mossy_cobblestone_wall"], Color.FromArgb(255, 101, 120, 101));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:mossy_stone_bricks"], Color.FromArgb(255, 115, 119, 106));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:moving_piston"], Color.FromArgb(255, 109, 104, 96));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:mushroom_stem"], Color.FromArgb(255, 208, 204, 194));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:mycelium"], Color.FromArgb(255, 111, 100, 105));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_brick_fence"], Color.FromArgb(255, 44, 23, 27));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_brick_slab"], Color.FromArgb(255, 43, 22, 26));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_brick_stairs"], Color.FromArgb(255, 44, 22, 26));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_bricks"], Color.FromArgb(255, 45, 23, 27));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_quartz_ore"], Color.FromArgb(255, 125, 85, 80));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_wart"], Color.FromArgb(255, 112, 19, 17));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_wart_block"], Color.FromArgb(255, 117, 6, 7));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:netherrack"], Color.FromArgb(255, 111, 54, 53));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:note_block"], Color.FromArgb(255, 101, 68, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_bark"], Color.FromArgb(255, 101, 81, 50));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_button"], Color.FromArgb(255, 153, 124, 76));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_door"], Color.FromArgb(255, 135, 103, 52));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_fence"], Color.FromArgb(255, 153, 125, 77));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_fence_gate"], Color.FromArgb(255, 156, 127, 78));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_leaves"], Color.FromArgb(255, 85, 204, 33));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_log"], Color.FromArgb(255, 102, 81, 50));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_planks"], Color.FromArgb(255, 157, 128, 79));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_pressure_plate"], Color.FromArgb(255, 158, 129, 79));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_sapling"], Color.FromArgb(255, 72, 102, 38));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_slab"], Color.FromArgb(255, 156, 127, 79));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_stairs"], Color.FromArgb(255, 156, 128, 79));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_trapdoor"], Color.FromArgb(255, 127, 93, 46));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:observer"], Color.FromArgb(255, 102, 102, 102));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:obsidian"], Color.FromArgb(255, 20, 18, 30));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_banner"], Color.FromArgb(255, 223, 97, 1));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_bed"], Color.FromArgb(255, 221, 160, 112));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_carpet"], Color.FromArgb(255, 241, 118, 19));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_concrete"], Color.FromArgb(255, 224, 97, 1));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_concrete_powder"], Color.FromArgb(255, 227, 132, 32));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_glazed_terracotta"], Color.FromArgb(255, 155, 147, 92));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_shulker_box"], Color.FromArgb(255, 234, 106, 9));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_stained_glass"], Color.FromArgb(194, 215, 127, 50));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_stained_glass_pane"], Color.FromArgb(163, 215, 126, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_terracotta"], Color.FromArgb(255, 162, 84, 38));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_tulip"], Color.FromArgb(255, 96, 134, 32));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_wool"], Color.FromArgb(255, 241, 118, 20));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oxeye_daisy"], Color.FromArgb(255, 176, 198, 139));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:packed_ice"], Color.FromArgb(255, 165, 195, 245));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:peony"], Color.FromArgb(255, 132, 134, 142));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:petrified_oak_slab"], Color.FromArgb(255, 157, 128, 78));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_banner"], Color.FromArgb(255, 213, 101, 143));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_bed"], Color.FromArgb(255, 219, 168, 185));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_carpet"], Color.FromArgb(255, 238, 142, 173));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_concrete"], Color.FromArgb(255, 214, 101, 143));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_concrete_powder"], Color.FromArgb(255, 229, 153, 181));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_coral"], Color.FromArgb(255, 207, 91, 159));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_coral_fan"], Color.FromArgb(255, 182, 64, 137));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_coral_plant"], Color.FromArgb(255, 198, 85, 152));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_dead_coral"], Color.FromArgb(255, 124, 118, 114));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_glazed_terracotta"], Color.FromArgb(255, 235, 155, 182));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_shulker_box"], Color.FromArgb(255, 230, 122, 158));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_stained_glass"], Color.FromArgb(194, 242, 127, 164));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_stained_glass_pane"], Color.FromArgb(163, 242, 126, 164));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_terracotta"], Color.FromArgb(255, 162, 78, 79));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_tulip"], Color.FromArgb(255, 101, 150, 73));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_wool"], Color.FromArgb(255, 238, 141, 172));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:piston"], Color.FromArgb(255, 154, 129, 90));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:piston_head"], Color.FromArgb(255, 148, 130, 101));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:player_head"], Color.FromArgb(255, 124, 87, 69));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:player_wall_head"], Color.FromArgb(255, 123, 87, 69));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:podzol"], Color.FromArgb(255, 91, 63, 29));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:polished_andesite"], Color.FromArgb(255, 133, 133, 135));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:polished_diorite"], Color.FromArgb(255, 183, 183, 186));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:polished_granite"], Color.FromArgb(255, 159, 115, 98));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:poppy"], Color.FromArgb(255, 101, 58, 4));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:portal"], Color.FromArgb(229, 91, 13, 193));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:potatoes"], Color.FromArgb(255, 35, 171, 36));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:potted_red_mushroom"], Color.FromArgb(255, 154, 61, 52));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:powered_rail"], Color.FromArgb(255, 132, 108, 72));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine"], Color.FromArgb(255, 107, 170, 151));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine_bricks"], Color.FromArgb(255, 100, 160, 143));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine_bricks_slab"], Color.FromArgb(255, 98, 158, 141));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine_bricks_stairs"], Color.FromArgb(255, 99, 159, 142));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine_slab"], Color.FromArgb(255, 107, 170, 152));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine_stairs"], Color.FromArgb(255, 107, 171, 152));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pumpkin"], Color.FromArgb(255, 197, 121, 24));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pumpkin_stem"], Color.FromArgb(255, 192, 170, 24));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_banner"], Color.FromArgb(255, 100, 32, 155));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_bed"], Color.FromArgb(255, 159, 124, 186));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_carpet"], Color.FromArgb(255, 121, 41, 171));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_concrete"], Color.FromArgb(255, 100, 32, 156));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_concrete_powder"], Color.FromArgb(255, 132, 56, 178));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_coral"], Color.FromArgb(255, 165, 26, 162));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_coral_fan"], Color.FromArgb(255, 140, 22, 143));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_coral_plant"], Color.FromArgb(255, 161, 24, 160));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_dead_coral"], Color.FromArgb(255, 132, 124, 119));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_glazed_terracotta"], Color.FromArgb(255, 110, 48, 152));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_shulker_box"], Color.FromArgb(255, 103, 32, 156));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_stained_glass"], Color.FromArgb(194, 127, 62, 178));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_stained_glass_pane"], Color.FromArgb(163, 126, 62, 178));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_terracotta"], Color.FromArgb(255, 118, 70, 86));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_wool"], Color.FromArgb(255, 122, 42, 173));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purpur_block"], Color.FromArgb(255, 166, 122, 166));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purpur_pillar"], Color.FromArgb(255, 170, 126, 170));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purpur_slab"], Color.FromArgb(255, 167, 123, 167));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purpur_stairs"], Color.FromArgb(255, 167, 122, 167));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:quartz_block"], Color.FromArgb(255, 236, 233, 226));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:quartz_pillar"], Color.FromArgb(255, 231, 228, 220));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:quartz_slab"], Color.FromArgb(255, 234, 232, 225));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:quartz_stairs"], Color.FromArgb(255, 235, 232, 225));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:rail"], Color.FromArgb(255, 121, 109, 89));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_banner"], Color.FromArgb(255, 141, 33, 33));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_bed"], Color.FromArgb(255, 178, 122, 122));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_carpet"], Color.FromArgb(255, 160, 39, 34));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_concrete"], Color.FromArgb(255, 142, 33, 33));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_concrete_powder"], Color.FromArgb(255, 168, 54, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_coral"], Color.FromArgb(255, 164, 35, 47));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_coral_fan"], Color.FromArgb(255, 159, 35, 46));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_coral_plant"], Color.FromArgb(255, 167, 38, 47));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_dead_coral"], Color.FromArgb(255, 132, 124, 120));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_glazed_terracotta"], Color.FromArgb(255, 182, 60, 53));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_mushroom"], Color.FromArgb(255, 195, 54, 56));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_mushroom_block"], Color.FromArgb(255, 183, 38, 36));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_nether_bricks"], Color.FromArgb(255, 68, 4, 7));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_sand"], Color.FromArgb(255, 169, 88, 33));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_sandstone"], Color.FromArgb(255, 166, 85, 30));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_sandstone_slab"], Color.FromArgb(255, 165, 84, 29));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_sandstone_stairs"], Color.FromArgb(255, 166, 84, 30));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_shulker_box"], Color.FromArgb(255, 140, 31, 30));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_stained_glass"], Color.FromArgb(194, 152, 50, 50));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_stained_glass_pane"], Color.FromArgb(163, 153, 51, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_terracotta"], Color.FromArgb(255, 143, 61, 47));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_tulip"], Color.FromArgb(255, 103, 135, 39));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_wool"], Color.FromArgb(255, 161, 39, 35));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:redstone_block"], Color.FromArgb(255, 171, 28, 9));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:redstone_lamp"], Color.FromArgb(255, 70, 43, 27));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:redstone_ore"], Color.FromArgb(255, 133, 107, 107));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:redstone_torch"], Color.FromArgb(255, 168, 76, 41));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:redstone_wall_torch"], Color.FromArgb(255, 167, 76, 41));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:redstone_wire"], Color.FromArgb(255, 53, 0, 0));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:repeater"], Color.FromArgb(255, 151, 147, 147));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:repeating_command_block"], Color.FromArgb(255, 124, 107, 172));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:rose_bush"], Color.FromArgb(255, 116, 61, 8));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sand"], Color.FromArgb(255, 219, 211, 160));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sandstone"], Color.FromArgb(255, 217, 210, 157));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sandstone_slab"], Color.FromArgb(255, 216, 209, 156));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sandstone_stairs"], Color.FromArgb(255, 217, 209, 157));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sea_grass"], Color.FromArgb(255, 51, 126, 9));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sea_lantern"], Color.FromArgb(255, 172, 200, 191));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sea_pickle"], Color.FromArgb(255, 90, 97, 40));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:shulker_box"], Color.FromArgb(255, 139, 97, 139));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sign"], Color.FromArgb(255, 153, 125, 75));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:skeleton_skull"], Color.FromArgb(255, 153, 153, 153));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:skeleton_wall_skull"], Color.FromArgb(255, 152, 153, 153));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:slime_block"], Color.FromArgb(188, 120, 200, 101));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:smooth_quartz"], Color.FromArgb(255, 235, 233, 226));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:smooth_red_sandstone"], Color.FromArgb(255, 167, 85, 30));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:smooth_sandstone"], Color.FromArgb(255, 218, 210, 159));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:smooth_stone"], Color.FromArgb(255, 159, 159, 159));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:snow"], Color.FromArgb(255, 241, 251, 251));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:snow_block"], Color.FromArgb(255, 240, 251, 251));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:soul_sand"], Color.FromArgb(255, 85, 64, 52));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sponge"], Color.FromArgb(255, 195, 196, 85));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_bark"], Color.FromArgb(255, 45, 29, 12));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_button"], Color.FromArgb(255, 100, 76, 46));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_door"], Color.FromArgb(255, 96, 75, 49));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_fence"], Color.FromArgb(255, 101, 76, 46));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_fence_gate"], Color.FromArgb(255, 103, 78, 47));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_leaves"], Color.FromArgb(255, 96, 145, 96));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_log"], Color.FromArgb(255, 46, 29, 12));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_planks"], Color.FromArgb(255, 104, 78, 47));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_pressure_plate"], Color.FromArgb(255, 105, 79, 47));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_sapling"], Color.FromArgb(255, 51, 58, 34));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_slab"], Color.FromArgb(255, 103, 77, 46));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_stairs"], Color.FromArgb(255, 103, 77, 47));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_trapdoor"], Color.FromArgb(255, 100, 76, 49));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sticky_piston"], Color.FromArgb(255, 142, 146, 100));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone"], Color.FromArgb(255, 125, 125, 125));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone_brick_slab"], Color.FromArgb(255, 121, 122, 122));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone_brick_stairs"], Color.FromArgb(255, 121, 121, 121));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone_bricks"], Color.FromArgb(255, 122, 122, 122));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone_button"], Color.FromArgb(255, 124, 124, 124));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone_pressure_plate"], Color.FromArgb(255, 126, 126, 126));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone_slab"], Color.FromArgb(255, 167, 167, 167));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stripped_acacia_log"], Color.FromArgb(255, 175, 93, 60));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stripped_birch_log"], Color.FromArgb(255, 197, 176, 118));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stripped_dark_oak_log"], Color.FromArgb(255, 97, 76, 50));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stripped_jungle_log"], Color.FromArgb(255, 170, 132, 83));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stripped_oak_log"], Color.FromArgb(255, 177, 144, 86));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stripped_spruce_log"], Color.FromArgb(255, 116, 90, 52));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:structure_block"], Color.FromArgb(255, 89, 74, 90));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:structure_void"], Color.FromArgb(255, 31, 91, 96));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sugar_cane"], Color.FromArgb(255, 149, 193, 101));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sunflower"], Color.FromArgb(255, 201, 181, 36));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tall_grass"], Color.FromArgb(255, 90, 214, 35));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tall_sea_grass"], Color.FromArgb(255, 46, 118, 4));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:terracotta"], Color.FromArgb(255, 151, 93, 67));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:three_turtle_eggs"], Color.FromArgb(255, 226, 225, 189));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tnt"], Color.FromArgb(255, 170, 93, 71));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:torch"], Color.FromArgb(255, 130, 106, 58));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:trapped_chest"], Color.FromArgb(255, 119, 88, 42));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tripwire"], Color.FromArgb(226, 129, 129, 129));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tripwire_hook"], Color.FromArgb(255, 139, 129, 114));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tube_coral"], Color.FromArgb(255, 48, 83, 197));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tube_coral_block"], Color.FromArgb(255, 49, 87, 207));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tube_coral_fan"], Color.FromArgb(255, 51, 92, 209));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:turtle_egg"], Color.FromArgb(255, 227, 225, 185));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:two_turtle_eggs"], Color.FromArgb(255, 225, 226, 190));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:vine"], Color.FromArgb(255, 58, 136, 65));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:void_air"], Color.FromArgb(0, 1, 1, 1));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wall_banner"], Color.FromArgb(255, 236, 235, 236));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wall_sign"], Color.FromArgb(255, 158, 130, 78));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wall_torch"], Color.FromArgb(255, 129, 106, 58));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:water"], Color.FromArgb(223, 47, 67, 244));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wet_sponge"], Color.FromArgb(255, 160, 159, 63));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wheat"], Color.FromArgb(255, 87, 102, 8));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_banner"], Color.FromArgb(255, 236, 236, 236));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_bed"], Color.FromArgb(255, 214, 216, 216));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_carpet"], Color.FromArgb(255, 234, 236, 236));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_concrete"], Color.FromArgb(255, 207, 213, 214));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_concrete_powder"], Color.FromArgb(255, 226, 227, 228));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_glazed_terracotta"], Color.FromArgb(255, 188, 212, 203));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_shulker_box"], Color.FromArgb(255, 216, 221, 221));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_stained_glass"], Color.FromArgb(194, 254, 254, 254));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_stained_glass_pane"], Color.FromArgb(163, 254, 254, 254));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_terracotta"], Color.FromArgb(255, 210, 178, 161));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_tulip"], Color.FromArgb(255, 95, 153, 66));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_wool"], Color.FromArgb(255, 234, 236, 237));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wither_skeleton_skull"], Color.FromArgb(255, 46, 47, 47));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wither_skeleton_wall_skull"], Color.FromArgb(255, 46, 46, 47));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_banner"], Color.FromArgb(255, 240, 175, 21));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_bed"], Color.FromArgb(255, 228, 200, 123));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_carpet"], Color.FromArgb(255, 248, 198, 40));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_concrete"], Color.FromArgb(255, 241, 175, 21));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_concrete_powder"], Color.FromArgb(255, 233, 199, 55));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_coral"], Color.FromArgb(255, 216, 200, 66));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_coral_fan"], Color.FromArgb(255, 201, 171, 58));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_coral_plant"], Color.FromArgb(255, 209, 186, 63));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_dead_coral"], Color.FromArgb(255, 134, 126, 122));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_glazed_terracotta"], Color.FromArgb(255, 234, 192, 89));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_shulker_box"], Color.FromArgb(255, 248, 189, 29));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_stained_glass"], Color.FromArgb(194, 229, 229, 50));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_stained_glass_pane"], Color.FromArgb(163, 228, 228, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_terracotta"], Color.FromArgb(255, 186, 133, 35));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_wool"], Color.FromArgb(255, 249, 198, 40));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:zombie_head"], Color.FromArgb(255, 76, 112, 58));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:zombie_wall_head"], Color.FromArgb(255, 76, 111, 58));
            
            // 2018_04_09_01_19_30_450:
            /*Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_bark"], Color.FromArgb(255, 105, 99, 89));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_button"], Color.FromArgb(255, 169, 92, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_door"], Color.FromArgb(255, 158, 91, 56));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_fence"], Color.FromArgb(255, 169, 92, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_fence_gate"], Color.FromArgb(255, 169, 92, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_leaves"], Color.FromArgb(255, 155, 91, 64)); // Color.FromArgb(255, 135, 135, 135)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_log"], Color.FromArgb(255, 105, 99, 89));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_planks"], Color.FromArgb(255, 169, 92, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_pressure_plate"], Color.FromArgb(255, 169, 92, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_sapling"], Color.FromArgb(255, 115, 115, 20));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_slab"], Color.FromArgb(255, 169, 92, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_stairs"], Color.FromArgb(255, 169, 92, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_trapdoor"], Color.FromArgb(255, 157, 87, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:activator_rail"], Color.FromArgb(255, 104, 83, 71));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:air"], Color.FromArgb(255, 0, 0, 0));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:allium"], Color.FromArgb(255, 178, 141, 211));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:andesite"], Color.FromArgb(255, 131, 131, 131));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:anvil"], Color.FromArgb(255, 65, 65, 65));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:attached_melon_stem"], Color.FromArgb(255, 112, 99, 13)); // Color.FromArgb(255, 139, 139, 139)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:attached_pumpkin_stem"], Color.FromArgb(255, 112, 99, 13)); // Color.FromArgb(255, 139, 139, 139)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:azure_bluet"], Color.FromArgb(255, 162, 192, 139));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:banner"], Color.FromArgb(255, 207, 213, 214)); // Color.FromArgb(255, 0, 0, 0)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:barrier"], Color.FromArgb(255, 211, 25, 26));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:beacon"], Color.FromArgb(255, 117, 221, 216));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:bed"], Color.FromArgb(255, 137, 86, 62));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:bedrock"], Color.FromArgb(255, 84, 84, 84));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:beetroots"], Color.FromArgb(255, 81, 113, 54));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_bark"], Color.FromArgb(255, 207, 206, 201));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_button"], Color.FromArgb(255, 196, 179, 123));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_door"], Color.FromArgb(255, 211, 202, 159));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_fence"], Color.FromArgb(255, 196, 179, 123));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_fence_gate"], Color.FromArgb(255, 196, 179, 123));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_leaves"], Color.FromArgb(255, 128, 167, 85)); // Color.FromArgb(255, 135, 135, 135)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_log"], Color.FromArgb(255, 207, 206, 201));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_planks"], Color.FromArgb(255, 196, 179, 123));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_pressure_plate"], Color.FromArgb(255, 196, 179, 123));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_sapling"], Color.FromArgb(255, 119, 151, 85));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_slab"], Color.FromArgb(255, 196, 179, 123));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_stairs"], Color.FromArgb(255, 196, 179, 123));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_trapdoor"], Color.FromArgb(255, 207, 194, 157));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_banner"], Color.FromArgb(255, 8, 10, 15)); // Color.FromArgb(255, 0, 0, 0)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_bed"], Color.FromArgb(255, 99, 84, 62));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_carpet"], Color.FromArgb(255, 21, 21, 26));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_concrete"], Color.FromArgb(255, 8, 10, 15));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_concrete_powder"], Color.FromArgb(255, 25, 27, 32));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_glazed_terracotta"], Color.FromArgb(255, 68, 30, 32));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_shulker_box"], Color.FromArgb(255, 25, 25, 30));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_stained_glass"], Color.FromArgb(194, 25, 25, 25));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_stained_glass_pane"], Color.FromArgb(194, 25, 25, 25));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_terracotta"], Color.FromArgb(255, 37, 23, 16));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_wool"], Color.FromArgb(255, 21, 21, 26));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_banner"], Color.FromArgb(255, 45, 47, 143)); // Color.FromArgb(255, 0, 0, 0)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_bed"], Color.FromArgb(255, 105, 91, 98));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_carpet"], Color.FromArgb(255, 53, 57, 157));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_concrete"], Color.FromArgb(255, 45, 47, 143));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_concrete_powder"], Color.FromArgb(255, 70, 73, 167));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_coral"], Color.FromArgb(255, 49, 87, 207));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_coral_fan"], Color.FromArgb(255, 43, 79, 186));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_coral_plant"], Color.FromArgb(255, 48, 83, 197));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_dead_coral"], Color.FromArgb(255, 130, 123, 120));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_glazed_terracotta"], Color.FromArgb(255, 47, 65, 139));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_orchid"], Color.FromArgb(255, 38, 152, 138));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_shulker_box"], Color.FromArgb(255, 44, 46, 140));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_stained_glass"], Color.FromArgb(194, 50, 76, 178));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_stained_glass_pane"], Color.FromArgb(194, 50, 76, 178));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_terracotta"], Color.FromArgb(255, 74, 60, 91));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_wool"], Color.FromArgb(255, 53, 57, 157));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:bone_block"], Color.FromArgb(255, 225, 221, 201));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:bookshelf"], Color.FromArgb(255, 108, 88, 58));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brewing_stand"], Color.FromArgb(255, 125, 103, 82));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brick_slab"], Color.FromArgb(255, 147, 100, 87));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brick_stairs"], Color.FromArgb(255, 147, 100, 87));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:bricks"], Color.FromArgb(255, 147, 100, 87));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_banner"], Color.FromArgb(255, 96, 60, 32)); // Color.FromArgb(255, 0, 0, 0)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_bed"], Color.FromArgb(255, 126, 98, 64));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_carpet"], Color.FromArgb(255, 114, 72, 41));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_concrete"], Color.FromArgb(255, 96, 60, 32));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_concrete_powder"], Color.FromArgb(255, 126, 85, 54));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_glazed_terracotta"], Color.FromArgb(255, 120, 106, 86));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_mushroom"], Color.FromArgb(255, 138, 106, 84));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_mushroom_block"], Color.FromArgb(255, 142, 107, 83));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_shulker_box"], Color.FromArgb(255, 106, 66, 36));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_stained_glass"], Color.FromArgb(194, 101, 76, 50));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_stained_glass_pane"], Color.FromArgb(194, 101, 76, 50));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_terracotta"], Color.FromArgb(255, 77, 51, 36));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_wool"], Color.FromArgb(255, 114, 72, 41));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:bubble_column"], Color.FromArgb(211, 49, 71, 244));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cactus"], Color.FromArgb(255, 14, 102, 25));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cake"], Color.FromArgb(255, 229, 206, 207));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:carrots"], Color.FromArgb(255, 21, 128, 2));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:carved_pumpkin"], Color.FromArgb(255, 142, 77, 13));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cauldron"], Color.FromArgb(255, 63, 63, 63));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cave_air"], Color.FromArgb(255, 0, 0, 0));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chain_command_block"], Color.FromArgb(255, 130, 159, 147));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chest"], Color.FromArgb(255, 105, 78, 35));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chipped_anvil"], Color.FromArgb(255, 64, 61, 61));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chiseled_quartz_block"], Color.FromArgb(255, 232, 228, 220));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chiseled_red_sandstone"], Color.FromArgb(255, 162, 83, 28));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chiseled_sandstone"], Color.FromArgb(255, 216, 208, 155));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chiseled_stone_bricks"], Color.FromArgb(255, 119, 119, 119));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chorus_flower"], Color.FromArgb(255, 134, 104, 134));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chorus_plant"], Color.FromArgb(255, 96, 60, 96));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:clay"], Color.FromArgb(255, 159, 164, 177));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:coal_block"], Color.FromArgb(255, 19, 19, 19));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:coal_ore"], Color.FromArgb(255, 115, 115, 115));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:coarse_dirt"], Color.FromArgb(255, 119, 86, 59));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cobblestone"], Color.FromArgb(255, 123, 123, 123));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cobblestone_slab"], Color.FromArgb(255, 123, 123, 123));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cobblestone_stairs"], Color.FromArgb(255, 123, 123, 123));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cobblestone_wall"], Color.FromArgb(255, 123, 123, 123));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cobweb"], Color.FromArgb(255, 220, 220, 220));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cocoa"], Color.FromArgb(255, 146, 81, 31));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:command_block"], Color.FromArgb(255, 172, 132, 109));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:comparator"], Color.FromArgb(255, 156, 151, 150));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cracked_stone_bricks"], Color.FromArgb(255, 119, 119, 119));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:crafting_table"], Color.FromArgb(255, 115, 95, 64));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:creeper_head"], Color.FromArgb(255, 87, 147, 79));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:creeper_wall_head"], Color.FromArgb(255, 87, 147, 79));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cut_red_sandstone"], Color.FromArgb(255, 168, 86, 30));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cut_sandstone"], Color.FromArgb(255, 220, 212, 162));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_banner"], Color.FromArgb(255, 21, 119, 136)); // Color.FromArgb(255, 0, 0, 0)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_bed"], Color.FromArgb(255, 97, 116, 96));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_carpet"], Color.FromArgb(255, 21, 138, 145));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_concrete"], Color.FromArgb(255, 21, 119, 136));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_concrete_powder"], Color.FromArgb(255, 37, 148, 157));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_glazed_terracotta"], Color.FromArgb(255, 52, 119, 125));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_shulker_box"], Color.FromArgb(255, 20, 121, 135));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_stained_glass"], Color.FromArgb(194, 76, 127, 152));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_stained_glass_pane"], Color.FromArgb(194, 76, 127, 152));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_terracotta"], Color.FromArgb(255, 87, 91, 91));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_wool"], Color.FromArgb(255, 21, 138, 145));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:damaged_anvil"], Color.FromArgb(255, 64, 61, 61));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dandelion"], Color.FromArgb(255, 108, 162, 1));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_bark"], Color.FromArgb(255, 52, 41, 23));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_button"], Color.FromArgb(255, 61, 40, 18));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_door"], Color.FromArgb(255, 68, 46, 24));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_fence"], Color.FromArgb(255, 61, 40, 18));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_fence_gate"], Color.FromArgb(255, 61, 40, 18));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_leaves"], Color.FromArgb(255, 64, 126, 36)); // Color.FromArgb(255, 135, 135, 135)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_log"], Color.FromArgb(255, 52, 41, 23));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_planks"], Color.FromArgb(255, 61, 40, 18));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_pressure_plate"], Color.FromArgb(255, 61, 40, 18));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_sapling"], Color.FromArgb(255, 57, 86, 28));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_slab"], Color.FromArgb(255, 61, 40, 18));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_stairs"], Color.FromArgb(255, 61, 40, 18));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_trapdoor"], Color.FromArgb(255, 75, 50, 23));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_prismarine"], Color.FromArgb(255, 60, 88, 75));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_prismarine_slab"], Color.FromArgb(255, 60, 88, 75));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_prismarine_stairs"], Color.FromArgb(255, 60, 88, 75));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:daylight_detector"], Color.FromArgb(255, 131, 116, 95));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dead_bush"], Color.FromArgb(255, 124, 80, 25));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:detector_rail"], Color.FromArgb(255, 120, 101, 89));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:diamond_block"], Color.FromArgb(255, 98, 219, 214));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:diamond_ore"], Color.FromArgb(255, 129, 140, 143));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:diorite"], Color.FromArgb(255, 180, 180, 183));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dirt"], Color.FromArgb(255, 134, 96, 67));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dispenser"], Color.FromArgb(255, 117, 117, 117));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dragon_egg"], Color.FromArgb(255, 13, 9, 16));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dragon_head"], Color.FromArgb(255, 53, 33, 57));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dragon_wall_head"], Color.FromArgb(255, 53, 33, 57));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dried_kelp_block"], Color.FromArgb(255, 38, 49, 30));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dropper"], Color.FromArgb(255, 117, 117, 117));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:emerald_block"], Color.FromArgb(255, 81, 217, 117));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:emerald_ore"], Color.FromArgb(255, 110, 129, 116));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:enchanting_table"], Color.FromArgb(255, 42, 44, 46));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:end_gateway"], Color.FromArgb(255, 0, 0, 0));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:end_portal"], Color.FromArgb(255, 0, 0, 0));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:end_portal_frame"], Color.FromArgb(255, 148, 160, 124));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:end_rod"], Color.FromArgb(255, 220, 198, 206));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:end_stone"], Color.FromArgb(255, 221, 224, 165));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:end_stone_bricks"], Color.FromArgb(255, 226, 231, 171));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:ender_chest"], Color.FromArgb(255, 24, 35, 36));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:farmland"], Color.FromArgb(255, 115, 76, 45));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:fern"], Color.FromArgb(255, 72, 181, 24)); // Color.FromArgb(255, 120, 120, 120)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:fire"], Color.FromArgb(255, 212, 140, 54));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:flower_pot"], Color.FromArgb(255, 119, 66, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:flowing_lava"], Color.FromArgb(255, 207, 92, 20));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:flowing_water"], Color.FromArgb(211, 49, 71, 244));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:four_turtle_eggs"], Color.FromArgb(255, 228, 227, 192));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:frosted_ice"], Color.FromArgb(159, 147, 187, 253));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:furnace"], Color.FromArgb(255, 78, 78, 78));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:glass"], Color.FromArgb(255, 218, 241, 244));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:glass_pane"], Color.FromArgb(255, 218, 241, 244));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:glowstone"], Color.FromArgb(255, 144, 118, 70));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gold_block"], Color.FromArgb(255, 249, 236, 79));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gold_ore"], Color.FromArgb(255, 143, 140, 125));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:granite"], Color.FromArgb(255, 153, 114, 99));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:grass"], Color.FromArgb(255, 72, 181, 24)); // Color.FromArgb(255, 136, 136, 136)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:grass_block"], Color.FromArgb(255, 95, 156, 65)); // Color.FromArgb(255, 147, 147, 147)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:grass_path"], Color.FromArgb(255, 150, 125, 71));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gravel"], Color.FromArgb(255, 127, 124, 123));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_banner"], Color.FromArgb(255, 55, 58, 62)); // Color.FromArgb(255, 0, 0, 0)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_bed"], Color.FromArgb(255, 109, 95, 73));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_carpet"], Color.FromArgb(255, 63, 68, 72));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_concrete"], Color.FromArgb(255, 55, 58, 62));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_concrete_powder"], Color.FromArgb(255, 77, 81, 85));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_glazed_terracotta"], Color.FromArgb(255, 83, 90, 94));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_shulker_box"], Color.FromArgb(255, 55, 59, 62));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_stained_glass"], Color.FromArgb(194, 76, 76, 76));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_stained_glass_pane"], Color.FromArgb(194, 76, 76, 76));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_terracotta"], Color.FromArgb(255, 58, 42, 36));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_wool"], Color.FromArgb(255, 63, 68, 72));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_banner"], Color.FromArgb(255, 73, 91, 36)); // Color.FromArgb(255, 0, 0, 0)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_bed"], Color.FromArgb(255, 117, 109, 62));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_carpet"], Color.FromArgb(255, 85, 110, 28));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_concrete"], Color.FromArgb(255, 73, 91, 36));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_concrete_powder"], Color.FromArgb(255, 97, 119, 45));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_glazed_terracotta"], Color.FromArgb(255, 117, 142, 67));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_shulker_box"], Color.FromArgb(255, 79, 101, 32));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_stained_glass"], Color.FromArgb(194, 101, 127, 50));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_stained_glass_pane"], Color.FromArgb(194, 101, 127, 50));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_terracotta"], Color.FromArgb(255, 76, 83, 42));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_wool"], Color.FromArgb(255, 85, 110, 28));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:hay_block"], Color.FromArgb(255, 158, 117, 18));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:heavy_weighted_pressure_plate"], Color.FromArgb(255, 219, 219, 219));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:hopper"], Color.FromArgb(255, 63, 63, 63));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:ice"], Color.FromArgb(159, 124, 172, 253));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_chiseled_stone_bricks"], Color.FromArgb(255, 119, 119, 119));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_cobblestone"], Color.FromArgb(255, 123, 123, 123));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_cracked_stone_bricks"], Color.FromArgb(255, 119, 119, 119));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_mossy_stone_bricks"], Color.FromArgb(255, 115, 119, 106));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_stone"], Color.FromArgb(255, 125, 125, 125));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_stone_bricks"], Color.FromArgb(255, 122, 122, 122));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:iron_bars"], Color.FromArgb(255, 110, 108, 106));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:iron_block"], Color.FromArgb(255, 219, 219, 219));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:iron_door"], Color.FromArgb(255, 174, 174, 174));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:iron_ore"], Color.FromArgb(255, 136, 130, 127));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:iron_trapdoor"], Color.FromArgb(255, 200, 200, 200));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jack_o_lantern"], Color.FromArgb(255, 185, 133, 28));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jukebox"], Color.FromArgb(255, 107, 73, 55));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_bark"], Color.FromArgb(255, 87, 68, 27));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_button"], Color.FromArgb(255, 154, 110, 77));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_door"], Color.FromArgb(255, 153, 112, 81));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_fence"], Color.FromArgb(255, 154, 110, 77));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_fence_gate"], Color.FromArgb(255, 154, 110, 77));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_leaves"], Color.FromArgb(255, 59, 143, 65)); // Color.FromArgb(255, 145, 143, 134)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_log"], Color.FromArgb(255, 87, 68, 27));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_planks"], Color.FromArgb(255, 154, 110, 77));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_pressure_plate"], Color.FromArgb(255, 154, 110, 77));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_sapling"], Color.FromArgb(255, 49, 86, 19));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_slab"], Color.FromArgb(255, 154, 110, 77));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_stairs"], Color.FromArgb(255, 154, 110, 77));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_trapdoor"], Color.FromArgb(255, 153, 110, 77));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:kelp"], Color.FromArgb(255, 87, 131, 43));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:kelp_top"], Color.FromArgb(255, 87, 137, 44));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:ladder"], Color.FromArgb(255, 121, 95, 53));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lapis_block"], Color.FromArgb(255, 39, 67, 138));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lapis_ore"], Color.FromArgb(255, 102, 112, 135));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:large_fern"], Color.FromArgb(255, 72, 181, 24)); // Color.FromArgb(255, 125, 125, 125)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lava"], Color.FromArgb(255, 212, 90, 18));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lever"], Color.FromArgb(255, 106, 89, 64));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_banner"], Color.FromArgb(255, 36, 137, 199)); // Color.FromArgb(255, 0, 0, 0)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_bed"], Color.FromArgb(255, 107, 129, 121));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_carpet"], Color.FromArgb(255, 58, 175, 217));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_concrete"], Color.FromArgb(255, 36, 137, 199));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_concrete_powder"], Color.FromArgb(255, 74, 181, 213));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_glazed_terracotta"], Color.FromArgb(255, 95, 165, 209));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_shulker_box"], Color.FromArgb(255, 49, 164, 212));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_stained_glass"], Color.FromArgb(194, 101, 152, 215));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_stained_glass_pane"], Color.FromArgb(194, 101, 152, 215));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_terracotta"], Color.FromArgb(255, 113, 109, 138));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_wool"], Color.FromArgb(255, 58, 175, 217));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_banner"], Color.FromArgb(255, 125, 125, 115)); // Color.FromArgb(255, 0, 0, 0)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_bed"], Color.FromArgb(255, 132, 117, 90));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_carpet"], Color.FromArgb(255, 142, 142, 135));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_concrete"], Color.FromArgb(255, 125, 125, 115));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_concrete_powder"], Color.FromArgb(255, 155, 155, 148));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_glazed_terracotta"], Color.FromArgb(255, 144, 166, 168));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_shulker_box"], Color.FromArgb(255, 124, 124, 115));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_stained_glass"], Color.FromArgb(194, 152, 152, 152));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_stained_glass_pane"], Color.FromArgb(194, 152, 152, 152));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_terracotta"], Color.FromArgb(255, 135, 107, 97));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_wool"], Color.FromArgb(255, 142, 142, 135));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_weighted_pressure_plate"], Color.FromArgb(255, 249, 236, 79));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lilac"], Color.FromArgb(255, 145, 149, 136));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lily_pad"], Color.FromArgb(255, 32, 128, 48)); // Color.FromArgb(255, 119, 119, 119)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_banner"], Color.FromArgb(255, 94, 169, 24)); // Color.FromArgb(255, 0, 0, 0)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_bed"], Color.FromArgb(255, 124, 133, 60));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_carpet"], Color.FromArgb(255, 112, 185, 26));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_concrete"], Color.FromArgb(255, 94, 169, 24));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_concrete_powder"], Color.FromArgb(255, 125, 189, 42));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_glazed_terracotta"], Color.FromArgb(255, 163, 198, 55));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_shulker_box"], Color.FromArgb(255, 100, 173, 23));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_stained_glass"], Color.FromArgb(194, 127, 203, 25));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_stained_glass_pane"], Color.FromArgb(194, 127, 203, 25));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_terracotta"], Color.FromArgb(255, 104, 118, 53));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_wool"], Color.FromArgb(255, 112, 185, 26));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_banner"], Color.FromArgb(255, 169, 48, 159)); // Color.FromArgb(255, 0, 0, 0)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_bed"], Color.FromArgb(255, 148, 94, 106));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_carpet"], Color.FromArgb(255, 190, 69, 180));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_concrete"], Color.FromArgb(255, 169, 48, 159));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_concrete_powder"], Color.FromArgb(255, 193, 84, 185));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_glazed_terracotta"], Color.FromArgb(255, 208, 100, 192));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_shulker_box"], Color.FromArgb(255, 174, 54, 164));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_stained_glass"], Color.FromArgb(194, 178, 76, 215));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_stained_glass_pane"], Color.FromArgb(194, 178, 76, 215));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_terracotta"], Color.FromArgb(255, 150, 88, 109));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_wool"], Color.FromArgb(255, 190, 69, 180));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magma_block"], Color.FromArgb(255, 135, 66, 26));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:melon_block"], Color.FromArgb(255, 141, 146, 36));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:melon_stem"], Color.FromArgb(255, 112, 99, 13)); // Color.FromArgb(255, 154, 154, 154)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:mob_spawner"], Color.FromArgb(255, 26, 40, 49));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:mossy_cobblestone"], Color.FromArgb(255, 104, 121, 104));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:mossy_cobblestone_wall"], Color.FromArgb(255, 104, 121, 104));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:mossy_stone_bricks"], Color.FromArgb(255, 115, 119, 106));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:moving_piston"], Color.FromArgb(255, 154, 129, 90));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:mushroom_stem"], Color.FromArgb(255, 208, 204, 194));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:mycelium"], Color.FromArgb(255, 111, 100, 105));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_brick_fence"], Color.FromArgb(255, 45, 23, 27));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_brick_slab"], Color.FromArgb(255, 45, 23, 27));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_brick_stairs"], Color.FromArgb(255, 45, 23, 27));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_bricks"], Color.FromArgb(255, 45, 23, 27));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_quartz_ore"], Color.FromArgb(255, 125, 85, 80));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_wart"], Color.FromArgb(255, 112, 19, 17));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_wart_block"], Color.FromArgb(255, 117, 6, 7));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:netherrack"], Color.FromArgb(255, 111, 54, 53));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:note_block"], Color.FromArgb(255, 101, 68, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_bark"], Color.FromArgb(255, 102, 81, 50));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_button"], Color.FromArgb(255, 157, 128, 79));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_door"], Color.FromArgb(255, 135, 102, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_fence"], Color.FromArgb(255, 157, 128, 79));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_fence_gate"], Color.FromArgb(255, 157, 128, 79));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_leaves"], Color.FromArgb(255, 72, 181, 24)); // Color.FromArgb(255, 135, 135, 135)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_log"], Color.FromArgb(255, 102, 81, 50));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_planks"], Color.FromArgb(255, 157, 128, 79));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_pressure_plate"], Color.FromArgb(255, 157, 128, 79));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_sapling"], Color.FromArgb(255, 72, 102, 38));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_slab"], Color.FromArgb(255, 157, 128, 79));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_stairs"], Color.FromArgb(255, 157, 128, 79));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_trapdoor"], Color.FromArgb(255, 127, 93, 46));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:observer"], Color.FromArgb(255, 102, 102, 102));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:obsidian"], Color.FromArgb(255, 20, 18, 30));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_banner"], Color.FromArgb(255, 224, 97, 1)); // Color.FromArgb(255, 0, 0, 0)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_bed"], Color.FromArgb(255, 167, 111, 55));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_carpet"], Color.FromArgb(255, 241, 118, 20));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_concrete"], Color.FromArgb(255, 224, 97, 1));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_concrete_powder"], Color.FromArgb(255, 227, 132, 32));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_glazed_terracotta"], Color.FromArgb(255, 155, 147, 92));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_shulker_box"], Color.FromArgb(255, 234, 106, 9));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_stained_glass"], Color.FromArgb(194, 215, 127, 50));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_stained_glass_pane"], Color.FromArgb(194, 215, 127, 50));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_terracotta"], Color.FromArgb(255, 162, 84, 38));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_tulip"], Color.FromArgb(255, 96, 134, 32));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_wool"], Color.FromArgb(255, 241, 118, 20));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oxeye_daisy"], Color.FromArgb(255, 176, 198, 139));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:packed_ice"], Color.FromArgb(255, 165, 195, 245));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:peony"], Color.FromArgb(255, 91, 110, 98));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:petrified_oak_slab"], Color.FromArgb(255, 157, 128, 79));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_banner"], Color.FromArgb(255, 214, 101, 143)); // Color.FromArgb(255, 0, 0, 0)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_bed"], Color.FromArgb(255, 166, 116, 104));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_carpet"], Color.FromArgb(255, 238, 141, 172));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_concrete"], Color.FromArgb(255, 214, 101, 143));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_concrete_powder"], Color.FromArgb(255, 229, 153, 181));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_coral"], Color.FromArgb(255, 207, 91, 159));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_coral_fan"], Color.FromArgb(255, 182, 64, 137));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_coral_plant"], Color.FromArgb(255, 198, 85, 152));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_dead_coral"], Color.FromArgb(255, 124, 118, 114));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_glazed_terracotta"], Color.FromArgb(255, 235, 155, 182));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_shulker_box"], Color.FromArgb(255, 230, 122, 158));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_stained_glass"], Color.FromArgb(194, 242, 127, 164));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_stained_glass_pane"], Color.FromArgb(194, 242, 127, 164));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_terracotta"], Color.FromArgb(255, 162, 78, 79));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_tulip"], Color.FromArgb(255, 101, 150, 73));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_wool"], Color.FromArgb(255, 238, 141, 172));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:piston"], Color.FromArgb(255, 154, 129, 90));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:piston_head"], Color.FromArgb(255, 154, 129, 90));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:player_head"], Color.FromArgb(255, 124, 87, 69));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:player_wall_head"], Color.FromArgb(255, 124, 87, 69));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:podzol"], Color.FromArgb(255, 91, 63, 29));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:polished_andesite"], Color.FromArgb(255, 133, 133, 135));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:polished_diorite"], Color.FromArgb(255, 183, 183, 186));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:polished_granite"], Color.FromArgb(255, 159, 115, 98));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:poppy"], Color.FromArgb(255, 101, 58, 4));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:portal"], Color.FromArgb(232, 89, 11, 192));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:potatoes"], Color.FromArgb(255, 35, 171, 36));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:potted_red_mushroom"], Color.FromArgb(255, 195, 54, 56));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:powered_rail"], Color.FromArgb(255, 132, 108, 72));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine"], Color.FromArgb(255, 100, 152, 142));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine_bricks"], Color.FromArgb(255, 100, 160, 143));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine_bricks_slab"], Color.FromArgb(255, 100, 160, 143));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine_bricks_stairs"], Color.FromArgb(255, 100, 160, 143));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine_slab"], Color.FromArgb(255, 100, 152, 142));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine_stairs"], Color.FromArgb(255, 100, 152, 142));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pumpkin"], Color.FromArgb(255, 197, 121, 24));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pumpkin_stem"], Color.FromArgb(255, 112, 99, 13)); // Color.FromArgb(255, 154, 154, 154)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_banner"], Color.FromArgb(255, 100, 32, 156)); // Color.FromArgb(255, 0, 0, 0)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_bed"], Color.FromArgb(255, 125, 87, 104));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_carpet"], Color.FromArgb(255, 122, 42, 173));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_concrete"], Color.FromArgb(255, 100, 32, 156));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_concrete_powder"], Color.FromArgb(255, 132, 56, 178));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_coral"], Color.FromArgb(255, 165, 26, 162));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_coral_fan"], Color.FromArgb(255, 140, 22, 143));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_coral_plant"], Color.FromArgb(255, 161, 24, 160));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_dead_coral"], Color.FromArgb(255, 132, 124, 119));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_glazed_terracotta"], Color.FromArgb(255, 110, 48, 152));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_shulker_box"], Color.FromArgb(255, 103, 32, 156));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_stained_glass"], Color.FromArgb(194, 127, 62, 178));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_stained_glass_pane"], Color.FromArgb(194, 127, 62, 178));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_terracotta"], Color.FromArgb(255, 118, 70, 86));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_wool"], Color.FromArgb(255, 122, 42, 173));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purpur_block"], Color.FromArgb(255, 166, 122, 166));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purpur_pillar"], Color.FromArgb(255, 170, 126, 170));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purpur_slab"], Color.FromArgb(255, 166, 122, 166));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purpur_stairs"], Color.FromArgb(255, 166, 122, 166));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:quartz_block"], Color.FromArgb(255, 236, 233, 226));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:quartz_pillar"], Color.FromArgb(255, 232, 228, 220));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:quartz_slab"], Color.FromArgb(255, 236, 233, 226));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:quartz_stairs"], Color.FromArgb(255, 236, 233, 226));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:rail"], Color.FromArgb(255, 121, 109, 89));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_banner"], Color.FromArgb(255, 142, 33, 33)); // Color.FromArgb(255, 0, 0, 0)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_bed"], Color.FromArgb(255, 137, 86, 62));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_carpet"], Color.FromArgb(255, 161, 39, 35));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_concrete"], Color.FromArgb(255, 142, 33, 33));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_concrete_powder"], Color.FromArgb(255, 168, 54, 51));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_coral"], Color.FromArgb(255, 164, 35, 47));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_coral_fan"], Color.FromArgb(255, 159, 35, 46));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_coral_plant"], Color.FromArgb(255, 167, 38, 47));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_dead_coral"], Color.FromArgb(255, 132, 124, 120));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_glazed_terracotta"], Color.FromArgb(255, 182, 60, 53));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_mushroom"], Color.FromArgb(255, 195, 54, 56));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_mushroom_block"], Color.FromArgb(255, 183, 38, 36));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_nether_bricks"], Color.FromArgb(255, 68, 4, 7));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_sand"], Color.FromArgb(255, 169, 88, 33));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_sandstone"], Color.FromArgb(255, 166, 85, 30));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_sandstone_slab"], Color.FromArgb(255, 166, 85, 30));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_sandstone_stairs"], Color.FromArgb(255, 166, 85, 30));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_shulker_box"], Color.FromArgb(255, 140, 31, 30));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_stained_glass"], Color.FromArgb(194, 152, 50, 50));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_stained_glass_pane"], Color.FromArgb(194, 152, 50, 50));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_terracotta"], Color.FromArgb(255, 143, 61, 47));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_tulip"], Color.FromArgb(255, 103, 135, 39));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_wool"], Color.FromArgb(255, 161, 39, 35));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:redstone_block"], Color.FromArgb(255, 171, 28, 9));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:redstone_lamp"], Color.FromArgb(255, 70, 43, 27));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:redstone_ore"], Color.FromArgb(255, 133, 107, 107));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:redstone_torch"], Color.FromArgb(255, 168, 76, 41));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:redstone_wall_torch"], Color.FromArgb(255, 168, 76, 41));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:redstone_wire"], Color.FromArgb(255, 53, 0, 0)); // Color.FromArgb(255, 223, 0, 0)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:repeater"], Color.FromArgb(255, 151, 147, 147));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:repeating_command_block"], Color.FromArgb(255, 124, 107, 172));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:rose_bush"], Color.FromArgb(255, 87, 63, 5));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sand"], Color.FromArgb(255, 219, 211, 160));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sandstone"], Color.FromArgb(255, 217, 210, 157));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sandstone_slab"], Color.FromArgb(255, 217, 210, 157));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sandstone_stairs"], Color.FromArgb(255, 217, 210, 157));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sea_grass"], Color.FromArgb(255, 51, 127, 8));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sea_lantern"], Color.FromArgb(255, 172, 200, 190));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:shulker_box"], Color.FromArgb(255, 139, 97, 139));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sign"], Color.FromArgb(255, 148, 120, 73));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:skeleton_skull"], Color.FromArgb(255, 153, 153, 153));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:skeleton_wall_skull"], Color.FromArgb(255, 153, 153, 153));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:slime_block"], Color.FromArgb(188, 120, 199, 100));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:smooth_quartz"], Color.FromArgb(255, 236, 233, 226));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:smooth_red_sandstone"], Color.FromArgb(255, 168, 86, 30));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:smooth_sandstone"], Color.FromArgb(255, 218, 210, 159));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:smooth_stone"], Color.FromArgb(255, 159, 159, 159));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:snow"], Color.FromArgb(255, 240, 251, 251));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:snow_block"], Color.FromArgb(255, 240, 251, 251));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:soul_sand"], Color.FromArgb(255, 85, 64, 52));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sponge"], Color.FromArgb(255, 195, 196, 85));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_bark"], Color.FromArgb(255, 46, 29, 12));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_button"], Color.FromArgb(255, 104, 78, 47));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_door"], Color.FromArgb(255, 97, 75, 49));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_fence"], Color.FromArgb(255, 104, 78, 47));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_fence_gate"], Color.FromArgb(255, 104, 78, 47));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_leaves"], Color.FromArgb(255, 97, 153, 97)); // Color.FromArgb(255, 116, 116, 116)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_log"], Color.FromArgb(255, 46, 29, 12));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_planks"], Color.FromArgb(255, 104, 78, 47));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_pressure_plate"], Color.FromArgb(255, 104, 78, 47));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_sapling"], Color.FromArgb(255, 51, 58, 34));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_slab"], Color.FromArgb(255, 104, 78, 47));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_stairs"], Color.FromArgb(255, 104, 78, 47));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_trapdoor"], Color.FromArgb(255, 100, 76, 49));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sticky_piston"], Color.FromArgb(255, 142, 146, 100));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone"], Color.FromArgb(255, 125, 125, 125));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone_brick_slab"], Color.FromArgb(255, 122, 122, 122));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone_brick_stairs"], Color.FromArgb(255, 122, 122, 122));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone_bricks"], Color.FromArgb(255, 122, 122, 122));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone_button"], Color.FromArgb(255, 125, 125, 125));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone_pressure_plate"], Color.FromArgb(255, 125, 125, 125));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone_slab"], Color.FromArgb(255, 167, 167, 167));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stripped_acacia_log"], Color.FromArgb(255, 175, 93, 60));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stripped_birch_log"], Color.FromArgb(255, 197, 176, 118));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stripped_dark_oak_log"], Color.FromArgb(255, 97, 76, 50));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stripped_jungle_log"], Color.FromArgb(255, 170, 132, 83));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stripped_oak_log"], Color.FromArgb(255, 177, 144, 86));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stripped_spruce_log"], Color.FromArgb(255, 116, 90, 52));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:structure_block"], Color.FromArgb(255, 89, 74, 90));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:structure_void"], Color.FromArgb(255, 89, 74, 90));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sugar_cane"], Color.FromArgb(255, 149, 193, 101));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sunflower"], Color.FromArgb(255, 141, 149, 39));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tall_grass"], Color.FromArgb(255, 72, 181, 24)); // Color.FromArgb(255, 143, 143, 143)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tall_sea_grass"], Color.FromArgb(255, 45, 117, 4));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:terracotta"], Color.FromArgb(255, 151, 93, 67));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:three_turtle_eggs"], Color.FromArgb(255, 228, 227, 192));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tnt"], Color.FromArgb(255, 170, 93, 71));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:torch"], Color.FromArgb(255, 130, 106, 58));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:trapped_chest"], Color.FromArgb(255, 105, 78, 35));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tripwire"], Color.FromArgb(226, 128, 128, 128));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tripwire_hook"], Color.FromArgb(255, 139, 129, 114));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:turtle_egg"], Color.FromArgb(255, 228, 227, 192));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:two_turtle_eggs"], Color.FromArgb(255, 228, 227, 192));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:vine"], Color.FromArgb(255, 50, 117, 56)); // Color.FromArgb(255, 111, 111, 111)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:void_air"], Color.FromArgb(255, 0, 0, 0));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wall_banner"], Color.FromArgb(255, 207, 213, 214)); // Color.FromArgb(255, 0, 0, 0)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wall_sign"], Color.FromArgb(255, 148, 120, 73));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wall_torch"], Color.FromArgb(255, 130, 106, 58));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:water"], Color.FromArgb(226, 46, 67, 243));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wet_sponge"], Color.FromArgb(255, 160, 159, 63));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wheat"], Color.FromArgb(255, 87, 102, 8));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_banner"], Color.FromArgb(255, 207, 213, 214)); // Color.FromArgb(255, 0, 0, 0)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_bed"], Color.FromArgb(255, 162, 148, 125));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_carpet"], Color.FromArgb(255, 234, 236, 237));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_concrete"], Color.FromArgb(255, 207, 213, 214));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_concrete_powder"], Color.FromArgb(255, 226, 227, 228));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_glazed_terracotta"], Color.FromArgb(255, 188, 212, 203));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_shulker_box"], Color.FromArgb(255, 216, 221, 221));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_stained_glass"], Color.FromArgb(194, 253, 253, 253));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_stained_glass_pane"], Color.FromArgb(194, 253, 253, 253));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_terracotta"], Color.FromArgb(255, 210, 178, 161));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_tulip"], Color.FromArgb(255, 95, 153, 66));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_wool"], Color.FromArgb(255, 234, 236, 237));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wither_skeleton_skull"], Color.FromArgb(255, 46, 47, 47));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wither_skeleton_wall_skull"], Color.FromArgb(255, 46, 47, 47));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_banner"], Color.FromArgb(255, 241, 175, 21)); // Color.FromArgb(255, 0, 0, 0)
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_bed"], Color.FromArgb(255, 172, 138, 62));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_carpet"], Color.FromArgb(255, 249, 198, 40));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_concrete"], Color.FromArgb(255, 241, 175, 21));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_concrete_powder"], Color.FromArgb(255, 233, 199, 55));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_coral"], Color.FromArgb(255, 216, 200, 66));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_coral_fan"], Color.FromArgb(255, 201, 171, 58));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_coral_plant"], Color.FromArgb(255, 209, 186, 63));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_dead_coral"], Color.FromArgb(255, 134, 126, 122));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_glazed_terracotta"], Color.FromArgb(255, 234, 192, 89));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_shulker_box"], Color.FromArgb(255, 248, 189, 29));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_stained_glass"], Color.FromArgb(194, 229, 229, 50));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_stained_glass_pane"], Color.FromArgb(194, 229, 229, 50));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_terracotta"], Color.FromArgb(255, 186, 133, 35));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_wool"], Color.FromArgb(255, 249, 198, 40));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:zombie_head"], Color.FromArgb(255, 76, 112, 58));
            Diccionario_Bloques_Índices_Colores.Add(Diccionario_Bloques_Nombres_Índices["minecraft:zombie_wall_head"], Color.FromArgb(255, 76, 112, 58));*/

            /*foreach (KeyValuePair<string, Color> Entrada in Diccionario_Bloques_Nombres_Colores)
            {
                if (Entrada.Value.R == Entrada.Value.G && Entrada.Value.R == Entrada.Value.B)
                {
                    MessageBox.Show(Entrada.Key); // Mostrar los colores grises por si hay fallos
                }
            } // OK*/

            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(0, 0), Diccionario_Bloques_Nombres_Índices["minecraft:air"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(1, 0), Diccionario_Bloques_Nombres_Índices["minecraft:stone"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(1, 1), Diccionario_Bloques_Nombres_Índices["minecraft:granite"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(1, 2), Diccionario_Bloques_Nombres_Índices["minecraft:polished_granite"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(1, 3), Diccionario_Bloques_Nombres_Índices["minecraft:diorite"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(1, 4), Diccionario_Bloques_Nombres_Índices["minecraft:polished_diorite"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(1, 5), Diccionario_Bloques_Nombres_Índices["minecraft:andesite"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(1, 6), Diccionario_Bloques_Nombres_Índices["minecraft:polished_andesite"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(2, 0), Diccionario_Bloques_Nombres_Índices["minecraft:grass_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(3, 0), Diccionario_Bloques_Nombres_Índices["minecraft:dirt"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(3, 1), Diccionario_Bloques_Nombres_Índices["minecraft:coarse_dirt"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(3, 2), Diccionario_Bloques_Nombres_Índices["minecraft:podzol"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(4, 0), Diccionario_Bloques_Nombres_Índices["minecraft:cobblestone"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(5, 0), Diccionario_Bloques_Nombres_Índices["minecraft:oak_planks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(5, 1), Diccionario_Bloques_Nombres_Índices["minecraft:spruce_planks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(5, 2), Diccionario_Bloques_Nombres_Índices["minecraft:birch_planks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(5, 3), Diccionario_Bloques_Nombres_Índices["minecraft:jungle_planks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(5, 4), Diccionario_Bloques_Nombres_Índices["minecraft:acacia_planks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(5, 5), Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_planks"]);
            for (short Índice_Data = 0; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(6, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:oak_sapling"]);
            for (short Índice_Data = 1; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(6, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:spruce_sapling"]);
            for (short Índice_Data = 2; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(6, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:birch_sapling"]);
            for (short Índice_Data = 3; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(6, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:jungle_sapling"]);
            for (short Índice_Data = 4; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(6, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:acacia_sapling"]);
            for (short Índice_Data = 5; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(6, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_sapling"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(7, 0), Diccionario_Bloques_Nombres_Índices["minecraft:bedrock"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(8, 0), Diccionario_Bloques_Nombres_Índices["minecraft:flowing_water"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(9, 0), Diccionario_Bloques_Nombres_Índices["minecraft:water"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(10, 0), Diccionario_Bloques_Nombres_Índices["minecraft:flowing_lava"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(11, 0), Diccionario_Bloques_Nombres_Índices["minecraft:lava"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(12, 0), Diccionario_Bloques_Nombres_Índices["minecraft:sand"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(12, 1), Diccionario_Bloques_Nombres_Índices["minecraft:red_sand"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(13, 0), Diccionario_Bloques_Nombres_Índices["minecraft:gravel"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(14, 0), Diccionario_Bloques_Nombres_Índices["minecraft:gold_ore"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(15, 0), Diccionario_Bloques_Nombres_Índices["minecraft:iron_ore"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(16, 0), Diccionario_Bloques_Nombres_Índices["minecraft:coal_ore"]);
            for (short Índice_Data = 0; Índice_Data < 16; Índice_Data += 4) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(17, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:oak_log"]);
            for (short Índice_Data = 1; Índice_Data < 16; Índice_Data += 4) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(17, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:spruce_log"]);
            for (short Índice_Data = 2; Índice_Data < 16; Índice_Data += 4) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(17, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:birch_log"]);
            for (short Índice_Data = 3; Índice_Data < 16; Índice_Data += 4) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(17, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:jungle_log"]);
            for (short Índice_Data = 0; Índice_Data < 16; Índice_Data += 4) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(18, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:oak_leaves"]);
            for (short Índice_Data = 1; Índice_Data < 16; Índice_Data += 4) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(18, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:spruce_leaves"]);
            for (short Índice_Data = 2; Índice_Data < 16; Índice_Data += 4) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(18, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:birch_leaves"]);
            for (short Índice_Data = 3; Índice_Data < 16; Índice_Data += 4) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(18, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:jungle_leaves"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(19, 0), Diccionario_Bloques_Nombres_Índices["minecraft:sponge"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(19, 1), Diccionario_Bloques_Nombres_Índices["minecraft:wet_sponge"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(20, 0), Diccionario_Bloques_Nombres_Índices["minecraft:glass"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(21, 0), Diccionario_Bloques_Nombres_Índices["minecraft:lapis_ore"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(22, 0), Diccionario_Bloques_Nombres_Índices["minecraft:lapis_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(23, 0), Diccionario_Bloques_Nombres_Índices["minecraft:dispenser"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(24, 0), Diccionario_Bloques_Nombres_Índices["minecraft:sandstone"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(24, 1), Diccionario_Bloques_Nombres_Índices["minecraft:chiseled_sandstone"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(24, 2), Diccionario_Bloques_Nombres_Índices["minecraft:cut_sandstone"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(25, 0), Diccionario_Bloques_Nombres_Índices["minecraft:note_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(26, 0), Diccionario_Bloques_Nombres_Índices["minecraft:red_bed"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(27, 0), Diccionario_Bloques_Nombres_Índices["minecraft:powered_rail"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(28, 0), Diccionario_Bloques_Nombres_Índices["minecraft:detector_rail"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(29, 0), Diccionario_Bloques_Nombres_Índices["minecraft:sticky_piston"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(30, 0), Diccionario_Bloques_Nombres_Índices["minecraft:cobweb"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(31, 0), Diccionario_Bloques_Nombres_Índices["minecraft:grass"]); // dead_bush?
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(31, 1), Diccionario_Bloques_Nombres_Índices["minecraft:grass"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(31, 2), Diccionario_Bloques_Nombres_Índices["minecraft:fern"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(32, 0), Diccionario_Bloques_Nombres_Índices["minecraft:dead_bush"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(33, 0), Diccionario_Bloques_Nombres_Índices["minecraft:piston"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(34, 0), Diccionario_Bloques_Nombres_Índices["minecraft:piston_head"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(35, 0), Diccionario_Bloques_Nombres_Índices["minecraft:white_wool"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(35, 1), Diccionario_Bloques_Nombres_Índices["minecraft:orange_wool"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(35, 2), Diccionario_Bloques_Nombres_Índices["minecraft:magenta_wool"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(35, 3), Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_wool"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(35, 4), Diccionario_Bloques_Nombres_Índices["minecraft:yellow_wool"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(35, 5), Diccionario_Bloques_Nombres_Índices["minecraft:lime_wool"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(35, 6), Diccionario_Bloques_Nombres_Índices["minecraft:pink_wool"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(35, 7), Diccionario_Bloques_Nombres_Índices["minecraft:gray_wool"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(35, 8), Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_wool"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(35, 9), Diccionario_Bloques_Nombres_Índices["minecraft:cyan_wool"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(35, 10), Diccionario_Bloques_Nombres_Índices["minecraft:purple_wool"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(35, 11), Diccionario_Bloques_Nombres_Índices["minecraft:blue_wool"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(35, 12), Diccionario_Bloques_Nombres_Índices["minecraft:brown_wool"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(35, 13), Diccionario_Bloques_Nombres_Índices["minecraft:green_wool"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(35, 14), Diccionario_Bloques_Nombres_Índices["minecraft:red_wool"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(35, 15), Diccionario_Bloques_Nombres_Índices["minecraft:black_wool"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(37, 0), Diccionario_Bloques_Nombres_Índices["minecraft:dandelion"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(38, 0), Diccionario_Bloques_Nombres_Índices["minecraft:poppy"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(38, 1), Diccionario_Bloques_Nombres_Índices["minecraft:blue_orchid"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(38, 2), Diccionario_Bloques_Nombres_Índices["minecraft:allium"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(38, 3), Diccionario_Bloques_Nombres_Índices["minecraft:azure_bluet"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(38, 4), Diccionario_Bloques_Nombres_Índices["minecraft:red_tulip"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(38, 5), Diccionario_Bloques_Nombres_Índices["minecraft:orange_tulip"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(38, 6), Diccionario_Bloques_Nombres_Índices["minecraft:white_tulip"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(38, 7), Diccionario_Bloques_Nombres_Índices["minecraft:pink_tulip"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(38, 8), Diccionario_Bloques_Nombres_Índices["minecraft:oxeye_daisy"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(39, 0), Diccionario_Bloques_Nombres_Índices["minecraft:brown_mushroom"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(40, 0), Diccionario_Bloques_Nombres_Índices["minecraft:red_mushroom"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(41, 0), Diccionario_Bloques_Nombres_Índices["minecraft:gold_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(42, 0), Diccionario_Bloques_Nombres_Índices["minecraft:iron_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(43, 0), Diccionario_Bloques_Nombres_Índices["minecraft:oak_planks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(43, 1), Diccionario_Bloques_Nombres_Índices["minecraft:sandstone"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(43, 2), Diccionario_Bloques_Nombres_Índices["minecraft:oak_planks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(43, 3), Diccionario_Bloques_Nombres_Índices["minecraft:cobblestone"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(43, 4), Diccionario_Bloques_Nombres_Índices["minecraft:bricks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(43, 5), Diccionario_Bloques_Nombres_Índices["minecraft:stone_bricks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(43, 6), Diccionario_Bloques_Nombres_Índices["minecraft:quartz_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(43, 7), Diccionario_Bloques_Nombres_Índices["minecraft:nether_bricks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(43, 8), Diccionario_Bloques_Nombres_Índices["minecraft:smooth_stone"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(43, 9), Diccionario_Bloques_Nombres_Índices["minecraft:smooth_sandstone"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(43, 14), Diccionario_Bloques_Nombres_Índices["minecraft:smooth_quartz"]);
            for (short Índice_Data = 0; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(44, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:stone_slab"]);
            for (short Índice_Data = 1; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(44, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:sandstone_slab"]);
            for (short Índice_Data = 2; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(44, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:petrified_oak_slab"]);
            for (short Índice_Data = 3; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(44, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:cobblestone_slab"]);
            for (short Índice_Data = 4; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(44, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:brick_slab"]);
            for (short Índice_Data = 5; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(44, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:stone_brick_slab"]);
            for (short Índice_Data = 6; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(44, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:quartz_slab"]);
            for (short Índice_Data = 7; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(44, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:nether_brick_slab"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(45, 0), Diccionario_Bloques_Nombres_Índices["minecraft:bricks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(46, 0), Diccionario_Bloques_Nombres_Índices["minecraft:tnt"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(47, 0), Diccionario_Bloques_Nombres_Índices["minecraft:bookshelf"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(48, 0), Diccionario_Bloques_Nombres_Índices["minecraft:mossy_cobblestone"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(49, 0), Diccionario_Bloques_Nombres_Índices["minecraft:obsidian"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(50, 0), Diccionario_Bloques_Nombres_Índices["minecraft:torch"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(51, 0), Diccionario_Bloques_Nombres_Índices["minecraft:fire"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(52, 0), Diccionario_Bloques_Nombres_Índices["minecraft:mob_spawner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(53, 0), Diccionario_Bloques_Nombres_Índices["minecraft:oak_stairs"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(54, 0), Diccionario_Bloques_Nombres_Índices["minecraft:chest"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(55, 0), Diccionario_Bloques_Nombres_Índices["minecraft:redstone_wire"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(56, 0), Diccionario_Bloques_Nombres_Índices["minecraft:diamond_ore"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(57, 0), Diccionario_Bloques_Nombres_Índices["minecraft:diamond_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(58, 0), Diccionario_Bloques_Nombres_Índices["minecraft:crafting_table"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(59, 0), Diccionario_Bloques_Nombres_Índices["minecraft:wheat"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(60, 0), Diccionario_Bloques_Nombres_Índices["minecraft:farmland"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(61, 0), Diccionario_Bloques_Nombres_Índices["minecraft:furnace"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(62, 0), Diccionario_Bloques_Nombres_Índices["minecraft:furnace"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(63, 0), Diccionario_Bloques_Nombres_Índices["minecraft:sign"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(64, 0), Diccionario_Bloques_Nombres_Índices["minecraft:oak_door"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(65, 0), Diccionario_Bloques_Nombres_Índices["minecraft:ladder"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(66, 0), Diccionario_Bloques_Nombres_Índices["minecraft:rail"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(67, 0), Diccionario_Bloques_Nombres_Índices["minecraft:cobblestone_stairs"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(68, 0), Diccionario_Bloques_Nombres_Índices["minecraft:sign"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(69, 0), Diccionario_Bloques_Nombres_Índices["minecraft:lever"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(70, 0), Diccionario_Bloques_Nombres_Índices["minecraft:stone_pressure_plate"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(71, 0), Diccionario_Bloques_Nombres_Índices["minecraft:iron_door"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(72, 0), Diccionario_Bloques_Nombres_Índices["minecraft:oak_pressure_plate"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(73, 0), Diccionario_Bloques_Nombres_Índices["minecraft:redstone_ore"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(74, 0), Diccionario_Bloques_Nombres_Índices["minecraft:redstone_ore"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(75, 0), Diccionario_Bloques_Nombres_Índices["minecraft:redstone_torch"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(76, 0), Diccionario_Bloques_Nombres_Índices["minecraft:redstone_torch"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(77, 0), Diccionario_Bloques_Nombres_Índices["minecraft:stone_button"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(78, 0), Diccionario_Bloques_Nombres_Índices["minecraft:snow"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(79, 0), Diccionario_Bloques_Nombres_Índices["minecraft:ice"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(80, 0), Diccionario_Bloques_Nombres_Índices["minecraft:snow_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(81, 0), Diccionario_Bloques_Nombres_Índices["minecraft:cactus"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(82, 0), Diccionario_Bloques_Nombres_Índices["minecraft:clay"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(83, 0), Diccionario_Bloques_Nombres_Índices["minecraft:sugar_cane"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(84, 0), Diccionario_Bloques_Nombres_Índices["minecraft:jukebox"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(85, 0), Diccionario_Bloques_Nombres_Índices["minecraft:oak_fence"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(86, 0), Diccionario_Bloques_Nombres_Índices["minecraft:carved_pumpkin"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(87, 0), Diccionario_Bloques_Nombres_Índices["minecraft:netherrack"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(88, 0), Diccionario_Bloques_Nombres_Índices["minecraft:soul_sand"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(89, 0), Diccionario_Bloques_Nombres_Índices["minecraft:glowstone"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(90, 0), Diccionario_Bloques_Nombres_Índices["minecraft:portal"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(91, 0), Diccionario_Bloques_Nombres_Índices["minecraft:jack_o_lantern"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(92, 0), Diccionario_Bloques_Nombres_Índices["minecraft:cake"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(93, 0), Diccionario_Bloques_Nombres_Índices["minecraft:repeater"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(94, 0), Diccionario_Bloques_Nombres_Índices["minecraft:repeater"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(95, 0), Diccionario_Bloques_Nombres_Índices["minecraft:white_stained_glass"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(95, 1), Diccionario_Bloques_Nombres_Índices["minecraft:orange_stained_glass"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(95, 2), Diccionario_Bloques_Nombres_Índices["minecraft:magenta_stained_glass"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(95, 3), Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_stained_glass"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(95, 4), Diccionario_Bloques_Nombres_Índices["minecraft:yellow_stained_glass"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(95, 5), Diccionario_Bloques_Nombres_Índices["minecraft:lime_stained_glass"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(95, 6), Diccionario_Bloques_Nombres_Índices["minecraft:pink_stained_glass"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(95, 7), Diccionario_Bloques_Nombres_Índices["minecraft:gray_stained_glass"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(95, 8), Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_stained_glass"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(95, 9), Diccionario_Bloques_Nombres_Índices["minecraft:cyan_stained_glass"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(95, 10), Diccionario_Bloques_Nombres_Índices["minecraft:purple_stained_glass"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(95, 11), Diccionario_Bloques_Nombres_Índices["minecraft:blue_stained_glass"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(95, 12), Diccionario_Bloques_Nombres_Índices["minecraft:brown_stained_glass"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(95, 13), Diccionario_Bloques_Nombres_Índices["minecraft:green_stained_glass"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(95, 14), Diccionario_Bloques_Nombres_Índices["minecraft:red_stained_glass"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(95, 15), Diccionario_Bloques_Nombres_Índices["minecraft:black_stained_glass"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(96, 0), Diccionario_Bloques_Nombres_Índices["minecraft:oak_trapdoor"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(97, 0), Diccionario_Bloques_Nombres_Índices["minecraft:infested_stone"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(97, 1), Diccionario_Bloques_Nombres_Índices["minecraft:infested_cobblestone"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(97, 2), Diccionario_Bloques_Nombres_Índices["minecraft:infested_stone_bricks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(97, 3), Diccionario_Bloques_Nombres_Índices["minecraft:infested_mossy_stone_bricks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(97, 4), Diccionario_Bloques_Nombres_Índices["minecraft:infested_cracked_stone_bricks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(97, 5), Diccionario_Bloques_Nombres_Índices["minecraft:infested_chiseled_stone_bricks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(98, 0), Diccionario_Bloques_Nombres_Índices["minecraft:stone_bricks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(98, 1), Diccionario_Bloques_Nombres_Índices["minecraft:mossy_stone_bricks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(98, 3), Diccionario_Bloques_Nombres_Índices["minecraft:chiseled_stone_bricks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(98, 4), Diccionario_Bloques_Nombres_Índices["minecraft:cracked_stone_bricks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(99, 0), Diccionario_Bloques_Nombres_Índices["minecraft:brown_mushroom_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(100, 0), Diccionario_Bloques_Nombres_Índices["minecraft:red_mushroom_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(101, 0), Diccionario_Bloques_Nombres_Índices["minecraft:iron_bars"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(102, 0), Diccionario_Bloques_Nombres_Índices["minecraft:glass_pane"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(103, 0), Diccionario_Bloques_Nombres_Índices["minecraft:melon_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(104, 0), Diccionario_Bloques_Nombres_Índices["minecraft:pumpkin_stem"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(105, 0), Diccionario_Bloques_Nombres_Índices["minecraft:melon_stem"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(106, 0), Diccionario_Bloques_Nombres_Índices["minecraft:vine"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(107, 0), Diccionario_Bloques_Nombres_Índices["minecraft:oak_fence_gate"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(108, 0), Diccionario_Bloques_Nombres_Índices["minecraft:brick_stairs"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(109, 0), Diccionario_Bloques_Nombres_Índices["minecraft:stone_brick_stairs"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(110, 0), Diccionario_Bloques_Nombres_Índices["minecraft:mycelium"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(111, 0), Diccionario_Bloques_Nombres_Índices["minecraft:lily_pad"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(112, 0), Diccionario_Bloques_Nombres_Índices["minecraft:nether_bricks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(113, 0), Diccionario_Bloques_Nombres_Índices["minecraft:nether_brick_fence"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(114, 0), Diccionario_Bloques_Nombres_Índices["minecraft:nether_brick_stairs"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(115, 0), Diccionario_Bloques_Nombres_Índices["minecraft:nether_wart"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(116, 0), Diccionario_Bloques_Nombres_Índices["minecraft:enchanting_table"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(117, 0), Diccionario_Bloques_Nombres_Índices["minecraft:brewing_stand"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(118, 0), Diccionario_Bloques_Nombres_Índices["minecraft:cauldron"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(119, 0), Diccionario_Bloques_Nombres_Índices["minecraft:end_portal"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(120, 0), Diccionario_Bloques_Nombres_Índices["minecraft:end_portal_frame"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(121, 0), Diccionario_Bloques_Nombres_Índices["minecraft:end_stone"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(122, 0), Diccionario_Bloques_Nombres_Índices["minecraft:dragon_egg"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(123, 0), Diccionario_Bloques_Nombres_Índices["minecraft:redstone_lamp"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(124, 0), Diccionario_Bloques_Nombres_Índices["minecraft:redstone_lamp"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(125, 0), Diccionario_Bloques_Nombres_Índices["minecraft:oak_planks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(125, 1), Diccionario_Bloques_Nombres_Índices["minecraft:spruce_planks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(125, 2), Diccionario_Bloques_Nombres_Índices["minecraft:birch_planks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(125, 3), Diccionario_Bloques_Nombres_Índices["minecraft:jungle_planks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(125, 4), Diccionario_Bloques_Nombres_Índices["minecraft:acacia_planks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(125, 5), Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_planks"]);
            for (short Índice_Data = 0; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(126, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:oak_slab"]);
            for (short Índice_Data = 1; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(126, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:spruce_slab"]);
            for (short Índice_Data = 2; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(126, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:birch_slab"]);
            for (short Índice_Data = 3; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(126, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:jungle_slab"]);
            for (short Índice_Data = 4; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(126, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:acacia_slab"]);
            for (short Índice_Data = 5; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(126, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_slab"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(127, 0), Diccionario_Bloques_Nombres_Índices["minecraft:cocoa"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(128, 0), Diccionario_Bloques_Nombres_Índices["minecraft:sandstone_stairs"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(129, 0), Diccionario_Bloques_Nombres_Índices["minecraft:emerald_ore"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(130, 0), Diccionario_Bloques_Nombres_Índices["minecraft:ender_chest"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(131, 0), Diccionario_Bloques_Nombres_Índices["minecraft:tripwire_hook"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(132, 0), Diccionario_Bloques_Nombres_Índices["minecraft:tripwire"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(133, 0), Diccionario_Bloques_Nombres_Índices["minecraft:emerald_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(134, 0), Diccionario_Bloques_Nombres_Índices["minecraft:spruce_stairs"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(135, 0), Diccionario_Bloques_Nombres_Índices["minecraft:birch_stairs"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(136, 0), Diccionario_Bloques_Nombres_Índices["minecraft:jungle_stairs"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(137, 0), Diccionario_Bloques_Nombres_Índices["minecraft:command_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(138, 0), Diccionario_Bloques_Nombres_Índices["minecraft:beacon"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(139, 0), Diccionario_Bloques_Nombres_Índices["minecraft:cobblestone_wall"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(139, 1), Diccionario_Bloques_Nombres_Índices["minecraft:mossy_cobblestone_wall"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(140, 0), Diccionario_Bloques_Nombres_Índices["minecraft:flower_pot"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(141, 0), Diccionario_Bloques_Nombres_Índices["minecraft:carrots"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(142, 0), Diccionario_Bloques_Nombres_Índices["minecraft:potatoes"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(143, 0), Diccionario_Bloques_Nombres_Índices["minecraft:oak_button"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(144, 0), Diccionario_Bloques_Nombres_Índices["minecraft:skeleton_skull"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(144, 1), Diccionario_Bloques_Nombres_Índices["minecraft:wither_skeleton_skull"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(144, 2), Diccionario_Bloques_Nombres_Índices["minecraft:zombie_head"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(144, 3), Diccionario_Bloques_Nombres_Índices["minecraft:player_head"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(144, 4), Diccionario_Bloques_Nombres_Índices["minecraft:creeper_head"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(144, 5), Diccionario_Bloques_Nombres_Índices["minecraft:dragon_head"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(145, 0), Diccionario_Bloques_Nombres_Índices["minecraft:anvil"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(145, 1), Diccionario_Bloques_Nombres_Índices["minecraft:chipped_anvil"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(145, 2), Diccionario_Bloques_Nombres_Índices["minecraft:damaged_anvil"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(146, 0), Diccionario_Bloques_Nombres_Índices["minecraft:trapped_chest"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(147, 0), Diccionario_Bloques_Nombres_Índices["minecraft:light_weighted_pressure_plate"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(148, 0), Diccionario_Bloques_Nombres_Índices["minecraft:heavy_weighted_pressure_plate"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(149, 0), Diccionario_Bloques_Nombres_Índices["minecraft:comparator"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(150, 0), Diccionario_Bloques_Nombres_Índices["minecraft:comparator"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(151, 0), Diccionario_Bloques_Nombres_Índices["minecraft:daylight_detector"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(152, 0), Diccionario_Bloques_Nombres_Índices["minecraft:redstone_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(153, 0), Diccionario_Bloques_Nombres_Índices["minecraft:nether_quartz_ore"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(154, 0), Diccionario_Bloques_Nombres_Índices["minecraft:hopper"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(155, 0), Diccionario_Bloques_Nombres_Índices["minecraft:quartz_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(155, 1), Diccionario_Bloques_Nombres_Índices["minecraft:chiseled_quartz_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(155, 2), Diccionario_Bloques_Nombres_Índices["minecraft:quartz_pillar"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(156, 0), Diccionario_Bloques_Nombres_Índices["minecraft:quartz_stairs"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(157, 0), Diccionario_Bloques_Nombres_Índices["minecraft:activator_rail"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(158, 0), Diccionario_Bloques_Nombres_Índices["minecraft:dropper"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(159, 0), Diccionario_Bloques_Nombres_Índices["minecraft:white_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(159, 1), Diccionario_Bloques_Nombres_Índices["minecraft:orange_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(159, 2), Diccionario_Bloques_Nombres_Índices["minecraft:magenta_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(159, 3), Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(159, 4), Diccionario_Bloques_Nombres_Índices["minecraft:yellow_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(159, 5), Diccionario_Bloques_Nombres_Índices["minecraft:lime_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(159, 6), Diccionario_Bloques_Nombres_Índices["minecraft:pink_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(159, 7), Diccionario_Bloques_Nombres_Índices["minecraft:gray_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(159, 8), Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(159, 9), Diccionario_Bloques_Nombres_Índices["minecraft:cyan_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(159, 10), Diccionario_Bloques_Nombres_Índices["minecraft:purple_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(159, 11), Diccionario_Bloques_Nombres_Índices["minecraft:blue_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(159, 12), Diccionario_Bloques_Nombres_Índices["minecraft:brown_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(159, 13), Diccionario_Bloques_Nombres_Índices["minecraft:green_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(159, 14), Diccionario_Bloques_Nombres_Índices["minecraft:red_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(159, 15), Diccionario_Bloques_Nombres_Índices["minecraft:black_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(160, 0), Diccionario_Bloques_Nombres_Índices["minecraft:white_stained_glass_pane"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(160, 1), Diccionario_Bloques_Nombres_Índices["minecraft:orange_stained_glass_pane"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(160, 2), Diccionario_Bloques_Nombres_Índices["minecraft:magenta_stained_glass_pane"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(160, 3), Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_stained_glass_pane"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(160, 4), Diccionario_Bloques_Nombres_Índices["minecraft:yellow_stained_glass_pane"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(160, 5), Diccionario_Bloques_Nombres_Índices["minecraft:lime_stained_glass_pane"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(160, 6), Diccionario_Bloques_Nombres_Índices["minecraft:pink_stained_glass_pane"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(160, 7), Diccionario_Bloques_Nombres_Índices["minecraft:gray_stained_glass_pane"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(160, 8), Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_stained_glass_pane"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(160, 9), Diccionario_Bloques_Nombres_Índices["minecraft:cyan_stained_glass_pane"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(160, 10), Diccionario_Bloques_Nombres_Índices["minecraft:purple_stained_glass_pane"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(160, 11), Diccionario_Bloques_Nombres_Índices["minecraft:blue_stained_glass_pane"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(160, 12), Diccionario_Bloques_Nombres_Índices["minecraft:brown_stained_glass_pane"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(160, 13), Diccionario_Bloques_Nombres_Índices["minecraft:green_stained_glass_pane"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(160, 14), Diccionario_Bloques_Nombres_Índices["minecraft:red_stained_glass_pane"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(160, 15), Diccionario_Bloques_Nombres_Índices["minecraft:black_stained_glass_pane"]);
            for (short Índice_Data = 0; Índice_Data < 16; Índice_Data += 2) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(161, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:acacia_leaves"]);
            for (short Índice_Data = 1; Índice_Data < 16; Índice_Data += 2) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(161, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_leaves"]);
            for (short Índice_Data = 0; Índice_Data < 16; Índice_Data += 2) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(162, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:acacia_log"]);
            for (short Índice_Data = 1; Índice_Data < 16; Índice_Data += 2) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(162, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_log"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(163, 0), Diccionario_Bloques_Nombres_Índices["minecraft:acacia_stairs"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(164, 0), Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_stairs"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(165, 0), Diccionario_Bloques_Nombres_Índices["minecraft:slime_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(166, 0), Diccionario_Bloques_Nombres_Índices["minecraft:barrier"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(167, 0), Diccionario_Bloques_Nombres_Índices["minecraft:iron_trapdoor"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(168, 0), Diccionario_Bloques_Nombres_Índices["minecraft:prismarine"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(168, 1), Diccionario_Bloques_Nombres_Índices["minecraft:dark_prismarine"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(168, 2), Diccionario_Bloques_Nombres_Índices["minecraft:prismarine_bricks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(169, 0), Diccionario_Bloques_Nombres_Índices["minecraft:sea_lantern"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(170, 0), Diccionario_Bloques_Nombres_Índices["minecraft:hay_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(171, 0), Diccionario_Bloques_Nombres_Índices["minecraft:white_carpet"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(171, 1), Diccionario_Bloques_Nombres_Índices["minecraft:orange_carpet"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(171, 2), Diccionario_Bloques_Nombres_Índices["minecraft:magenta_carpet"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(171, 3), Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_carpet"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(171, 4), Diccionario_Bloques_Nombres_Índices["minecraft:yellow_carpet"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(171, 5), Diccionario_Bloques_Nombres_Índices["minecraft:lime_carpet"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(171, 6), Diccionario_Bloques_Nombres_Índices["minecraft:pink_carpet"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(171, 7), Diccionario_Bloques_Nombres_Índices["minecraft:gray_carpet"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(171, 8), Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_carpet"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(171, 9), Diccionario_Bloques_Nombres_Índices["minecraft:cyan_carpet"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(171, 10), Diccionario_Bloques_Nombres_Índices["minecraft:purple_carpet"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(171, 11), Diccionario_Bloques_Nombres_Índices["minecraft:blue_carpet"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(171, 12), Diccionario_Bloques_Nombres_Índices["minecraft:brown_carpet"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(171, 13), Diccionario_Bloques_Nombres_Índices["minecraft:green_carpet"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(171, 14), Diccionario_Bloques_Nombres_Índices["minecraft:red_carpet"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(171, 15), Diccionario_Bloques_Nombres_Índices["minecraft:black_carpet"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(172, 0), Diccionario_Bloques_Nombres_Índices["minecraft:terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(173, 0), Diccionario_Bloques_Nombres_Índices["minecraft:coal_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(174, 0), Diccionario_Bloques_Nombres_Índices["minecraft:packed_ice"]);
            for (short Índice_Data = 0; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(175, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:sunflower"]);
            for (short Índice_Data = 1; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(175, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:lilac"]);
            for (short Índice_Data = 2; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(175, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:tall_grass"]);
            for (short Índice_Data = 3; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(175, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:large_fern"]);
            for (short Índice_Data = 4; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(175, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:rose_bush"]);
            for (short Índice_Data = 5; Índice_Data < 16; Índice_Data += 8) Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(175, Índice_Data), Diccionario_Bloques_Nombres_Índices["minecraft:peony"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(176, 0), Diccionario_Bloques_Nombres_Índices["minecraft:white_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(176, 1), Diccionario_Bloques_Nombres_Índices["minecraft:orange_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(176, 2), Diccionario_Bloques_Nombres_Índices["minecraft:magenta_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(176, 3), Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(176, 4), Diccionario_Bloques_Nombres_Índices["minecraft:yellow_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(176, 5), Diccionario_Bloques_Nombres_Índices["minecraft:lime_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(176, 6), Diccionario_Bloques_Nombres_Índices["minecraft:pink_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(176, 7), Diccionario_Bloques_Nombres_Índices["minecraft:gray_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(176, 8), Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(176, 9), Diccionario_Bloques_Nombres_Índices["minecraft:cyan_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(176, 10), Diccionario_Bloques_Nombres_Índices["minecraft:purple_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(176, 11), Diccionario_Bloques_Nombres_Índices["minecraft:blue_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(176, 12), Diccionario_Bloques_Nombres_Índices["minecraft:brown_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(176, 13), Diccionario_Bloques_Nombres_Índices["minecraft:green_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(176, 14), Diccionario_Bloques_Nombres_Índices["minecraft:red_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(176, 15), Diccionario_Bloques_Nombres_Índices["minecraft:black_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(177, 0), Diccionario_Bloques_Nombres_Índices["minecraft:white_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(177, 1), Diccionario_Bloques_Nombres_Índices["minecraft:orange_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(177, 2), Diccionario_Bloques_Nombres_Índices["minecraft:magenta_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(177, 3), Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(177, 4), Diccionario_Bloques_Nombres_Índices["minecraft:yellow_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(177, 5), Diccionario_Bloques_Nombres_Índices["minecraft:lime_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(177, 6), Diccionario_Bloques_Nombres_Índices["minecraft:pink_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(177, 7), Diccionario_Bloques_Nombres_Índices["minecraft:gray_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(177, 8), Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(177, 9), Diccionario_Bloques_Nombres_Índices["minecraft:cyan_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(177, 10), Diccionario_Bloques_Nombres_Índices["minecraft:purple_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(177, 11), Diccionario_Bloques_Nombres_Índices["minecraft:blue_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(177, 12), Diccionario_Bloques_Nombres_Índices["minecraft:brown_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(177, 13), Diccionario_Bloques_Nombres_Índices["minecraft:green_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(177, 14), Diccionario_Bloques_Nombres_Índices["minecraft:red_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(177, 15), Diccionario_Bloques_Nombres_Índices["minecraft:black_banner"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(178, 0), Diccionario_Bloques_Nombres_Índices["minecraft:daylight_detector"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(179, 0), Diccionario_Bloques_Nombres_Índices["minecraft:red_sandstone"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(179, 1), Diccionario_Bloques_Nombres_Índices["minecraft:chiseled_red_sandstone"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(179, 2), Diccionario_Bloques_Nombres_Índices["minecraft:cut_red_sandstone"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(180, 0), Diccionario_Bloques_Nombres_Índices["minecraft:red_sandstone_stairs"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(181, 0), Diccionario_Bloques_Nombres_Índices["minecraft:red_sandstone"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(181, 8), Diccionario_Bloques_Nombres_Índices["minecraft:smooth_red_sandstone"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(182, 0), Diccionario_Bloques_Nombres_Índices["minecraft:red_sandstone_slab"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(183, 0), Diccionario_Bloques_Nombres_Índices["minecraft:spruce_fence_gate"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(184, 0), Diccionario_Bloques_Nombres_Índices["minecraft:birch_fence_gate"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(185, 0), Diccionario_Bloques_Nombres_Índices["minecraft:jungle_fence_gate"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(186, 0), Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_fence_gate"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(187, 0), Diccionario_Bloques_Nombres_Índices["minecraft:acacia_fence_gate"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(188, 0), Diccionario_Bloques_Nombres_Índices["minecraft:spruce_fence"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(189, 0), Diccionario_Bloques_Nombres_Índices["minecraft:birch_fence"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(190, 0), Diccionario_Bloques_Nombres_Índices["minecraft:jungle_fence"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(191, 0), Diccionario_Bloques_Nombres_Índices["minecraft:acacia_fence"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(192, 0), Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_fence"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(193, 0), Diccionario_Bloques_Nombres_Índices["minecraft:spruce_door"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(194, 0), Diccionario_Bloques_Nombres_Índices["minecraft:birch_door"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(195, 0), Diccionario_Bloques_Nombres_Índices["minecraft:jungle_door"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(196, 0), Diccionario_Bloques_Nombres_Índices["minecraft:acacia_door"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(197, 0), Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_door"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(198, 0), Diccionario_Bloques_Nombres_Índices["minecraft:end_rod"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(199, 0), Diccionario_Bloques_Nombres_Índices["minecraft:chorus_plant"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(200, 0), Diccionario_Bloques_Nombres_Índices["minecraft:chorus_flower"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(201, 0), Diccionario_Bloques_Nombres_Índices["minecraft:purpur_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(202, 0), Diccionario_Bloques_Nombres_Índices["minecraft:purpur_pillar"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(203, 0), Diccionario_Bloques_Nombres_Índices["minecraft:purpur_stairs"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(204, 0), Diccionario_Bloques_Nombres_Índices["minecraft:purpur_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(205, 0), Diccionario_Bloques_Nombres_Índices["minecraft:purpur_slab"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(206, 0), Diccionario_Bloques_Nombres_Índices["minecraft:end_stone_bricks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(207, 0), Diccionario_Bloques_Nombres_Índices["minecraft:beetroots"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(208, 0), Diccionario_Bloques_Nombres_Índices["minecraft:grass_path"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(209, 0), Diccionario_Bloques_Nombres_Índices["minecraft:end_gateway"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(210, 0), Diccionario_Bloques_Nombres_Índices["minecraft:repeating_command_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(211, 0), Diccionario_Bloques_Nombres_Índices["minecraft:chain_command_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(212, 0), Diccionario_Bloques_Nombres_Índices["minecraft:frosted_ice"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(213, 0), Diccionario_Bloques_Nombres_Índices["minecraft:magma_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(214, 0), Diccionario_Bloques_Nombres_Índices["minecraft:nether_wart_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(215, 0), Diccionario_Bloques_Nombres_Índices["minecraft:red_nether_bricks"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(216, 0), Diccionario_Bloques_Nombres_Índices["minecraft:bone_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(217, 0), Diccionario_Bloques_Nombres_Índices["minecraft:structure_void"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(218, 0), Diccionario_Bloques_Nombres_Índices["minecraft:observer"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(219, 0), Diccionario_Bloques_Nombres_Índices["minecraft:white_shulker_box"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(220, 0), Diccionario_Bloques_Nombres_Índices["minecraft:orange_shulker_box"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(221, 0), Diccionario_Bloques_Nombres_Índices["minecraft:magenta_shulker_box"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(222, 0), Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_shulker_box"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(223, 0), Diccionario_Bloques_Nombres_Índices["minecraft:yellow_shulker_box"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(224, 0), Diccionario_Bloques_Nombres_Índices["minecraft:lime_shulker_box"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(225, 0), Diccionario_Bloques_Nombres_Índices["minecraft:pink_shulker_box"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(226, 0), Diccionario_Bloques_Nombres_Índices["minecraft:gray_shulker_box"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(227, 0), Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_shulker_box"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(228, 0), Diccionario_Bloques_Nombres_Índices["minecraft:cyan_shulker_box"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(229, 0), Diccionario_Bloques_Nombres_Índices["minecraft:purple_shulker_box"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(230, 0), Diccionario_Bloques_Nombres_Índices["minecraft:blue_shulker_box"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(231, 0), Diccionario_Bloques_Nombres_Índices["minecraft:brown_shulker_box"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(232, 0), Diccionario_Bloques_Nombres_Índices["minecraft:green_shulker_box"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(233, 0), Diccionario_Bloques_Nombres_Índices["minecraft:red_shulker_box"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(234, 0), Diccionario_Bloques_Nombres_Índices["minecraft:black_shulker_box"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(235, 0), Diccionario_Bloques_Nombres_Índices["minecraft:white_glazed_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(236, 0), Diccionario_Bloques_Nombres_Índices["minecraft:orange_glazed_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(237, 0), Diccionario_Bloques_Nombres_Índices["minecraft:magenta_glazed_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(238, 0), Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_glazed_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(239, 0), Diccionario_Bloques_Nombres_Índices["minecraft:yellow_glazed_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(240, 0), Diccionario_Bloques_Nombres_Índices["minecraft:lime_glazed_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(241, 0), Diccionario_Bloques_Nombres_Índices["minecraft:pink_glazed_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(242, 0), Diccionario_Bloques_Nombres_Índices["minecraft:gray_glazed_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(243, 0), Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_glazed_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(244, 0), Diccionario_Bloques_Nombres_Índices["minecraft:cyan_glazed_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(245, 0), Diccionario_Bloques_Nombres_Índices["minecraft:purple_glazed_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(246, 0), Diccionario_Bloques_Nombres_Índices["minecraft:blue_glazed_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(247, 0), Diccionario_Bloques_Nombres_Índices["minecraft:brown_glazed_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(248, 0), Diccionario_Bloques_Nombres_Índices["minecraft:green_glazed_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(249, 0), Diccionario_Bloques_Nombres_Índices["minecraft:red_glazed_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(250, 0), Diccionario_Bloques_Nombres_Índices["minecraft:black_glazed_terracotta"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(251, 0), Diccionario_Bloques_Nombres_Índices["minecraft:white_concrete"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(251, 1), Diccionario_Bloques_Nombres_Índices["minecraft:orange_concrete"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(251, 2), Diccionario_Bloques_Nombres_Índices["minecraft:magenta_concrete"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(251, 3), Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_concrete"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(251, 4), Diccionario_Bloques_Nombres_Índices["minecraft:yellow_concrete"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(251, 5), Diccionario_Bloques_Nombres_Índices["minecraft:lime_concrete"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(251, 6), Diccionario_Bloques_Nombres_Índices["minecraft:pink_concrete"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(251, 7), Diccionario_Bloques_Nombres_Índices["minecraft:gray_concrete"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(251, 8), Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_concrete"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(251, 9), Diccionario_Bloques_Nombres_Índices["minecraft:cyan_concrete"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(251, 10), Diccionario_Bloques_Nombres_Índices["minecraft:purple_concrete"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(251, 11), Diccionario_Bloques_Nombres_Índices["minecraft:blue_concrete"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(251, 12), Diccionario_Bloques_Nombres_Índices["minecraft:brown_concrete"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(251, 13), Diccionario_Bloques_Nombres_Índices["minecraft:green_concrete"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(251, 14), Diccionario_Bloques_Nombres_Índices["minecraft:red_concrete"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(251, 15), Diccionario_Bloques_Nombres_Índices["minecraft:black_concrete"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(252, 0), Diccionario_Bloques_Nombres_Índices["minecraft:white_concrete_powder"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(252, 1), Diccionario_Bloques_Nombres_Índices["minecraft:orange_concrete_powder"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(252, 2), Diccionario_Bloques_Nombres_Índices["minecraft:magenta_concrete_powder"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(252, 3), Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_concrete_powder"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(252, 4), Diccionario_Bloques_Nombres_Índices["minecraft:yellow_concrete_powder"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(252, 5), Diccionario_Bloques_Nombres_Índices["minecraft:lime_concrete_powder"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(252, 6), Diccionario_Bloques_Nombres_Índices["minecraft:pink_concrete_powder"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(252, 7), Diccionario_Bloques_Nombres_Índices["minecraft:gray_concrete_powder"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(252, 8), Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_concrete_powder"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(252, 9), Diccionario_Bloques_Nombres_Índices["minecraft:cyan_concrete_powder"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(252, 10), Diccionario_Bloques_Nombres_Índices["minecraft:purple_concrete_powder"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(252, 11), Diccionario_Bloques_Nombres_Índices["minecraft:blue_concrete_powder"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(252, 12), Diccionario_Bloques_Nombres_Índices["minecraft:brown_concrete_powder"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(252, 13), Diccionario_Bloques_Nombres_Índices["minecraft:green_concrete_powder"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(252, 14), Diccionario_Bloques_Nombres_Índices["minecraft:red_concrete_powder"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(252, 15), Diccionario_Bloques_Nombres_Índices["minecraft:black_concrete_powder"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(255, 0), Diccionario_Bloques_Nombres_Índices["minecraft:structure_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(255, 1), Diccionario_Bloques_Nombres_Índices["minecraft:structure_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(255, 2), Diccionario_Bloques_Nombres_Índices["minecraft:structure_block"]);
            Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Obtener_Valor_ID_Data(255, 3), Diccionario_Bloques_Nombres_Índices["minecraft:structure_block"]);
            
            // 36, 253, 254
            // Agregar el resto de Datas posibles para cada ID con el valor del primero:
            for (short Índice_ID = 0; Índice_ID < 256; Índice_ID++)
            {
                short Índice_ID_Data_Cero = Obtener_Valor_ID_Data(Índice_ID, 0);
                if (!Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.ContainsKey(Índice_ID_Data_Cero))
                {
                    Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Índice_ID_Data_Cero, Diccionario_Bloques_Nombres_Índices["minecraft:air"]);
                }
                for (short Índice_Data = 0; Índice_Data < 16; Índice_Data++)
                {
                    short Índice_ID_Data = Obtener_Valor_ID_Data(Índice_ID, Índice_Data);
                    if (!Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.ContainsKey(Índice_ID_Data))
                    {
                        Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Índice_ID_Data, Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13[Índice_ID_Data_Cero]);
                        //Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13.Add(Índice_ID_Data, Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13[Obtener_Valor_ID_Data(152, 0)]);
                    }
                }
                //else MessageBox.Show(Índice_ID.ToString(), "No dic");
            }

            Índice_Aire = Diccionario_Bloques_Nombres_Índices["minecraft:air"];
            Índice_Aire_Cueva = Diccionario_Bloques_Nombres_Índices["minecraft:cave_air"];
            Índice_Aire_Vacío = Diccionario_Bloques_Nombres_Índices["minecraft:void_air"];

            Diccionario_Bloques_Aire.Add(Diccionario_Bloques_Nombres_Índices["minecraft:air"], "minecraft:air");
            Diccionario_Bloques_Aire.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cave_air"], "minecraft:cave_air");
            Diccionario_Bloques_Aire.Add(Diccionario_Bloques_Nombres_Índices["minecraft:void_air"], "minecraft:void_air");

            Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:air"], "minecraft:air");
            Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cave_air"], "minecraft:cave_air");
            Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:void_air"], "minecraft:void_air");
            Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_leaves"], "minecraft:acacia_leaves");
            Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_leaves"], "minecraft:birch_leaves");
            Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_leaves"], "minecraft:dark_oak_leaves");
            Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_leaves"], "minecraft:jungle_leaves");
            Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_leaves"], "minecraft:oak_leaves");
            Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_leaves"], "minecraft:spruce_leaves");
            Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_log"], "minecraft:acacia_log");
            Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_log"], "minecraft:birch_log");
            Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_log"], "minecraft:dark_oak_log");
            Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_log"], "minecraft:jungle_log");
            Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_log"], "minecraft:oak_log");
            Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_log"], "minecraft:spruce_log");
            Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_mushroom_block"], "minecraft:brown_mushroom_block");
            Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_mushroom_block"], "minecraft:red_mushroom_block");
            Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:mushroom_stem"], "minecraft:mushroom_stem");
            Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:vine"], "minecraft:vine");
            Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cocoa"], "minecraft:cocoa");
            Diccionario_Bloques_Aire_Hojas.Add(Diccionario_Bloques_Nombres_Índices["minecraft:snow"], "minecraft:snow");

            Diccionario_Bloques_Transparentes.Add(Diccionario_Bloques_Nombres_Índices["minecraft:air"], "minecraft:air");
            Diccionario_Bloques_Transparentes.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cave_air"], "minecraft:cave_air");
            Diccionario_Bloques_Transparentes.Add(Diccionario_Bloques_Nombres_Índices["minecraft:void_air"], "minecraft:void_air");
            Diccionario_Bloques_Transparentes.Add(Diccionario_Bloques_Nombres_Índices["minecraft:water"], "minecraft:water");
            Diccionario_Bloques_Transparentes.Add(Diccionario_Bloques_Nombres_Índices["minecraft:flowing_water"], "minecraft:flowing_water");
            Diccionario_Bloques_Transparentes.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lava"], "minecraft:lava");
            Diccionario_Bloques_Transparentes.Add(Diccionario_Bloques_Nombres_Índices["minecraft:flowing_lava"], "minecraft:flowing_lava");
            Diccionario_Bloques_Transparentes.Add(Diccionario_Bloques_Nombres_Índices["minecraft:fire"], "minecraft:fire");
            Diccionario_Bloques_Transparentes.Add(Diccionario_Bloques_Nombres_Índices["minecraft:snow"], "minecraft:snow");
            Diccionario_Bloques_Transparentes.Add(Diccionario_Bloques_Nombres_Índices["minecraft:ice"], "minecraft:ice");
            Diccionario_Bloques_Transparentes.Add(Diccionario_Bloques_Nombres_Índices["minecraft:frosted_ice"], "minecraft:frosted_ice");

            Diccionario_Bloques_Minerales.Add(Diccionario_Bloques_Nombres_Índices["minecraft:emerald_ore"], Color.FromArgb(0, 255, 0));
            Diccionario_Bloques_Minerales.Add(Diccionario_Bloques_Nombres_Índices["minecraft:diamond_ore"], Color.FromArgb(0, 255, 255));
            Diccionario_Bloques_Minerales.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gold_ore"], Color.FromArgb(255, 255, 0));
            Diccionario_Bloques_Minerales.Add(Diccionario_Bloques_Nombres_Índices["minecraft:iron_ore"], Color.FromArgb(192, 192, 192));
            Diccionario_Bloques_Minerales.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lapis_ore"], Color.FromArgb(0, 0, 144));
            Diccionario_Bloques_Minerales.Add(Diccionario_Bloques_Nombres_Índices["minecraft:redstone_ore"], Color.FromArgb(255, 0, 0));
            Diccionario_Bloques_Minerales.Add(Diccionario_Bloques_Nombres_Índices["minecraft:coal_ore"], Color.FromArgb(128, 128, 128));
            Diccionario_Bloques_Minerales.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_quartz_ore"], Color.FromArgb(255, 255, 255));

            /*foreach (KeyValuePair<string, short> Entrada in Diccionario_Bloques_Nombres_Índices)
            {
                Lista_Bloques_Nombres.Add(Entrada.Key);
            }*/

            Diccionario_Bloques_Minerales_1_12_2_a_1_13.Add(129, Diccionario_Bloques_Nombres_Índices["minecraft:emerald_ore"]);
            Diccionario_Bloques_Minerales_1_12_2_a_1_13.Add(56, Diccionario_Bloques_Nombres_Índices["minecraft:diamond_ore"]);
            Diccionario_Bloques_Minerales_1_12_2_a_1_13.Add(14, Diccionario_Bloques_Nombres_Índices["minecraft:gold_ore"]);
            Diccionario_Bloques_Minerales_1_12_2_a_1_13.Add(15, Diccionario_Bloques_Nombres_Índices["minecraft:iron_ore"]);
            Diccionario_Bloques_Minerales_1_12_2_a_1_13.Add(21, Diccionario_Bloques_Nombres_Índices["minecraft:lapis_ore"]);
            Diccionario_Bloques_Minerales_1_12_2_a_1_13.Add(73, Diccionario_Bloques_Nombres_Índices["minecraft:redstone_ore"]);
            Diccionario_Bloques_Minerales_1_12_2_a_1_13.Add(16, Diccionario_Bloques_Nombres_Índices["minecraft:coal_ore"]);
            Diccionario_Bloques_Minerales_1_12_2_a_1_13.Add(153, Diccionario_Bloques_Nombres_Índices["minecraft:nether_quartz_ore"]);

            Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:mob_spawner"], Color.FromArgb(255, 0, 255));
            Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chest"], Color.FromArgb(255, 0, 0));
            Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:trapped_chest"], Color.FromArgb(128, 0, 0));
            Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:ender_chest"], Color.FromArgb(160, 0, 255));
            Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sponge"], Color.FromArgb(255, 255, 0));
            Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wet_sponge"], Color.FromArgb(160, 160, 0));
            Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tnt"], Color.FromArgb(255, 170, 93, 71));
            Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine_bricks"], Color.FromArgb(255, 100, 160, 143));
            Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine"], Color.FromArgb(255, 100, 152, 142));
            Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_prismarine"], Color.FromArgb(255, 60, 88, 75));

            Diccionario_Bloques_Tesoros_1_12_2_a_1_13.Add(52, Diccionario_Bloques_Nombres_Índices["minecraft:mob_spawner"]);
            Diccionario_Bloques_Tesoros_1_12_2_a_1_13.Add(54, Diccionario_Bloques_Nombres_Índices["minecraft:chest"]);
            Diccionario_Bloques_Tesoros_1_12_2_a_1_13.Add(146, Diccionario_Bloques_Nombres_Índices["minecraft:trapped_chest"]);
            Diccionario_Bloques_Tesoros_1_12_2_a_1_13.Add(130, Diccionario_Bloques_Nombres_Índices["minecraft:ender_chest"]);
            Diccionario_Bloques_Tesoros_1_12_2_a_1_13.Add(19, Diccionario_Bloques_Nombres_Índices["minecraft:sponge"]);
            Diccionario_Bloques_Tesoros_1_12_2_a_1_13.Add(46, Diccionario_Bloques_Nombres_Índices["minecraft:tnt"]);
            Diccionario_Bloques_Tesoros_1_12_2_a_1_13.Add(168, Diccionario_Bloques_Nombres_Índices["minecraft:prismarine"]);

            /*Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:");
            Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:");
            Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:");
            Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:");
            Diccionario_Bloques_Tesoros.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:");*/

            /*Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_bark"], "minecraft:acacia_bark");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_button"], "minecraft:acacia_button");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_door"], "minecraft:acacia_door");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_fence"], "minecraft:acacia_fence");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_fence_gate"], "minecraft:acacia_fence_gate");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_leaves"], "minecraft:acacia_leaves");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:acacia_log");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:acacia_planks");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_pressure_plate"], "minecraft:acacia_pressure_plate");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_sapling"], "minecraft:acacia_sapling");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_slab"], "minecraft:acacia_slab");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_stairs"], "minecraft:acacia_stairs");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_trapdoor"], "minecraft:acacia_trapdoor");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:activator_rail"], "minecraft:activator_rail");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:air"], "minecraft:air");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:allium"], "minecraft:allium");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:andesite");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:anvil"], "minecraft:anvil");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:attached_melon_stem"], "minecraft:attached_melon_stem");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:attached_pumpkin_stem"], "minecraft:attached_pumpkin_stem");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:azure_bluet"], "minecraft:azure_bluet");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:banner"], "minecraft:banner");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:barrier"], "minecraft:barrier");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:beacon"], "minecraft:beacon");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:bed"], "minecraft:bed");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:bedrock");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:beetroots"], "minecraft:beetroots");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:birch_bark");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_button"], "minecraft:birch_button");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_door"], "minecraft:birch_door");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_fence"], "minecraft:birch_fence");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_fence_gate"], "minecraft:birch_fence_gate");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_leaves"], "minecraft:birch_leaves");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:birch_log");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:birch_planks");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_pressure_plate"], "minecraft:birch_pressure_plate");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_sapling"], "minecraft:birch_sapling");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_slab"], "minecraft:birch_slab");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_stairs"], "minecraft:birch_stairs");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_trapdoor"], "minecraft:birch_trapdoor");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_banner"], "minecraft:black_banner");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_bed"], "minecraft:black_bed");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_carpet"], "minecraft:black_carpet");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:black_concrete");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:black_concrete_powder");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:black_glazed_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:black_shulker_box");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_stained_glass"], "minecraft:black_stained_glass");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_stained_glass_pane"], "minecraft:black_stained_glass_pane");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:black_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:black_wool");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_banner"], "minecraft:blue_banner");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_bed"], "minecraft:blue_bed");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_carpet"], "minecraft:blue_carpet");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:blue_concrete");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:blue_concrete_powder");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_coral"], "minecraft:blue_coral");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_coral_fan"], "minecraft:blue_coral_fan");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_coral_plant"], "minecraft:blue_coral_plant");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:blue_dead_coral");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:blue_glazed_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_orchid"], "minecraft:blue_orchid");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:blue_shulker_box");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_stained_glass"], "minecraft:blue_stained_glass");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_stained_glass_pane"], "minecraft:blue_stained_glass_pane");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:blue_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:blue_wool");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:bone_block");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:bookshelf");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brewing_stand"], "minecraft:brewing_stand");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brick_slab"], "minecraft:brick_slab");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brick_stairs"], "minecraft:brick_stairs");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:bricks");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_banner"], "minecraft:brown_banner");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_bed"], "minecraft:brown_bed");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_carpet"], "minecraft:brown_carpet");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:brown_concrete");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:brown_concrete_powder");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:brown_glazed_terracotta");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_mushroom"], "minecraft:brown_mushroom");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:brown_mushroom_block");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:brown_shulker_box");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_stained_glass"], "minecraft:brown_stained_glass");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_stained_glass_pane"], "minecraft:brown_stained_glass_pane");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:brown_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:brown_wool");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:bubble_column"], "minecraft:bubble_column");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cactus"], "minecraft:cactus");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cake"], "minecraft:cake");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:carrots"], "minecraft:carrots");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:carved_pumpkin");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cauldron"], "minecraft:cauldron");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cave_air"], "minecraft:cave_air");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:chain_command_block");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chest"], "minecraft:chest");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chipped_anvil"], "minecraft:chipped_anvil");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:chiseled_quartz_block");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:chiseled_red_sandstone");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:chiseled_sandstone");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:chiseled_stone_bricks");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chorus_flower"], "minecraft:chorus_flower");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chorus_plant"], "minecraft:chorus_plant");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:clay");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:coal_block");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:coal_ore");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:coarse_dirt");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:cobblestone");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cobblestone_slab"], "minecraft:cobblestone_slab");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cobblestone_stairs"], "minecraft:cobblestone_stairs");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cobblestone_wall"], "minecraft:cobblestone_wall");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cobweb"], "minecraft:cobweb");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cocoa"], "minecraft:cocoa");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:command_block");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:comparator"], "minecraft:comparator");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:cracked_stone_bricks");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:crafting_table");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:creeper_head"], "minecraft:creeper_head");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:creeper_wall_head"], "minecraft:creeper_wall_head");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:cut_red_sandstone");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:cut_sandstone");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_banner"], "minecraft:cyan_banner");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_bed"], "minecraft:cyan_bed");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_carpet"], "minecraft:cyan_carpet");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:cyan_concrete");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:cyan_concrete_powder");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:cyan_glazed_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:cyan_shulker_box");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_stained_glass"], "minecraft:cyan_stained_glass");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_stained_glass_pane"], "minecraft:cyan_stained_glass_pane");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:cyan_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:cyan_wool");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:damaged_anvil"], "minecraft:damaged_anvil");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dandelion"], "minecraft:dandelion");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:dark_oak_bark");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_button"], "minecraft:dark_oak_button");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_door"], "minecraft:dark_oak_door");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_fence"], "minecraft:dark_oak_fence");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_fence_gate"], "minecraft:dark_oak_fence_gate");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_leaves"], "minecraft:dark_oak_leaves");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:dark_oak_log");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:dark_oak_planks");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_pressure_plate"], "minecraft:dark_oak_pressure_plate");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_sapling"], "minecraft:dark_oak_sapling");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_slab"], "minecraft:dark_oak_slab");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_stairs"], "minecraft:dark_oak_stairs");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_trapdoor"], "minecraft:dark_oak_trapdoor");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:dark_prismarine");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_prismarine_slab"], "minecraft:dark_prismarine_slab");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_prismarine_stairs"], "minecraft:dark_prismarine_stairs");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:daylight_detector"], "minecraft:daylight_detector");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dead_bush"], "minecraft:dead_bush");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:detector_rail"], "minecraft:detector_rail");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:diamond_block");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:diamond_ore");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:diorite");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:dirt");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:dispenser");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dragon_egg"], "minecraft:dragon_egg");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dragon_head"], "minecraft:dragon_head");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dragon_wall_head"], "minecraft:dragon_wall_head");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:dried_kelp_block");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:dropper");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:emerald_block");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:emerald_ore");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:enchanting_table"], "minecraft:enchanting_table");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:end_gateway"], "minecraft:end_gateway");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:end_portal"], "minecraft:end_portal");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:end_portal_frame"], "minecraft:end_portal_frame");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:end_rod"], "minecraft:end_rod");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:end_stone");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:end_stone_bricks");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:ender_chest"], "minecraft:ender_chest");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:farmland"], "minecraft:farmland");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:fern"], "minecraft:fern");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:fire"], "minecraft:fire");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:flower_pot"], "minecraft:flower_pot");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:flowing_lava"], "minecraft:flowing_lava");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:flowing_water"], "minecraft:flowing_water");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:four_turtle_eggs"], "minecraft:four_turtle_eggs");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:frosted_ice"], "minecraft:frosted_ice");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:furnace");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:glass"], "minecraft:glass");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:glass_pane"], "minecraft:glass_pane");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:glowstone");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:gold_block");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:gold_ore");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:granite");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:grass"], "minecraft:grass");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:grass_block");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:grass_path"], "minecraft:grass_path");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:gravel");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_banner"], "minecraft:gray_banner");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_bed"], "minecraft:gray_bed");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_carpet"], "minecraft:gray_carpet");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:gray_concrete");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:gray_concrete_powder");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:gray_glazed_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:gray_shulker_box");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_stained_glass"], "minecraft:gray_stained_glass");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_stained_glass_pane"], "minecraft:gray_stained_glass_pane");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:gray_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:gray_wool");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_banner"], "minecraft:green_banner");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_bed"], "minecraft:green_bed");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_carpet"], "minecraft:green_carpet");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:green_concrete");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:green_concrete_powder");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:green_glazed_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:green_shulker_box");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_stained_glass"], "minecraft:green_stained_glass");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_stained_glass_pane"], "minecraft:green_stained_glass_pane");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:green_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:green_wool");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:hay_block");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:heavy_weighted_pressure_plate"], "minecraft:heavy_weighted_pressure_plate");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:hopper"], "minecraft:hopper");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:ice"], "minecraft:ice");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_chiseled_stone_bricks"], "minecraft:infested_chiseled_stone_bricks");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_cobblestone"], "minecraft:infested_cobblestone");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_cracked_stone_bricks"], "minecraft:infested_cracked_stone_bricks");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_mossy_stone_bricks"], "minecraft:infested_mossy_stone_bricks");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_stone"], "minecraft:infested_stone");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_stone_bricks"], "minecraft:infested_stone_bricks");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:iron_bars"], "minecraft:iron_bars");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:iron_block");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:iron_door"], "minecraft:iron_door");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:iron_ore");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:iron_trapdoor"], "minecraft:iron_trapdoor");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:jack_o_lantern");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:jukebox");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:jungle_bark");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_button"], "minecraft:jungle_button");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_door"], "minecraft:jungle_door");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_fence"], "minecraft:jungle_fence");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_fence_gate"], "minecraft:jungle_fence_gate");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_leaves"], "minecraft:jungle_leaves");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:jungle_log");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:jungle_planks");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_pressure_plate"], "minecraft:jungle_pressure_plate");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_sapling"], "minecraft:jungle_sapling");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_slab"], "minecraft:jungle_slab");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_stairs"], "minecraft:jungle_stairs");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_trapdoor"], "minecraft:jungle_trapdoor");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:kelp"], "minecraft:kelp");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:kelp_top"], "minecraft:kelp_top");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:ladder"], "minecraft:ladder");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:lapis_block");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:lapis_ore");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:large_fern"], "minecraft:large_fern");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lava"], "minecraft:lava");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lever"], "minecraft:lever");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_banner"], "minecraft:light_blue_banner");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_bed"], "minecraft:light_blue_bed");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_carpet"], "minecraft:light_blue_carpet");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_blue_concrete");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_blue_concrete_powder");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_blue_glazed_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_blue_shulker_box");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_stained_glass"], "minecraft:light_blue_stained_glass");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_stained_glass_pane"], "minecraft:light_blue_stained_glass_pane");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_blue_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_blue_wool");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_banner"], "minecraft:light_gray_banner");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_bed"], "minecraft:light_gray_bed");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_carpet"], "minecraft:light_gray_carpet");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_gray_concrete");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_gray_concrete_powder");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_gray_glazed_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_gray_shulker_box");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_stained_glass"], "minecraft:light_gray_stained_glass");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_stained_glass_pane"], "minecraft:light_gray_stained_glass_pane");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_gray_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_gray_wool");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_weighted_pressure_plate"], "minecraft:light_weighted_pressure_plate");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lilac"], "minecraft:lilac");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lily_pad"], "minecraft:lily_pad");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_banner"], "minecraft:lime_banner");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_bed"], "minecraft:lime_bed");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_carpet"], "minecraft:lime_carpet");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:lime_concrete");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:lime_concrete_powder");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:lime_glazed_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:lime_shulker_box");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_stained_glass"], "minecraft:lime_stained_glass");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_stained_glass_pane"], "minecraft:lime_stained_glass_pane");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:lime_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:lime_wool");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_banner"], "minecraft:magenta_banner");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_bed"], "minecraft:magenta_bed");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_carpet"], "minecraft:magenta_carpet");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:magenta_concrete");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:magenta_concrete_powder");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:magenta_glazed_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:magenta_shulker_box");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_stained_glass"], "minecraft:magenta_stained_glass");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_stained_glass_pane"], "minecraft:magenta_stained_glass_pane");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:magenta_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:magenta_wool");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:magma_block");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:melon_block");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:melon_stem"], "minecraft:melon_stem");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:mob_spawner"], "minecraft:mob_spawner");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:mossy_cobblestone");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:mossy_cobblestone_wall"], "minecraft:mossy_cobblestone_wall");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:mossy_stone_bricks");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:moving_piston"], "minecraft:moving_piston");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:mushroom_stem");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:mycelium");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_brick_fence"], "minecraft:nether_brick_fence");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_brick_slab"], "minecraft:nether_brick_slab");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_brick_stairs"], "minecraft:nether_brick_stairs");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:nether_bricks");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_quartz_ore"], "minecraft:nether_quartz_ore");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_wart"], "minecraft:nether_wart");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:nether_wart_block");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:netherrack");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:note_block");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:oak_bark");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_button"], "minecraft:oak_button");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_door"], "minecraft:oak_door");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_fence"], "minecraft:oak_fence");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_fence_gate"], "minecraft:oak_fence_gate");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_leaves"], "minecraft:oak_leaves");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:oak_log");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:oak_planks");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_pressure_plate"], "minecraft:oak_pressure_plate");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_sapling"], "minecraft:oak_sapling");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_slab"], "minecraft:oak_slab");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_stairs"], "minecraft:oak_stairs");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_trapdoor"], "minecraft:oak_trapdoor");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:observer");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:obsidian");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_banner"], "minecraft:orange_banner");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_bed"], "minecraft:orange_bed");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_carpet"], "minecraft:orange_carpet");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:orange_concrete");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:orange_concrete_powder");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:orange_glazed_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:orange_shulker_box");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_stained_glass"], "minecraft:orange_stained_glass");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_stained_glass_pane"], "minecraft:orange_stained_glass_pane");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:orange_terracotta");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_tulip"], "minecraft:orange_tulip");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:orange_wool");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oxeye_daisy"], "minecraft:oxeye_daisy");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:packed_ice");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:peony"], "minecraft:peony");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:petrified_oak_slab"], "minecraft:petrified_oak_slab");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_banner"], "minecraft:pink_banner");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_bed"], "minecraft:pink_bed");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_carpet"], "minecraft:pink_carpet");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:pink_concrete");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:pink_concrete_powder");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:pink_coral");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_coral_fan"], "minecraft:pink_coral_fan");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_coral_plant"], "minecraft:pink_coral_plant");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:pink_dead_coral");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:pink_glazed_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:pink_shulker_box");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_stained_glass"], "minecraft:pink_stained_glass");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_stained_glass_pane"], "minecraft:pink_stained_glass_pane");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:pink_terracotta");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_tulip"], "minecraft:pink_tulip");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:pink_wool");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:piston");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:piston_head"], "minecraft:piston_head");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:player_head"], "minecraft:player_head");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:player_wall_head"], "minecraft:player_wall_head");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:podzol");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:polished_andesite");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:polished_diorite");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:polished_granite");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:poppy"], "minecraft:poppy");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:portal"], "minecraft:portal");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:potatoes"], "minecraft:potatoes");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:potted_red_mushroom"], "minecraft:potted_red_mushroom");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:powered_rail"], "minecraft:powered_rail");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:prismarine");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:prismarine_bricks");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine_bricks_slab"], "minecraft:prismarine_bricks_slab");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine_bricks_stairs"], "minecraft:prismarine_bricks_stairs");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine_slab"], "minecraft:prismarine_slab");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine_stairs"], "minecraft:prismarine_stairs");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:pumpkin");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pumpkin_stem"], "minecraft:pumpkin_stem");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_banner"], "minecraft:purple_banner");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_bed"], "minecraft:purple_bed");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_carpet"], "minecraft:purple_carpet");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:purple_concrete");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:purple_concrete_powder");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:purple_coral");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_coral_fan"], "minecraft:purple_coral_fan");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_coral_plant"], "minecraft:purple_coral_plant");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:purple_dead_coral");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:purple_glazed_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:purple_shulker_box");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_stained_glass"], "minecraft:purple_stained_glass");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_stained_glass_pane"], "minecraft:purple_stained_glass_pane");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:purple_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:purple_wool");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:purpur_block");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:purpur_pillar");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purpur_slab"], "minecraft:purpur_slab");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purpur_stairs"], "minecraft:purpur_stairs");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:quartz_block");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:quartz_pillar");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:quartz_slab"], "minecraft:quartz_slab");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:quartz_stairs"], "minecraft:quartz_stairs");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:rail"], "minecraft:rail");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_banner"], "minecraft:red_banner");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_bed"], "minecraft:red_bed");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_carpet"], "minecraft:red_carpet");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_concrete");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_concrete_powder");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_coral");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_coral_fan"], "minecraft:red_coral_fan");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_coral_plant"], "minecraft:red_coral_plant");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_dead_coral");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_glazed_terracotta");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_mushroom"], "minecraft:red_mushroom");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_mushroom_block");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_nether_bricks");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_sand");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_sandstone");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_sandstone_slab"], "minecraft:red_sandstone_slab");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_sandstone_stairs"], "minecraft:red_sandstone_stairs");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_shulker_box");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_stained_glass"], "minecraft:red_stained_glass");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_stained_glass_pane"], "minecraft:red_stained_glass_pane");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_terracotta");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_tulip"], "minecraft:red_tulip");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_wool");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:redstone_block");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:redstone_lamp");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:redstone_ore");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:redstone_torch"], "minecraft:redstone_torch");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:redstone_wall_torch"], "minecraft:redstone_wall_torch");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:redstone_wire"], "minecraft:redstone_wire");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:repeater"], "minecraft:repeater");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:repeating_command_block");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:rose_bush"], "minecraft:rose_bush");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:sand");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:sandstone");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sandstone_slab"], "minecraft:sandstone_slab");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sandstone_stairs"], "minecraft:sandstone_stairs");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sea_grass"], "minecraft:sea_grass");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:sea_lantern");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:shulker_box");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sign"], "minecraft:sign");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:skeleton_skull"], "minecraft:skeleton_skull");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:skeleton_wall_skull"], "minecraft:skeleton_wall_skull");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:slime_block"], "minecraft:slime_block");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:smooth_quartz");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:smooth_red_sandstone");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:smooth_sandstone");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:smooth_stone");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:snow"], "minecraft:snow");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:snow_block");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:soul_sand"], "minecraft:soul_sand");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:sponge");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:spruce_bark");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_button"], "minecraft:spruce_button");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_door"], "minecraft:spruce_door");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_fence"], "minecraft:spruce_fence");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_fence_gate"], "minecraft:spruce_fence_gate");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_leaves"], "minecraft:spruce_leaves");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:spruce_log");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:spruce_planks");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_pressure_plate"], "minecraft:spruce_pressure_plate");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_sapling"], "minecraft:spruce_sapling");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_slab"], "minecraft:spruce_slab");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_stairs"], "minecraft:spruce_stairs");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_trapdoor"], "minecraft:spruce_trapdoor");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:sticky_piston");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:stone");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone_brick_slab"], "minecraft:stone_brick_slab");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone_brick_stairs"], "minecraft:stone_brick_stairs");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:stone_bricks");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone_button"], "minecraft:stone_button");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone_pressure_plate"], "minecraft:stone_pressure_plate");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone_slab"], "minecraft:stone_slab");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:stripped_acacia_log");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:stripped_birch_log");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:stripped_dark_oak_log");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:stripped_jungle_log");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:stripped_oak_log");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:stripped_spruce_log");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:structure_block"], "minecraft:structure_block");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:structure_void"], "minecraft:structure_void");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sugar_cane"], "minecraft:sugar_cane");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sunflower"], "minecraft:sunflower");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tall_grass"], "minecraft:tall_grass");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tall_sea_grass"], "minecraft:tall_sea_grass");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:terracotta");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:three_turtle_eggs"], "minecraft:three_turtle_eggs");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tnt"], "minecraft:tnt");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:torch"], "minecraft:torch");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:trapped_chest"], "minecraft:trapped_chest");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tripwire"], "minecraft:tripwire");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tripwire_hook"], "minecraft:tripwire_hook");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:turtle_egg"], "minecraft:turtle_egg");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:two_turtle_eggs"], "minecraft:two_turtle_eggs");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:vine"], "minecraft:vine");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:void_air"], "minecraft:void_air");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wall_banner"], "minecraft:wall_banner");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wall_sign"], "minecraft:wall_sign");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wall_torch"], "minecraft:wall_torch");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:water"], "minecraft:water");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:wet_sponge");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wheat"], "minecraft:wheat");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_banner"], "minecraft:white_banner");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_bed"], "minecraft:white_bed");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_carpet"], "minecraft:white_carpet");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:white_concrete");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:white_concrete_powder");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:white_glazed_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:white_shulker_box");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_stained_glass"], "minecraft:white_stained_glass");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_stained_glass_pane"], "minecraft:white_stained_glass_pane");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:white_terracotta");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_tulip"], "minecraft:white_tulip");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:white_wool");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wither_skeleton_skull"], "minecraft:wither_skeleton_skull");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wither_skeleton_wall_skull"], "minecraft:wither_skeleton_wall_skull");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_banner"], "minecraft:yellow_banner");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_bed"], "minecraft:yellow_bed");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_carpet"], "minecraft:yellow_carpet");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:yellow_concrete");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:yellow_concrete_powder");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:yellow_coral");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_coral_fan"], "minecraft:yellow_coral_fan");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_coral_plant"], "minecraft:yellow_coral_plant");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:yellow_dead_coral");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:yellow_glazed_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:yellow_shulker_box");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_stained_glass"], "minecraft:yellow_stained_glass");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_stained_glass_pane"], "minecraft:yellow_stained_glass_pane");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:yellow_terracotta");
            //Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:yellow_wool");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:zombie_head"], "minecraft:zombie_head");
            Diccionario_Bloques_Minecraft_1_13.Add(Diccionario_Bloques_Nombres_Índices["minecraft:zombie_wall_head"], "minecraft:zombie_wall_head");*/

            //string Texto = null;
            foreach (KeyValuePair<short, string> Entrada in Diccionario_Bloques_Índices_Nombres)
            {
                bool Existente_1_12 = false;
                foreach (KeyValuePair<short, short> Entrada_1_12 in Diccionario_Bloques_Índices_1_12_2_a_Índices_1_13)
                {
                    if (Entrada_1_12.Value == Entrada.Key)
                    {
                        Existente_1_12 = true;
                        break;
                    }
                }
                if (!Existente_1_12)
                {
                    Diccionario_Bloques_Minecraft_1_13.Add(Entrada.Key, Entrada.Value);
                    //Texto += Entrada.Value + "\r\n";
                }
            }
            //Clipboard.SetText(Texto);

            /*Diccionario_Bloques_Altura_Doble.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:acacia_bark");
            Diccionario_Bloques_Altura_Doble.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:acacia_door");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:banner");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:bed");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:birch_door");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:black_banner");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:black_bed");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:blue_banner");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:blue_bed");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:brown_banner");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:brown_bed");

            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:brown_carpet");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:brown_concrete");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:brown_concrete_powder");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:brown_glazed_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:brown_mushroom");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:brown_mushroom_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:brown_shulker_box");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:brown_stained_glass");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:brown_stained_glass_pane");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:brown_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:brown_wool");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:bubble_column");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cactus");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cake");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:carrots");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:carved_pumpkin");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cauldron");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cave_air");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:chain_command_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:chest");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:chipped_anvil");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:chiseled_quartz_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:chiseled_red_sandstone");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:chiseled_sandstone");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:chiseled_stone_bricks");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:chorus_flower");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:chorus_plant");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:clay");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:coal_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:coal_ore");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:coarse_dirt");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cobblestone");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cobblestone_slab");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cobblestone_stairs");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cobblestone_wall");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cobweb");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cocoa");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:command_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:comparator");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cracked_stone_bricks");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:crafting_table");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:creeper_head");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:creeper_wall_head");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cut_red_sandstone");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cut_sandstone");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cyan_banner");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cyan_bed");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cyan_carpet");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cyan_concrete");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cyan_concrete_powder");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cyan_glazed_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cyan_shulker_box");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cyan_stained_glass");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cyan_stained_glass_pane");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cyan_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:cyan_wool");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:damaged_anvil");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dandelion");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dark_oak_bark");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dark_oak_button");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dark_oak_door");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dark_oak_fence");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dark_oak_fence_gate");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dark_oak_leaves");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dark_oak_log");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dark_oak_planks");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dark_oak_pressure_plate");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dark_oak_sapling");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dark_oak_slab");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dark_oak_stairs");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dark_oak_trapdoor");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dark_prismarine");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dark_prismarine_slab");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dark_prismarine_stairs");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:daylight_detector");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dead_bush");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:detector_rail");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:diamond_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:diamond_ore");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:diorite");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dirt");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dispenser");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dragon_egg");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dragon_head");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dragon_wall_head");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dried_kelp_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:dropper");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:emerald_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:emerald_ore");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:enchanting_table");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:end_gateway");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:end_portal");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:end_portal_frame");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:end_rod");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:end_stone");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:end_stone_bricks");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:ender_chest");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:farmland");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:fern");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:fire");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:flower_pot");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:flowing_lava");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:flowing_water");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:four_turtle_eggs");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:frosted_ice");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:furnace");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:glass");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:glass_pane");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:glowstone");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:gold_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:gold_ore");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:granite");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:grass");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:grass_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:grass_path");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:gravel");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:gray_banner");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:gray_bed");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:gray_carpet");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:gray_concrete");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:gray_concrete_powder");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:gray_glazed_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:gray_shulker_box");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:gray_stained_glass");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:gray_stained_glass_pane");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:gray_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:gray_wool");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:green_banner");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:green_bed");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:green_carpet");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:green_concrete");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:green_concrete_powder");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:green_glazed_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:green_shulker_box");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:green_stained_glass");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:green_stained_glass_pane");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:green_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:green_wool");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:hay_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:heavy_weighted_pressure_plate");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:hopper");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:ice");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:infested_chiseled_stone_bricks");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:infested_cobblestone");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:infested_cracked_stone_bricks");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:infested_mossy_stone_bricks");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:infested_stone");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:infested_stone_bricks");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:iron_bars");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:iron_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:iron_door");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:iron_ore");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:iron_trapdoor");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:jack_o_lantern");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:jukebox");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:jungle_bark");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:jungle_button");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:jungle_door");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:jungle_fence");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:jungle_fence_gate");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:jungle_leaves");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:jungle_log");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:jungle_planks");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:jungle_pressure_plate");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:jungle_sapling");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:jungle_slab");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:jungle_stairs");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:jungle_trapdoor");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:kelp");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:kelp_top");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:ladder");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:lapis_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:lapis_ore");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:large_fern");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:lava");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:lever");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:light_blue_banner");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:light_blue_bed");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:light_blue_carpet");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:light_blue_concrete");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:light_blue_concrete_powder");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:light_blue_glazed_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:light_blue_shulker_box");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:light_blue_stained_glass");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:light_blue_stained_glass_pane");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:light_blue_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:light_blue_wool");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:light_gray_banner");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:light_gray_bed");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:light_gray_carpet");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:light_gray_concrete");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:light_gray_concrete_powder");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:light_gray_glazed_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:light_gray_shulker_box");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:light_gray_stained_glass");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:light_gray_stained_glass_pane");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:light_gray_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:light_gray_wool");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:light_weighted_pressure_plate");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:lilac");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:lily_pad");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:lime_banner");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:lime_bed");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:lime_carpet");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:lime_concrete");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:lime_concrete_powder");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:lime_glazed_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:lime_shulker_box");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:lime_stained_glass");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:lime_stained_glass_pane");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:lime_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:lime_wool");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:magenta_banner");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:magenta_bed");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:magenta_carpet");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:magenta_concrete");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:magenta_concrete_powder");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:magenta_glazed_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:magenta_shulker_box");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:magenta_stained_glass");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:magenta_stained_glass_pane");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:magenta_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:magenta_wool");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:magma_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:melon_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:melon_stem");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:mob_spawner");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:mossy_cobblestone");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:mossy_cobblestone_wall");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:mossy_stone_bricks");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:moving_piston");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:mushroom_stem");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:mycelium");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:nether_brick_fence");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:nether_brick_slab");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:nether_brick_stairs");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:nether_bricks");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:nether_quartz_ore");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:nether_wart");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:nether_wart_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:netherrack");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:note_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:oak_bark");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:oak_button");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:oak_door");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:oak_fence");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:oak_fence_gate");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:oak_leaves");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:oak_log");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:oak_planks");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:oak_pressure_plate");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:oak_sapling");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:oak_slab");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:oak_stairs");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:oak_trapdoor");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:observer");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:obsidian");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:orange_banner");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:orange_bed");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:orange_carpet");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:orange_concrete");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:orange_concrete_powder");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:orange_glazed_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:orange_shulker_box");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:orange_stained_glass");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:orange_stained_glass_pane");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:orange_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:orange_tulip");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:orange_wool");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:oxeye_daisy");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:packed_ice");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:peony");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:petrified_oak_slab");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:pink_banner");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:pink_bed");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:pink_carpet");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:pink_concrete");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:pink_concrete_powder");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:pink_coral");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:pink_coral_fan");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:pink_coral_plant");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:pink_dead_coral");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:pink_glazed_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:pink_shulker_box");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:pink_stained_glass");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:pink_stained_glass_pane");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:pink_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:pink_tulip");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:pink_wool");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:piston");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:piston_head");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:player_head");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:player_wall_head");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:podzol");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:polished_andesite");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:polished_diorite");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:polished_granite");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:poppy");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:portal");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:potatoes");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:potted_red_mushroom");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:powered_rail");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:prismarine");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:prismarine_bricks");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:prismarine_bricks_slab");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:prismarine_bricks_stairs");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:prismarine_slab");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:prismarine_stairs");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:pumpkin");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:pumpkin_stem");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:purple_banner");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:purple_bed");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:purple_carpet");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:purple_concrete");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:purple_concrete_powder");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:purple_coral");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:purple_coral_fan");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:purple_coral_plant");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:purple_dead_coral");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:purple_glazed_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:purple_shulker_box");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:purple_stained_glass");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:purple_stained_glass_pane");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:purple_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:purple_wool");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:purpur_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:purpur_pillar");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:purpur_slab");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:purpur_stairs");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:quartz_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:quartz_pillar");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:quartz_slab");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:quartz_stairs");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:rail");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:red_banner");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:red_bed");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:red_carpet");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:red_concrete");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:red_concrete_powder");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:red_coral");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:red_coral_fan");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:red_coral_plant");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:red_dead_coral");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:red_glazed_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:red_mushroom");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:red_mushroom_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:red_nether_bricks");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:red_sand");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:red_sandstone");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:red_sandstone_slab");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:red_sandstone_stairs");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:red_shulker_box");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:red_stained_glass");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:red_stained_glass_pane");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:red_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:red_tulip");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:red_wool");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:redstone_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:redstone_lamp");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:redstone_ore");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:redstone_torch");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:redstone_wall_torch");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:redstone_wire");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:repeater");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:repeating_command_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:rose_bush");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:sand");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:sandstone");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:sandstone_slab");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:sandstone_stairs");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:sea_grass");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:sea_lantern");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:shulker_box");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:sign");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:skeleton_skull");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:skeleton_wall_skull");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:slime_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:smooth_quartz");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:smooth_red_sandstone");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:smooth_sandstone");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:smooth_stone");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:snow");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:snow_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:soul_sand");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:sponge");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:spruce_bark");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:spruce_button");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:spruce_door");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:spruce_fence");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:spruce_fence_gate");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:spruce_leaves");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:spruce_log");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:spruce_planks");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:spruce_pressure_plate");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:spruce_sapling");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:spruce_slab");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:spruce_stairs");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:spruce_trapdoor");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:sticky_piston");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:stone");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:stone_brick_slab");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:stone_brick_stairs");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:stone_bricks");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:stone_button");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:stone_pressure_plate");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:stone_slab");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:stripped_acacia_log");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:stripped_birch_log");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:stripped_dark_oak_log");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:stripped_jungle_log");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:stripped_oak_log");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:stripped_spruce_log");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:structure_block");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:structure_void");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:sugar_cane");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:sunflower");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:tall_grass");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:tall_sea_grass");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:three_turtle_eggs");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:tnt");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:torch");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:trapped_chest");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:tripwire");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:tripwire_hook");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:turtle_egg");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:two_turtle_eggs");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:vine");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:void_air");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:wall_banner");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:wall_sign");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:wall_torch");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:water");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:wet_sponge");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:wheat");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:white_banner");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:white_bed");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:white_carpet");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:white_concrete");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:white_concrete_powder");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:white_glazed_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:white_shulker_box");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:white_stained_glass");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:white_stained_glass_pane");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:white_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:white_tulip");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:white_wool");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:wither_skeleton_skull");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:wither_skeleton_wall_skull");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:yellow_banner");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:yellow_bed");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:yellow_carpet");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:yellow_concrete");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:yellow_concrete_powder");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:yellow_coral");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:yellow_coral_fan");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:yellow_coral_plant");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:yellow_dead_coral");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:yellow_glazed_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:yellow_shulker_box");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:yellow_stained_glass");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:yellow_stained_glass_pane");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:yellow_terracotta");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:yellow_wool");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:zombie_head");
            Diccionario_Bloques_Altura_Doble.Add(Índice_Nombre, "minecraft:zombie_wall_head");*/

            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:acacia_bark");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_button"], "minecraft:acacia_button");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_door"], "minecraft:acacia_door");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_fence"], "minecraft:acacia_fence");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_fence_gate"], "minecraft:acacia_fence_gate");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_leaves"], "minecraft:acacia_leaves");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:acacia_log");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:acacia_planks");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_pressure_plate"], "minecraft:acacia_pressure_plate");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_sapling"], "minecraft:acacia_sapling");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_slab"], "minecraft:acacia_slab");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_stairs"], "minecraft:acacia_stairs");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:acacia_trapdoor"], "minecraft:acacia_trapdoor");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:activator_rail"], "minecraft:activator_rail");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:air"], "minecraft:air");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:allium"], "minecraft:allium");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:andesite");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:anvil"], "minecraft:anvil");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:attached_melon_stem"], "minecraft:attached_melon_stem");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:attached_pumpkin_stem"], "minecraft:attached_pumpkin_stem");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:azure_bluet"], "minecraft:azure_bluet");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:banner"], "minecraft:banner");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:barrier"], "minecraft:barrier");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:beacon"], "minecraft:beacon");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:bed"], "minecraft:bed");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:bedrock");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:beetroots"], "minecraft:beetroots");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:birch_bark");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_button"], "minecraft:birch_button");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_door"], "minecraft:birch_door");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_fence"], "minecraft:birch_fence");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_fence_gate"], "minecraft:birch_fence_gate");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_leaves"], "minecraft:birch_leaves");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:birch_log");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:birch_planks");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_pressure_plate"], "minecraft:birch_pressure_plate");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_sapling"], "minecraft:birch_sapling");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_slab"], "minecraft:birch_slab");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_stairs"], "minecraft:birch_stairs");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:birch_trapdoor"], "minecraft:birch_trapdoor");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_banner"], "minecraft:black_banner");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_bed"], "minecraft:black_bed");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_carpet"], "minecraft:black_carpet");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:black_concrete");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:black_concrete_powder");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:black_glazed_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:black_shulker_box");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_stained_glass"], "minecraft:black_stained_glass");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:black_stained_glass_pane"], "minecraft:black_stained_glass_pane");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:black_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:black_wool");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_banner"], "minecraft:blue_banner");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_bed"], "minecraft:blue_bed");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_carpet"], "minecraft:blue_carpet");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:blue_concrete");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:blue_concrete_powder");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_coral"], "minecraft:blue_coral");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_coral_fan"], "minecraft:blue_coral_fan");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_coral_plant"], "minecraft:blue_coral_plant");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:blue_dead_coral");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:blue_glazed_terracotta");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_orchid"], "minecraft:blue_orchid");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:blue_shulker_box");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_stained_glass"], "minecraft:blue_stained_glass");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:blue_stained_glass_pane"], "minecraft:blue_stained_glass_pane");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:blue_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:blue_wool");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:bone_block");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:bookshelf");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brewing_stand"], "minecraft:brewing_stand");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brick_slab"], "minecraft:brick_slab");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brick_stairs"], "minecraft:brick_stairs");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:bricks");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_banner"], "minecraft:brown_banner");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_bed"], "minecraft:brown_bed");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_carpet"], "minecraft:brown_carpet");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:brown_concrete");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:brown_concrete_powder");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:brown_glazed_terracotta");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_mushroom"], "minecraft:brown_mushroom");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:brown_mushroom_block");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:brown_shulker_box");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_stained_glass"], "minecraft:brown_stained_glass");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:brown_stained_glass_pane"], "minecraft:brown_stained_glass_pane");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:brown_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:brown_wool");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:bubble_column"], "minecraft:bubble_column");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cactus"], "minecraft:cactus");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cake"], "minecraft:cake");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:carrots"], "minecraft:carrots");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:carved_pumpkin");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cauldron"], "minecraft:cauldron");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cave_air"], "minecraft:cave_air");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:chain_command_block");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chest"], "minecraft:chest");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chipped_anvil"], "minecraft:chipped_anvil");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:chiseled_quartz_block");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:chiseled_red_sandstone");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:chiseled_sandstone");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:chiseled_stone_bricks");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chorus_flower"], "minecraft:chorus_flower");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:chorus_plant"], "minecraft:chorus_plant");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:clay");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:coal_block");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:coal_ore");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:coarse_dirt");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:cobblestone");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cobblestone_slab"], "minecraft:cobblestone_slab");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cobblestone_stairs"], "minecraft:cobblestone_stairs");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cobblestone_wall"], "minecraft:cobblestone_wall");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cobweb"], "minecraft:cobweb");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cocoa"], "minecraft:cocoa");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:command_block");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:comparator"], "minecraft:comparator");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:cracked_stone_bricks");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:crafting_table");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:creeper_head"], "minecraft:creeper_head");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:creeper_wall_head"], "minecraft:creeper_wall_head");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:cut_red_sandstone");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:cut_sandstone");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_banner"], "minecraft:cyan_banner");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_bed"], "minecraft:cyan_bed");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_carpet"], "minecraft:cyan_carpet");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:cyan_concrete");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:cyan_concrete_powder");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:cyan_glazed_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:cyan_shulker_box");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_stained_glass"], "minecraft:cyan_stained_glass");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:cyan_stained_glass_pane"], "minecraft:cyan_stained_glass_pane");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:cyan_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:cyan_wool");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:damaged_anvil"], "minecraft:damaged_anvil");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dandelion"], "minecraft:dandelion");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:dark_oak_bark");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_button"], "minecraft:dark_oak_button");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_door"], "minecraft:dark_oak_door");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_fence"], "minecraft:dark_oak_fence");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_fence_gate"], "minecraft:dark_oak_fence_gate");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_leaves"], "minecraft:dark_oak_leaves");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:dark_oak_log");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:dark_oak_planks");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_pressure_plate"], "minecraft:dark_oak_pressure_plate");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_sapling"], "minecraft:dark_oak_sapling");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_slab"], "minecraft:dark_oak_slab");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_stairs"], "minecraft:dark_oak_stairs");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_trapdoor"], "minecraft:dark_oak_trapdoor");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:dark_prismarine");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_prismarine_slab"], "minecraft:dark_prismarine_slab");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dark_prismarine_stairs"], "minecraft:dark_prismarine_stairs");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:daylight_detector"], "minecraft:daylight_detector");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dead_bush"], "minecraft:dead_bush");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:detector_rail"], "minecraft:detector_rail");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:diamond_block");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:diamond_ore");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:diorite");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:dirt");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:dispenser");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dragon_egg"], "minecraft:dragon_egg");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dragon_head"], "minecraft:dragon_head");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:dragon_wall_head"], "minecraft:dragon_wall_head");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:dried_kelp_block");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:dropper");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:emerald_block");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:emerald_ore");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:enchanting_table"], "minecraft:enchanting_table");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:end_gateway"], "minecraft:end_gateway");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:end_portal"], "minecraft:end_portal");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:end_portal_frame"], "minecraft:end_portal_frame");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:end_rod"], "minecraft:end_rod");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:end_stone");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:end_stone_bricks");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:ender_chest"], "minecraft:ender_chest");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:farmland"], "minecraft:farmland");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:fern"], "minecraft:fern");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:fire"], "minecraft:fire");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:flower_pot"], "minecraft:flower_pot");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:flowing_lava"], "minecraft:flowing_lava");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:flowing_water"], "minecraft:flowing_water");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:four_turtle_eggs"], "minecraft:four_turtle_eggs");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:frosted_ice"], "minecraft:frosted_ice");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:furnace");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:glass"], "minecraft:glass");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:glass_pane"], "minecraft:glass_pane");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:glowstone");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:gold_block");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:gold_ore");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:granite");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:grass"], "minecraft:grass");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:grass_block");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:grass_path"], "minecraft:grass_path");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:gravel");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_banner"], "minecraft:gray_banner");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_bed"], "minecraft:gray_bed");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_carpet"], "minecraft:gray_carpet");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:gray_concrete");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:gray_concrete_powder");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:gray_glazed_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:gray_shulker_box");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_stained_glass"], "minecraft:gray_stained_glass");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:gray_stained_glass_pane"], "minecraft:gray_stained_glass_pane");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:gray_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:gray_wool");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_banner"], "minecraft:green_banner");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_bed"], "minecraft:green_bed");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_carpet"], "minecraft:green_carpet");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:green_concrete");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:green_concrete_powder");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:green_glazed_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:green_shulker_box");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_stained_glass"], "minecraft:green_stained_glass");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:green_stained_glass_pane"], "minecraft:green_stained_glass_pane");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:green_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:green_wool");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:hay_block");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:heavy_weighted_pressure_plate"], "minecraft:heavy_weighted_pressure_plate");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:hopper"], "minecraft:hopper");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:ice"], "minecraft:ice");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_chiseled_stone_bricks"], "minecraft:infested_chiseled_stone_bricks");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_cobblestone"], "minecraft:infested_cobblestone");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_cracked_stone_bricks"], "minecraft:infested_cracked_stone_bricks");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_mossy_stone_bricks"], "minecraft:infested_mossy_stone_bricks");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_stone"], "minecraft:infested_stone");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:infested_stone_bricks"], "minecraft:infested_stone_bricks");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:iron_bars"], "minecraft:iron_bars");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:iron_block");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:iron_door"], "minecraft:iron_door");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:iron_ore");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:iron_trapdoor"], "minecraft:iron_trapdoor");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:jack_o_lantern");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:jukebox");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:jungle_bark");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_button"], "minecraft:jungle_button");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_door"], "minecraft:jungle_door");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_fence"], "minecraft:jungle_fence");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_fence_gate"], "minecraft:jungle_fence_gate");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_leaves"], "minecraft:jungle_leaves");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:jungle_log");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:jungle_planks");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_pressure_plate"], "minecraft:jungle_pressure_plate");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_sapling"], "minecraft:jungle_sapling");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_slab"], "minecraft:jungle_slab");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_stairs"], "minecraft:jungle_stairs");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:jungle_trapdoor"], "minecraft:jungle_trapdoor");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:kelp"], "minecraft:kelp");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:kelp_top"], "minecraft:kelp_top");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:ladder"], "minecraft:ladder");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:lapis_block");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:lapis_ore");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:large_fern"], "minecraft:large_fern");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lava"], "minecraft:lava");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lever"], "minecraft:lever");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_banner"], "minecraft:light_blue_banner");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_bed"], "minecraft:light_blue_bed");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_carpet"], "minecraft:light_blue_carpet");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_blue_concrete");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_blue_concrete_powder");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_blue_glazed_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_blue_shulker_box");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_stained_glass"], "minecraft:light_blue_stained_glass");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_blue_stained_glass_pane"], "minecraft:light_blue_stained_glass_pane");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_blue_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_blue_wool");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_banner"], "minecraft:light_gray_banner");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_bed"], "minecraft:light_gray_bed");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_carpet"], "minecraft:light_gray_carpet");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_gray_concrete");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_gray_concrete_powder");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_gray_glazed_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_gray_shulker_box");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_stained_glass"], "minecraft:light_gray_stained_glass");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_gray_stained_glass_pane"], "minecraft:light_gray_stained_glass_pane");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_gray_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:light_gray_wool");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:light_weighted_pressure_plate"], "minecraft:light_weighted_pressure_plate");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lilac"], "minecraft:lilac");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lily_pad"], "minecraft:lily_pad");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_banner"], "minecraft:lime_banner");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_bed"], "minecraft:lime_bed");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_carpet"], "minecraft:lime_carpet");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:lime_concrete");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:lime_concrete_powder");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:lime_glazed_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:lime_shulker_box");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_stained_glass"], "minecraft:lime_stained_glass");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:lime_stained_glass_pane"], "minecraft:lime_stained_glass_pane");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:lime_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:lime_wool");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_banner"], "minecraft:magenta_banner");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_bed"], "minecraft:magenta_bed");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_carpet"], "minecraft:magenta_carpet");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:magenta_concrete");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:magenta_concrete_powder");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:magenta_glazed_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:magenta_shulker_box");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_stained_glass"], "minecraft:magenta_stained_glass");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:magenta_stained_glass_pane"], "minecraft:magenta_stained_glass_pane");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:magenta_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:magenta_wool");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:magma_block");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:melon_block");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:melon_stem"], "minecraft:melon_stem");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:mob_spawner"], "minecraft:mob_spawner");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:mossy_cobblestone");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:mossy_cobblestone_wall"], "minecraft:mossy_cobblestone_wall");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:mossy_stone_bricks");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:moving_piston"], "minecraft:moving_piston");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:mushroom_stem");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:mycelium");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_brick_fence"], "minecraft:nether_brick_fence");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_brick_slab"], "minecraft:nether_brick_slab");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_brick_stairs"], "minecraft:nether_brick_stairs");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:nether_bricks");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_quartz_ore"], "minecraft:nether_quartz_ore");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:nether_wart"], "minecraft:nether_wart");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:nether_wart_block");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:netherrack");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:note_block");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:oak_bark");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_button"], "minecraft:oak_button");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_door"], "minecraft:oak_door");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_fence"], "minecraft:oak_fence");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_fence_gate"], "minecraft:oak_fence_gate");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_leaves"], "minecraft:oak_leaves");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:oak_log");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:oak_planks");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_pressure_plate"], "minecraft:oak_pressure_plate");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_sapling"], "minecraft:oak_sapling");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_slab"], "minecraft:oak_slab");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_stairs"], "minecraft:oak_stairs");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oak_trapdoor"], "minecraft:oak_trapdoor");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:observer");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:obsidian");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_banner"], "minecraft:orange_banner");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_bed"], "minecraft:orange_bed");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_carpet"], "minecraft:orange_carpet");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:orange_concrete");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:orange_concrete_powder");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:orange_glazed_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:orange_shulker_box");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_stained_glass"], "minecraft:orange_stained_glass");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_stained_glass_pane"], "minecraft:orange_stained_glass_pane");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:orange_terracotta");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:orange_tulip"], "minecraft:orange_tulip");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:orange_wool");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:oxeye_daisy"], "minecraft:oxeye_daisy");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:packed_ice");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:peony"], "minecraft:peony");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:petrified_oak_slab"], "minecraft:petrified_oak_slab");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_banner"], "minecraft:pink_banner");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_bed"], "minecraft:pink_bed");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_carpet"], "minecraft:pink_carpet");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:pink_concrete");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:pink_concrete_powder");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:pink_coral");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_coral_fan"], "minecraft:pink_coral_fan");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_coral_plant"], "minecraft:pink_coral_plant");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:pink_dead_coral");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:pink_glazed_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:pink_shulker_box");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_stained_glass"], "minecraft:pink_stained_glass");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_stained_glass_pane"], "minecraft:pink_stained_glass_pane");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:pink_terracotta");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pink_tulip"], "minecraft:pink_tulip");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:pink_wool");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:piston");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:piston_head"], "minecraft:piston_head");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:player_head"], "minecraft:player_head");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:player_wall_head"], "minecraft:player_wall_head");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:podzol");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:polished_andesite");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:polished_diorite");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:polished_granite");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:poppy"], "minecraft:poppy");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:portal"], "minecraft:portal");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:potatoes"], "minecraft:potatoes");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:potted_red_mushroom"], "minecraft:potted_red_mushroom");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:powered_rail"], "minecraft:powered_rail");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:prismarine");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:prismarine_bricks");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine_bricks_slab"], "minecraft:prismarine_bricks_slab");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine_bricks_stairs"], "minecraft:prismarine_bricks_stairs");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine_slab"], "minecraft:prismarine_slab");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:prismarine_stairs"], "minecraft:prismarine_stairs");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:pumpkin");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:pumpkin_stem"], "minecraft:pumpkin_stem");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_banner"], "minecraft:purple_banner");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_bed"], "minecraft:purple_bed");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_carpet"], "minecraft:purple_carpet");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:purple_concrete");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:purple_concrete_powder");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:purple_coral");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_coral_fan"], "minecraft:purple_coral_fan");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_coral_plant"], "minecraft:purple_coral_plant");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:purple_dead_coral");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:purple_glazed_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:purple_shulker_box");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_stained_glass"], "minecraft:purple_stained_glass");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purple_stained_glass_pane"], "minecraft:purple_stained_glass_pane");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:purple_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:purple_wool");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:purpur_block");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:purpur_pillar");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purpur_slab"], "minecraft:purpur_slab");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:purpur_stairs"], "minecraft:purpur_stairs");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:quartz_block");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:quartz_pillar");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:quartz_slab"], "minecraft:quartz_slab");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:quartz_stairs"], "minecraft:quartz_stairs");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:rail"], "minecraft:rail");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_banner"], "minecraft:red_banner");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_bed"], "minecraft:red_bed");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_carpet"], "minecraft:red_carpet");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_concrete");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_concrete_powder");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_coral");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_coral_fan"], "minecraft:red_coral_fan");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_coral_plant"], "minecraft:red_coral_plant");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_dead_coral");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_glazed_terracotta");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_mushroom"], "minecraft:red_mushroom");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_mushroom_block");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_nether_bricks");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_sand");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_sandstone");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_sandstone_slab"], "minecraft:red_sandstone_slab");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_sandstone_stairs"], "minecraft:red_sandstone_stairs");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_shulker_box");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_stained_glass"], "minecraft:red_stained_glass");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_stained_glass_pane"], "minecraft:red_stained_glass_pane");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_terracotta");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:red_tulip"], "minecraft:red_tulip");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:red_wool");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:redstone_block");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:redstone_lamp");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:redstone_ore");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:redstone_torch"], "minecraft:redstone_torch");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:redstone_wall_torch"], "minecraft:redstone_wall_torch");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:redstone_wire"], "minecraft:redstone_wire");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:repeater"], "minecraft:repeater");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:repeating_command_block");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:rose_bush"], "minecraft:rose_bush");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:sand");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:sandstone");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sandstone_slab"], "minecraft:sandstone_slab");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sandstone_stairs"], "minecraft:sandstone_stairs");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sea_grass"], "minecraft:sea_grass");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:sea_lantern");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sea_pickle"], "minecraft:sea_pickle");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:shulker_box");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sign"], "minecraft:sign");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:skeleton_skull"], "minecraft:skeleton_skull");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:skeleton_wall_skull"], "minecraft:skeleton_wall_skull");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:slime_block"], "minecraft:slime_block");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:smooth_quartz");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:smooth_red_sandstone");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:smooth_sandstone");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:smooth_stone");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:snow"], "minecraft:snow");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:snow_block");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:soul_sand"], "minecraft:soul_sand");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:sponge");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:spruce_bark");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_button"], "minecraft:spruce_button");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_door"], "minecraft:spruce_door");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_fence"], "minecraft:spruce_fence");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_fence_gate"], "minecraft:spruce_fence_gate");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_leaves"], "minecraft:spruce_leaves");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:spruce_log");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:spruce_planks");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_pressure_plate"], "minecraft:spruce_pressure_plate");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_sapling"], "minecraft:spruce_sapling");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_slab"], "minecraft:spruce_slab");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_stairs"], "minecraft:spruce_stairs");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:spruce_trapdoor"], "minecraft:spruce_trapdoor");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:sticky_piston");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:stone");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone_brick_slab"], "minecraft:stone_brick_slab");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone_brick_stairs"], "minecraft:stone_brick_stairs");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:stone_bricks");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone_button"], "minecraft:stone_button");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone_pressure_plate"], "minecraft:stone_pressure_plate");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:stone_slab"], "minecraft:stone_slab");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:stripped_acacia_log");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:stripped_birch_log");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:stripped_dark_oak_log");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:stripped_jungle_log");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:stripped_oak_log");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:stripped_spruce_log");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:structure_block"], "minecraft:structure_block");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:structure_void"], "minecraft:structure_void");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sugar_cane"], "minecraft:sugar_cane");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:sunflower"], "minecraft:sunflower");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tall_grass"], "minecraft:tall_grass");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tall_sea_grass"], "minecraft:tall_sea_grass");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:terracotta");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:three_turtle_eggs"], "minecraft:three_turtle_eggs");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tnt"], "minecraft:tnt");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:torch"], "minecraft:torch");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:trapped_chest"], "minecraft:trapped_chest");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tripwire"], "minecraft:tripwire");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:tripwire_hook"], "minecraft:tripwire_hook");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:turtle_egg"], "minecraft:turtle_egg");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:two_turtle_eggs"], "minecraft:two_turtle_eggs");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:vine"], "minecraft:vine");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:void_air"], "minecraft:void_air");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wall_banner"], "minecraft:wall_banner");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wall_sign"], "minecraft:wall_sign");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wall_torch"], "minecraft:wall_torch");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:water"], "minecraft:water");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:wet_sponge");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wheat"], "minecraft:wheat");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_banner"], "minecraft:white_banner");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_bed"], "minecraft:white_bed");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_carpet"], "minecraft:white_carpet");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:white_concrete");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:white_concrete_powder");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:white_glazed_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:white_shulker_box");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_stained_glass"], "minecraft:white_stained_glass");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_stained_glass_pane"], "minecraft:white_stained_glass_pane");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:white_terracotta");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:white_tulip"], "minecraft:white_tulip");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:white_wool");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wither_skeleton_skull"], "minecraft:wither_skeleton_skull");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:wither_skeleton_wall_skull"], "minecraft:wither_skeleton_wall_skull");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_banner"], "minecraft:yellow_banner");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_bed"], "minecraft:yellow_bed");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_carpet"], "minecraft:yellow_carpet");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:yellow_concrete");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:yellow_concrete_powder");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:yellow_coral");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_coral_fan"], "minecraft:yellow_coral_fan");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_coral_plant"], "minecraft:yellow_coral_plant");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:yellow_dead_coral");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:yellow_glazed_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:yellow_shulker_box");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_stained_glass"], "minecraft:yellow_stained_glass");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:yellow_stained_glass_pane"], "minecraft:yellow_stained_glass_pane");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:yellow_terracotta");
            //Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:"], "minecraft:yellow_wool");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:zombie_head"], "minecraft:zombie_head");
            Diccionario_Bloques_Altura_Diferente.Add(Diccionario_Bloques_Nombres_Índices["minecraft:zombie_wall_head"], "minecraft:zombie_wall_head");

            Dictionary<string, Color> Diccionario_Recolorear = new Dictionary<string, Color>();
            Diccionario_Recolorear.Add("minecraft:acacia_leaves", Diccionario_Bloques_Índices_Colores[Diccionario_Bloques_Nombres_Índices["minecraft:acacia_leaves"]]);
            Diccionario_Recolorear.Add("minecraft:attached_melon_stem", Diccionario_Bloques_Índices_Colores[Diccionario_Bloques_Nombres_Índices["minecraft:attached_melon_stem"]]);
            Diccionario_Recolorear.Add("minecraft:attached_pumpkin_stem", Diccionario_Bloques_Índices_Colores[Diccionario_Bloques_Nombres_Índices["minecraft:attached_pumpkin_stem"]]);
            Diccionario_Recolorear.Add("minecraft:birch_leaves", Diccionario_Bloques_Índices_Colores[Diccionario_Bloques_Nombres_Índices["minecraft:birch_leaves"]]);
            Diccionario_Recolorear.Add("minecraft:dark_oak_leaves", Diccionario_Bloques_Índices_Colores[Diccionario_Bloques_Nombres_Índices["minecraft:dark_oak_leaves"]]);
            Diccionario_Recolorear.Add("minecraft:fern", Diccionario_Bloques_Índices_Colores[Diccionario_Bloques_Nombres_Índices["minecraft:fern"]]);
            Diccionario_Recolorear.Add("minecraft:grass", Diccionario_Bloques_Índices_Colores[Diccionario_Bloques_Nombres_Índices["minecraft:grass"]]);
            Diccionario_Recolorear.Add("minecraft:grass_block", Diccionario_Bloques_Índices_Colores[Diccionario_Bloques_Nombres_Índices["minecraft:grass_block"]]);
            Diccionario_Recolorear.Add("minecraft:jungle_leaves", Diccionario_Bloques_Índices_Colores[Diccionario_Bloques_Nombres_Índices["minecraft:jungle_leaves"]]);
            Diccionario_Recolorear.Add("minecraft:large_fern", Diccionario_Bloques_Índices_Colores[Diccionario_Bloques_Nombres_Índices["minecraft:large_fern"]]);
            Diccionario_Recolorear.Add("minecraft:lily_pad", Diccionario_Bloques_Índices_Colores[Diccionario_Bloques_Nombres_Índices["minecraft:lily_pad"]]);
            Diccionario_Recolorear.Add("minecraft:oak_leaves", Diccionario_Bloques_Índices_Colores[Diccionario_Bloques_Nombres_Índices["minecraft:oak_leaves"]]);
            Diccionario_Recolorear.Add("minecraft:pumpkin_stem", Diccionario_Bloques_Índices_Colores[Diccionario_Bloques_Nombres_Índices["minecraft:pumpkin_stem"]]);
            //Diccionario_Recolorear.Add("minecraft:minecraft_redstone_wire", Diccionario_Bloques_Índices_Colores[Diccionario_Bloques_Nombres_Índices["minecraft:minecraft_redstone_wire"]]);
            Diccionario_Recolorear.Add("minecraft:spruce_leaves", Diccionario_Bloques_Índices_Colores[Diccionario_Bloques_Nombres_Índices["minecraft:spruce_leaves"]]);
            Diccionario_Recolorear.Add("minecraft:tall_grass", Diccionario_Bloques_Índices_Colores[Diccionario_Bloques_Nombres_Índices["minecraft:tall_grass"]]);
            Diccionario_Recolorear.Add("minecraft:vine", Diccionario_Bloques_Índices_Colores[Diccionario_Bloques_Nombres_Índices["minecraft:vine"]]);

            foreach (KeyValuePair<short, string> Entrada in Diccionario_Bloques_Índices_Nombres)
            {
                Bitmap Imagen = Program.Obtener_Imagen_Recursos(Entrada.Value);
                Diccionario_Texturas.Add(Entrada.Key, Imagen);
                if (Imagen != null)
                {
                    bool Píxeles_Parcialmente_Transparentes = false;
                    bool Píxeles_Completamente_Transparentes = false;
                    BitmapData Bitmap_Data = (Imagen).LockBits(new Rectangle(0, 0, 16, 16), ImageLockMode.ReadWrite, PixelFormat.Format32bppArgb);
                    byte[] Matriz_Bytes = new byte[Math.Abs(Bitmap_Data.Stride) * 16];
                    Marshal.Copy(Bitmap_Data.Scan0, Matriz_Bytes, 0, Matriz_Bytes.Length);
                    byte Rojo, Verde, Azul;
                    double Matiz_Original, Saturación_Original, Luminosidad_Original;
                    double Matiz, Saturación, Luminosidad;
                    for (int Y = 0, Índice = 0; Y < 16; Y++)
                    {
                        for (int X = 0; X < 16; X++, Índice += 4)
                        {
                            if (Matriz_Bytes[Índice + 3] <= 0) Píxeles_Completamente_Transparentes = true;
                            else if (Matriz_Bytes[Índice + 3] < 255) Píxeles_Parcialmente_Transparentes = true;
                            else // Recolor the grass, leaves, etc
                            {
                                if (Diccionario_Recolorear.ContainsKey(Diccionario_Bloques_Índices_Nombres[Entrada.Key])) // This texture should be recolored
                                {
                                    if (Matriz_Bytes[Índice] == Matriz_Bytes[Índice + 2] && Matriz_Bytes[Índice] == Matriz_Bytes[Índice + 1]) // This pixel is gray, recolor it
                                    {
                                        Color Color_ARGB = Diccionario_Recolorear[Diccionario_Bloques_Índices_Nombres[Entrada.Key]];
                                        Program.HSL.From_RGB(Color_ARGB.R, Color_ARGB.G, Color_ARGB.B, out Matiz, out Saturación, out Luminosidad);
                                        Program.HSL.From_RGB(Matriz_Bytes[Índice + 2], Matriz_Bytes[Índice + 1], Matriz_Bytes[Índice], out Matiz_Original, out Saturación_Original, out Luminosidad_Original);
                                        Program.HSL.To_RGB(Matiz, Saturación, (Luminosidad + Luminosidad_Original) / 2, out Rojo, out Verde, out Azul);
                                        Matriz_Bytes[Índice + 2] = Rojo;
                                        Matriz_Bytes[Índice + 1] = Verde;
                                        Matriz_Bytes[Índice] = Azul;
                                    }
                                }
                            }
                        }
                        //if (Textura_Transparente) break;
                    }
                    Marshal.Copy(Matriz_Bytes, 0, Bitmap_Data.Scan0, Matriz_Bytes.Length);
                    Imagen.UnlockBits(Bitmap_Data);
                    Bitmap_Data = null;
                    Matriz_Bytes = null;
                    if (Diccionario_Recolorear.ContainsKey(Diccionario_Bloques_Índices_Nombres[Entrada.Key]))
                    {
                        //Imagen.Save(Application.StartupPath + "\\" + Diccionario_Bloques_Índices_Nombres[Entrada.Key].Replace(':', '_') + ".png", ImageFormat.Png);
                    }
                    /*BitmapData Bitmap_Data = (Imagen).LockBits(new Rectangle(0, 0, 16, 16), ImageLockMode.ReadOnly, PixelFormat.Format32bppArgb);
                    byte[] Matriz_Bytes = new byte[Math.Abs(Bitmap_Data.Stride) * 16];
                    Marshal.Copy(Bitmap_Data.Scan0, Matriz_Bytes, 0, Matriz_Bytes.Length);
                    Imagen.UnlockBits(Bitmap_Data);
                    Bitmap_Data = null;
                    bool Textura_Transparente = false;
                    for (int Y = 0, Índice = 0; Y < 16; Y++)
                    {
                        for (int X = 0; X < 16; X++, Índice += 4)
                        {
                            if (Matriz_Bytes[Índice + 3] < 255)
                            {
                                Textura_Transparente = true;
                                break;
                            }
                        }
                        if (Textura_Transparente) break;
                    }
                    Matriz_Bytes = null;*/
                    if (Píxeles_Completamente_Transparentes) Píxeles_Parcialmente_Transparentes = false;
                    if (Píxeles_Parcialmente_Transparentes) Diccionario_Texturas_Píxeles_Parcialmente_Transparentes.Add(Entrada.Key, Entrada.Value);
                    if (Píxeles_Completamente_Transparentes) Diccionario_Texturas_Píxeles_Completamente_Transparentes.Add(Entrada.Key, Entrada.Value);
                    if (Píxeles_Parcialmente_Transparentes || Píxeles_Completamente_Transparentes) Diccionario_Texturas_Transparentes.Add(Entrada.Key, Entrada.Value);
                }
                else Diccionario_Texturas_Píxeles_Parcialmente_Transparentes.Add(Entrada.Key, Entrada.Value); // Banners
            }

            Chunks.Crear_Matriz_Aire();
            return;

            /*if (!string.IsNullOrEmpty(Ruta_Texturas) && Directory.Exists(Ruta_Texturas))
            {
                foreach (KeyValuePair<string, string> Entrada in Diccionario_Bloques_Nombres_Texturas)
                {
                    if (!string.IsNullOrEmpty(Entrada.Value))
                    {
                        string Ruta_Textura = Ruta_Texturas + "\\" + Entrada.Value + ".png";
                        if (!string.IsNullOrEmpty(Ruta_Textura) && File.Exists(Ruta_Textura))
                        {
                            Color Color_ARGB = Obtener_Color_Único_Imagen(Cargar_Imagen(Ruta_Textura, true));
                            Diccionario_Bloques_Nombres_Colores.Add(Entrada.Key, Color_ARGB);
                        }
                        else Diccionario_Bloques_Nombres_Colores.Add(Entrada.Key, Color_Vacío);
                    }
                    else Diccionario_Bloques_Nombres_Colores.Add(Entrada.Key, Color_Vacío);
                }
            }

            string Texto_Color = null;
            foreach (KeyValuePair<string, Color> Entrada in Diccionario_Bloques_Nombres_Colores)
            {
                Texto_Color += "Diccionario_Bloques_Nombres_Colores.Add(\"" + Entrada.Key + "\", Color.FromArgb(" + Entrada.Value.A + ", " + Entrada.Value.R + ", " + Entrada.Value.G + ", " + Entrada.Value.B + "));\r\n";
            }
            File.WriteAllText(Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory) + "\\Colores, 09-03-2018.txt", Texto_Color);*/

            //MessageBox.Show("FIN...");

            /*foreach (KeyValuePair<string, string> Entrada in Diccionario_Bloques_Nombres_Texturas)
            {
                if (string.IsNullOrEmpty(Entrada.Value) && !Entrada.Key.Contains("_banner"))
                {
                    MessageBox.Show(Entrada.Key);
                }
            }*/

            /*List<string> Lista = new List<string>();
            foreach (KeyValuePair<string, string> Entrada in Diccionario_Bloques_Nombres_Texturas)
            {
                Lista.Add("Diccionario_Bloques_Nombres_Índices.Add(\"minecraft:" + Entrada.Key + "\", Índice_Nombre); Índice_Nombre++;");
            }
            //File.WriteAllLines(Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory) + "\\nai, 09-03-2018.txt", Lista.ToArray());
             Lista.Clear();
            foreach (KeyValuePair<string, string> Entrada in Diccionario_Bloques_Nombres_Texturas)
            {
                Lista.Add("Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, \"minecraft:" + Entrada.Key + "\"); Índice_Nombre++;");
            }*/
            //File.WriteAllLines(Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory) + "\\ian, 09-03-2018.txt", Lista.ToArray());
            return;

            List<string> Lista_Líneas = new List<string>();
            List<string> Lista_Nombres = new List<string>();
            List<string> Lista_Traducciones = new List<string>();
            //string[] Matriz_Líneas = File.ReadAllLines(Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory) + "\\IDs.txt");
            string[] Matriz_Líneas = File.ReadAllLines(Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory) + "\\MC en-us (09-03-2018).txt");
            foreach (string Línea in Matriz_Líneas)
            {
                //int Índice_Minecraft = Línea.IndexOf("minecraft:");
                int Índice_Minecraft = Línea.IndexOf("block.minecraft.");
                if (Índice_Minecraft > -1)
                {
                    string Nombre = null;
                    string Traducción = null;
                    int Índice_Traducción = -1;
                    for (int Índice_Caracter = Índice_Minecraft + "block.minecraft.".Length; Índice_Caracter < Línea.Length; Índice_Caracter++)
                    {
                        if (Línea[Índice_Caracter] != '\"') Nombre += Línea[Índice_Caracter];
                        else
                        {
                            Índice_Traducción = Índice_Caracter;
                            break;
                        }
                    }
                    if (Índice_Traducción > -1) // Fin del nombre
                    {
                        Índice_Traducción = Línea.IndexOf('\"', Índice_Traducción + 1);
                        if (Índice_Traducción > -1) // Buscar el inicio de la traducción
                        {
                            for (int Índice_Caracter = Índice_Traducción + 1; Índice_Caracter < Línea.Length; Índice_Caracter++)
                            {
                                if (Línea[Índice_Caracter] != '\"') Traducción += Línea[Índice_Caracter];
                                else break;
                            }
                        }
                    }
                    if (!string.IsNullOrEmpty(Nombre) && !Nombre.Contains('.') && !Lista_Nombres.Contains(Nombre)) // No repetir
                    {
                        Lista_Nombres.Add(Nombre);
                    }
                    if (!string.IsNullOrEmpty(Traducción) && !Lista_Traducciones.Contains(Traducción)) // No repetir
                    {
                        Lista_Traducciones.Add(Traducción);
                    }
                }
            }
            if (Lista_Nombres.Count > 0)
            {
                //MessageBox.Show(Lista_Nombres.Count.ToString());
                if (Lista_Nombres.Count > 1) Lista_Nombres.Sort(new Comparador_String()); // Ordenar alfabéticamente

                foreach (string Nombre in Lista_Nombres) // Matriz de nombres simple
                {
                    Lista_Líneas.Add("\"minecraft:" + Nombre + "\",");
                }
                Lista_Líneas.Add("");
                Lista_Líneas.Add("// Nombres a Texturas");
                Lista_Líneas.Add("");

                /*string Ruta_Texturas = @"18w10b\assets\minecraft\textures\blocks";
                if (Directory.Exists(Ruta_Texturas))
                {
                    List<string> Lista_Texturas = new List<string>();
                    string[] Matriz_Rutas = Directory.GetFiles(Ruta_Texturas, "*.png", SearchOption.TopDirectoryOnly);
                    foreach (string Ruta in Matriz_Rutas)
                    {
                        Lista_Texturas.Add(Path.GetFileNameWithoutExtension(Ruta));
                    }
                    List<string> Lista_Nombres_Sobrantes = new List<string>();
                    List<string> Lista_Texturas_Sobrantes = new List<string>();
                    foreach (string Nombre in Lista_Nombres) // Nombres de las texturas
                    {
                        if (Lista_Texturas.Contains(Nombre))
                        {
                            Lista_Líneas.Add("Diccionario_Bloques_Nombres_Texturas.Add(\"minecraft:" + Nombre + "\", \"" + Nombre + "\");");
                        }
                        else
                        {
                            Lista_Líneas.Add("Diccionario_Bloques_Nombres_Texturas.Add(\"minecraft:" + Nombre + "\", \"\");");
                            Lista_Texturas_Sobrantes.Add(Nombre);
                        }
                    }
                    Lista_Líneas.Add("");
                    Lista_Líneas.Add("// Nombres a Índices");
                    Lista_Líneas.Add("");
                    foreach (string Nombre in Lista_Texturas) // Nombres de las texturas
                    {
                        if (!Lista_Nombres.Contains(Nombre))
                        {
                            Lista_Nombres_Sobrantes.Add(Nombre);
                        }
                    }
                    //File.WriteAllLines(Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory) + "\\Nombres que faltan, 09-03-2018.txt", Lista_Nombres_Sobrantes.ToArray());
                    //File.WriteAllLines(Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory) + "\\Texturas que faltan, 09-03-2018.txt", Lista_Texturas_Sobrantes.ToArray());
                    //System.Diagnostics.Process.Start(Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory) + "\\Texturas que faltan, 09-03-2018.txt");
                }*/

                //int Índice_Nombre = 0;
                foreach (string Nombre in Lista_Nombres) // Índices de los bloques
                {
                    Lista_Líneas.Add("Diccionario_Bloques_Nombres_Índices.Add(\"minecraft:" + Nombre + "\", Índice_Nombre); Índice_Nombre++;");
                }
                Lista_Líneas.Add("");
                Lista_Líneas.Add("// Índices a Nombres");
                Lista_Líneas.Add("");

                //int Índice_Nombre = 0;
                foreach (string Nombre in Lista_Nombres) // Índices de los bloques invertidos
                {
                    Lista_Líneas.Add("Diccionario_Bloques_Índices_Nombres.Add(Índice_Nombre, \"minecraft:" + Nombre + "\"); Índice_Nombre++;");
                }
                Lista_Líneas.Add("");
                Lista_Líneas.Add("// Fin...");
                Lista_Líneas.Add("");

                //File.WriteAllLines(Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory) + "\\Nombres, 09-03-2018.txt", Lista_Líneas.ToArray());
                //System.Diagnostics.Process.Start(Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory) + "\\Nombres, 09-03-2018.txt");
            }
            return;
        }
    }
}
